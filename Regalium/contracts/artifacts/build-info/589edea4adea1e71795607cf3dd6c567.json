{
	"id": "589edea4adea1e71795607cf3dd6c567",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/regalium.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract RegaliumToken is ERC20, ERC20Burnable, Ownable {\r\n\r\n    uint256 public constant MAX_SUPPLY = 50000000 * 10**18;\r\n    uint256 public totalMined;\r\n    uint256 public difficulty = 10**10;\r\n\r\n    mapping(address => uint256) public stakes;\r\n    mapping(address => uint256) public rewards;\r\n    mapping(address => uint256) public lastStakeTime;\r\n    mapping(address => uint256) public lastUnstakeTime;\r\n    uint256 public totalStaked;\r\n    uint256 public rewardRate = 100;\r\n\r\n    uint256 public constant COOLDOWN_PERIOD = 1 days;\r\n\r\n    address[] public admins;\r\n    mapping(address => bool) public isAdmin;\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin[msg.sender], \"Not an admin\");\r\n        _;\r\n    }\r\n\r\n    constructor(address initialOwner) ERC20(\"Regalium Token\", \"RGLM\") Ownable(initialOwner) {\r\n        _mintWithCapCheck(initialOwner, MAX_SUPPLY * 20 / 100); // Mint 20% of total supply to initialOwner\r\n        admins.push(initialOwner);\r\n        isAdmin[initialOwner] = true;\r\n    }\r\n\r\n    // Internal function to mint tokens with supply cap check\r\n    function _mintWithCapCheck(address account, uint256 amount) internal {\r\n        require(totalSupply() + amount <= MAX_SUPPLY, \"Minting exceeds max supply\");\r\n        _mint(account, amount);\r\n    }\r\n\r\n    // PoW Mining Function\r\n    function mine(uint256 nonce) public {\r\n        require(totalMined < MAX_SUPPLY * 80 / 100, \"All tokens mined\");\r\n\r\n        bytes32 hash = keccak256(abi.encodePacked(msg.sender, nonce));\r\n        require(uint256(hash) < difficulty, \"Mining difficulty not met\");\r\n\r\n        uint256 reward = 50 * 10**18; // Reward for mining\r\n        _mintWithCapCheck(msg.sender, reward);\r\n        totalMined += reward;\r\n    }\r\n\r\n    // Staking Function (PoS)\r\n    function stake(uint256 amount) public {\r\n        require(amount > 0, \"Cannot stake 0 tokens\");\r\n        require(block.timestamp >= lastUnstakeTime[msg.sender] + COOLDOWN_PERIOD, \"Cooldown period not met for staking\");\r\n\r\n        _burn(msg.sender, amount);\r\n        stakes[msg.sender] += amount;\r\n        totalStaked += amount;\r\n        lastStakeTime[msg.sender] = block.timestamp;\r\n    }\r\n\r\n    // Unstaking Function (PoS)\r\n    function unstake(uint256 amount) public {\r\n        require(stakes[msg.sender] >= amount, \"Insufficient stake balance\");\r\n        require(block.timestamp >= lastStakeTime[msg.sender] + COOLDOWN_PERIOD, \"Cooldown period not met for unstaking\");\r\n\r\n        stakes[msg.sender] -= amount;\r\n        totalStaked -= amount;\r\n        _mint(msg.sender, amount);\r\n        lastUnstakeTime[msg.sender] = block.timestamp;\r\n    }\r\n\r\n    // Withdraw Rewards Function (PoS)\r\n    function withdrawRewards() public {\r\n        uint256 reward = calculateReward(msg.sender);\r\n        require(reward > 0, \"No rewards to withdraw\");\r\n        rewards[msg.sender] = 0;\r\n        _mint(msg.sender, reward);\r\n    }\r\n\r\n    // Calculate Rewards for Stakers\r\n    function calculateReward(address staker) public view returns (uint256) {\r\n        uint256 accumulatedReward = stakes[staker] * rewardRate / 10000;\r\n\r\n        // Calculate additional reward based on time since last reward\r\n        uint256 lastTime = lastStakeTime[staker];\r\n        if (lastTime > 0) {\r\n            uint256 timeDiff = block.timestamp - lastTime;\r\n            accumulatedReward += stakes[staker] * rewardRate * timeDiff / (10000 * 365 days);\r\n        }\r\n\r\n        return accumulatedReward + rewards[staker];\r\n    }\r\n\r\n    // Admin functions\r\n    function addAdmin(address newAdmin) public onlyOwner {\r\n        require(!isAdmin[newAdmin], \"Already an admin\");\r\n        isAdmin[newAdmin] = true;\r\n        admins.push(newAdmin);\r\n    }\r\n\r\n    function removeAdmin(address adminToRemove) public onlyOwner {\r\n        require(isAdmin[adminToRemove], \"Not an admin\");\r\n        require(admins.length > 1, \"Cannot remove the last admin\");\r\n\r\n        isAdmin[adminToRemove] = false;\r\n        for (uint256 i = 0; i < admins.length; i++) {\r\n            if (admins[i] == adminToRemove) {\r\n                admins[i] = admins[admins.length - 1];\r\n                admins.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setDifficulty(uint256 _difficulty) public onlyAdmin {\r\n        difficulty = _difficulty;\r\n    }\r\n\r\n    function setRewardRate(uint256 _rewardRate) public onlyAdmin {\r\n        rewardRate = _rewardRate;\r\n    }\r\n\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"Invalid new owner\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function getAdmins() public view returns (address[] memory) {\r\n        return admins;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/regalium.sol": {
				"RegaliumToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "COOLDOWN_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "addAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "admins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staker",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "difficulty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAdmins",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastStakeTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastUnstakeTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "mine",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adminToRemove",
									"type": "address"
								}
							],
							"name": "removeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_difficulty",
									"type": "uint256"
								}
							],
							"name": "setDifficulty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalMined",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/regalium.sol\":250:4894  contract RegaliumToken is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/regalium.sol\":436:442  10**10 */\n  0x02540be400\n    /* \"contracts/regalium.sol\":408:442  uint256 public difficulty = 10**10 */\n  0x07\n  sstore\n    /* \"contracts/regalium.sol\":721:724  100 */\n  0x64\n    /* \"contracts/regalium.sol\":693:724  uint256 public rewardRate = 100 */\n  0x0d\n  sstore\n    /* \"contracts/regalium.sol\":972:1252  constructor(address initialOwner) ERC20(\"Regalium Token\", \"RGLM\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/regalium.sol\":1046:1058  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x526567616c69756d20546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x52474c4d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/regalium.sol\":1071:1125  _mintWithCapCheck(initialOwner, MAX_SUPPLY * 20 / 100) */\n  tag_18\n    /* \"contracts/regalium.sol\":1089:1101  initialOwner */\n  dup2\n    /* \"contracts/regalium.sol\":1121:1124  100 */\n  0x64\n    /* \"contracts/regalium.sol\":1116:1118  20 */\n  0x14\n    /* \"contracts/regalium.sol\":352:369  50000000 * 10**18 */\n  0x295be96e64066972000000\n    /* \"contracts/regalium.sol\":1103:1118  MAX_SUPPLY * 20 */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/regalium.sol\":1103:1124  MAX_SUPPLY * 20 / 100 */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/regalium.sol\":1071:1088  _mintWithCapCheck */\n  shl(0x20, tag_23)\n    /* \"contracts/regalium.sol\":1071:1125  _mintWithCapCheck(initialOwner, MAX_SUPPLY * 20 / 100) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/regalium.sol\":1180:1186  admins */\n  0x0e\n    /* \"contracts/regalium.sol\":1192:1204  initialOwner */\n  dup2\n    /* \"contracts/regalium.sol\":1180:1205  admins.push(initialOwner) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/regalium.sol\":1240:1244  true */\n  0x01\n    /* \"contracts/regalium.sol\":1216:1223  isAdmin */\n  0x0f\n    /* \"contracts/regalium.sol\":1216:1237  isAdmin[initialOwner] */\n  0x00\n    /* \"contracts/regalium.sol\":1224:1236  initialOwner */\n  dup4\n    /* \"contracts/regalium.sol\":1216:1237  isAdmin[initialOwner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/regalium.sol\":1216:1244  isAdmin[initialOwner] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/regalium.sol\":972:1252  constructor(address initialOwner) ERC20(\"Regalium Token\", \"RGLM\") Ownable(initialOwner) {... */\n  pop\n    /* \"contracts/regalium.sol\":250:4894  contract RegaliumToken is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/regalium.sol\":1323:1519  function _mintWithCapCheck(address account, uint256 amount) internal {... */\ntag_23:\n    /* \"contracts/regalium.sol\":352:369  50000000 * 10**18 */\n  0x295be96e64066972000000\n    /* \"contracts/regalium.sol\":1427:1433  amount */\n  dup2\n    /* \"contracts/regalium.sol\":1411:1424  totalSupply() */\n  tag_28\n    /* \"contracts/regalium.sol\":1411:1422  totalSupply */\n  shl(0x20, tag_29)\n    /* \"contracts/regalium.sol\":1411:1424  totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contracts/regalium.sol\":1411:1433  totalSupply() + amount */\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"contracts/regalium.sol\":1411:1447  totalSupply() + amount <= MAX_SUPPLY */\n  gt\n  iszero\n    /* \"contracts/regalium.sol\":1403:1478  require(totalSupply() + amount <= MAX_SUPPLY, \"Minting exceeds max supply\") */\n  tag_32\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_32:\n    /* \"contracts/regalium.sol\":1489:1511  _mint(account, amount) */\n  tag_35\n    /* \"contracts/regalium.sol\":1495:1502  account */\n  dup3\n    /* \"contracts/regalium.sol\":1504:1510  amount */\n  dup3\n    /* \"contracts/regalium.sol\":1489:1494  _mint */\n  shl(0x20, tag_36)\n    /* \"contracts/regalium.sol\":1489:1511  _mint(account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"contracts/regalium.sol\":1323:1519  function _mintWithCapCheck(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n  sload(0x02)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_41\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_42)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_45\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_45:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_46)\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_48\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_51)\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_52\n  swap2\n  swap1\n  tag_53\n  jump\t// in\ntag_52:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_55:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_57:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_58:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_94\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_57\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_59:\n    /* \"#utility.yul\":641:665   */\n  tag_96\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_58\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_97:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_60:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_99\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_59\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_102\n  tag_55\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":932:1051   */\ntag_101:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_103\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_60\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_61:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_62:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_63:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_64:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_108:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_109\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_110\n  tag_63\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1909:1993   */\ntag_109:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_65:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_66:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_67:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_68:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_115\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_67\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2624:2663   */\n  tag_116\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_67\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_69:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_70:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_71:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_120\n    /* \"#utility.yul\":3013:3047   */\n  tag_121\n    /* \"#utility.yul\":3022:3046   */\n  tag_122\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_69\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3013:3047   */\n  tag_70\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2995:3048   */\n  tag_69\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_72:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_73:\n    /* \"#utility.yul\":3251:3290   */\n  tag_125\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_71\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3312:3403   */\n  tag_126\n    /* \"#utility.yul\":3361:3402   */\n  tag_127\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_72\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_68\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_74:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_75:\n    /* \"#utility.yul\":3572:3604   */\n  tag_130\n  tag_74\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3613:3678   */\n  tag_131\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_73\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_76:\n    /* \"#utility.yul\":3750:3870   */\ntag_133:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_136\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_75\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_133)\ntag_135:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_77:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_139\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_65\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4101:4130   */\n  tag_140\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_66\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_141:\n    /* \"#utility.yul\":4328:4408   */\n  tag_142\n    /* \"#utility.yul\":4384:4406   */\n  tag_143\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_66\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_76\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_138:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_78:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_79:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_146\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_78\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_80:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_148\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_79\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_150\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_61\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_152\n  tag_62\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5233:5289   */\ntag_151:\n    /* \"#utility.yul\":5313:5351   */\n  tag_153\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_64\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5398:5465   */\n  tag_154\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_77\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_157:\n    /* \"#utility.yul\":6339:6406   */\n  tag_158\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_80\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_155)\n    /* \"#utility.yul\":5560:6178   */\ntag_156:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_159\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_65\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_160:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_160)\ntag_162:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_164\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_79\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_163:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_155:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_81:\n    /* \"#utility.yul\":6516:6540   */\n  tag_166\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_58\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_168\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_81\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_82:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7377   */\ntag_20:\n    /* \"#utility.yul\":7007:7014   */\n  0x00\n    /* \"#utility.yul\":7030:7050   */\n  tag_171\n    /* \"#utility.yul\":7048:7049   */\n  dup3\n    /* \"#utility.yul\":7030:7050   */\n  tag_69\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7025:7050   */\n  swap2\n  pop\n    /* \"#utility.yul\":7064:7084   */\n  tag_172\n    /* \"#utility.yul\":7082:7083   */\n  dup4\n    /* \"#utility.yul\":7064:7084   */\n  tag_69\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7059:7084   */\n  swap3\n  pop\n    /* \"#utility.yul\":7119:7120   */\n  dup3\n    /* \"#utility.yul\":7116:7117   */\n  dup3\n    /* \"#utility.yul\":7112:7121   */\n  mul\n    /* \"#utility.yul\":7141:7171   */\n  tag_173\n    /* \"#utility.yul\":7159:7170   */\n  dup2\n    /* \"#utility.yul\":7141:7171   */\n  tag_69\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7130:7171   */\n  swap2\n  pop\n    /* \"#utility.yul\":7320:7321   */\n  dup3\n    /* \"#utility.yul\":7311:7318   */\n  dup3\n    /* \"#utility.yul\":7307:7322   */\n  div\n    /* \"#utility.yul\":7304:7305   */\n  dup5\n    /* \"#utility.yul\":7301:7323   */\n  eq\n    /* \"#utility.yul\":7281:7282   */\n  dup4\n    /* \"#utility.yul\":7274:7283   */\n  iszero\n    /* \"#utility.yul\":7254:7337   */\n  or\n    /* \"#utility.yul\":7231:7370   */\n  tag_174\n  jumpi\n    /* \"#utility.yul\":7350:7368   */\n  tag_175\n  tag_82\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7231:7370   */\ntag_174:\n    /* \"#utility.yul\":7015:7377   */\n  pop\n    /* \"#utility.yul\":6967:7377   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7383:7563   */\ntag_83:\n    /* \"#utility.yul\":7431:7508   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7428:7429   */\n  0x00\n    /* \"#utility.yul\":7421:7509   */\n  mstore\n    /* \"#utility.yul\":7528:7532   */\n  0x12\n    /* \"#utility.yul\":7525:7526   */\n  0x04\n    /* \"#utility.yul\":7518:7533   */\n  mstore\n    /* \"#utility.yul\":7552:7556   */\n  0x24\n    /* \"#utility.yul\":7549:7550   */\n  0x00\n    /* \"#utility.yul\":7542:7557   */\n  revert\n    /* \"#utility.yul\":7569:7754   */\ntag_22:\n    /* \"#utility.yul\":7609:7610   */\n  0x00\n    /* \"#utility.yul\":7626:7646   */\n  tag_178\n    /* \"#utility.yul\":7644:7645   */\n  dup3\n    /* \"#utility.yul\":7626:7646   */\n  tag_69\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7621:7646   */\n  swap2\n  pop\n    /* \"#utility.yul\":7660:7680   */\n  tag_179\n    /* \"#utility.yul\":7678:7679   */\n  dup4\n    /* \"#utility.yul\":7660:7680   */\n  tag_69\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7655:7680   */\n  swap3\n  pop\n    /* \"#utility.yul\":7699:7700   */\n  dup3\n    /* \"#utility.yul\":7689:7724   */\n  tag_180\n  jumpi\n    /* \"#utility.yul\":7704:7722   */\n  tag_181\n  tag_83\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7689:7724   */\ntag_180:\n    /* \"#utility.yul\":7746:7747   */\n  dup3\n    /* \"#utility.yul\":7743:7744   */\n  dup3\n    /* \"#utility.yul\":7739:7748   */\n  div\n    /* \"#utility.yul\":7734:7748   */\n  swap1\n  pop\n    /* \"#utility.yul\":7569:7754   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7760:7951   */\ntag_31:\n    /* \"#utility.yul\":7800:7803   */\n  0x00\n    /* \"#utility.yul\":7819:7839   */\n  tag_183\n    /* \"#utility.yul\":7837:7838   */\n  dup3\n    /* \"#utility.yul\":7819:7839   */\n  tag_69\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7814:7839   */\n  swap2\n  pop\n    /* \"#utility.yul\":7853:7873   */\n  tag_184\n    /* \"#utility.yul\":7871:7872   */\n  dup4\n    /* \"#utility.yul\":7853:7873   */\n  tag_69\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7848:7873   */\n  swap3\n  pop\n    /* \"#utility.yul\":7896:7897   */\n  dup3\n    /* \"#utility.yul\":7893:7894   */\n  dup3\n    /* \"#utility.yul\":7889:7898   */\n  add\n    /* \"#utility.yul\":7882:7898   */\n  swap1\n  pop\n    /* \"#utility.yul\":7917:7920   */\n  dup1\n    /* \"#utility.yul\":7914:7915   */\n  dup3\n    /* \"#utility.yul\":7911:7921   */\n  gt\n    /* \"#utility.yul\":7908:7944   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":7924:7942   */\n  tag_186\n  tag_82\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7908:7944   */\ntag_185:\n    /* \"#utility.yul\":7760:7951   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7957:8126   */\ntag_84:\n    /* \"#utility.yul\":8041:8052   */\n  0x00\n    /* \"#utility.yul\":8075:8081   */\n  dup3\n    /* \"#utility.yul\":8070:8073   */\n  dup3\n    /* \"#utility.yul\":8063:8082   */\n  mstore\n    /* \"#utility.yul\":8115:8119   */\n  0x20\n    /* \"#utility.yul\":8110:8113   */\n  dup3\n    /* \"#utility.yul\":8106:8120   */\n  add\n    /* \"#utility.yul\":8091:8120   */\n  swap1\n  pop\n    /* \"#utility.yul\":7957:8126   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8132:8308   */\ntag_85:\n    /* \"#utility.yul\":8272:8300   */\n  0x4d696e74696e672065786365656473206d617820737570706c79000000000000\n    /* \"#utility.yul\":8268:8269   */\n  0x00\n    /* \"#utility.yul\":8260:8266   */\n  dup3\n    /* \"#utility.yul\":8256:8270   */\n  add\n    /* \"#utility.yul\":8249:8301   */\n  mstore\n    /* \"#utility.yul\":8132:8308   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8314:8680   */\ntag_86:\n    /* \"#utility.yul\":8456:8459   */\n  0x00\n    /* \"#utility.yul\":8477:8544   */\n  tag_190\n    /* \"#utility.yul\":8541:8543   */\n  0x1a\n    /* \"#utility.yul\":8536:8539   */\n  dup4\n    /* \"#utility.yul\":8477:8544   */\n  tag_84\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8470:8544   */\n  swap2\n  pop\n    /* \"#utility.yul\":8553:8646   */\n  tag_191\n    /* \"#utility.yul\":8642:8645   */\n  dup3\n    /* \"#utility.yul\":8553:8646   */\n  tag_85\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8671:8673   */\n  0x20\n    /* \"#utility.yul\":8666:8669   */\n  dup3\n    /* \"#utility.yul\":8662:8674   */\n  add\n    /* \"#utility.yul\":8655:8674   */\n  swap1\n  pop\n    /* \"#utility.yul\":8314:8680   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8686:9105   */\ntag_34:\n    /* \"#utility.yul\":8852:8856   */\n  0x00\n    /* \"#utility.yul\":8890:8892   */\n  0x20\n    /* \"#utility.yul\":8879:8888   */\n  dup3\n    /* \"#utility.yul\":8875:8893   */\n  add\n    /* \"#utility.yul\":8867:8893   */\n  swap1\n  pop\n    /* \"#utility.yul\":8939:8948   */\n  dup2\n    /* \"#utility.yul\":8933:8937   */\n  dup2\n    /* \"#utility.yul\":8929:8949   */\n  sub\n    /* \"#utility.yul\":8925:8926   */\n  0x00\n    /* \"#utility.yul\":8914:8923   */\n  dup4\n    /* \"#utility.yul\":8910:8927   */\n  add\n    /* \"#utility.yul\":8903:8950   */\n  mstore\n    /* \"#utility.yul\":8967:9098   */\n  tag_193\n    /* \"#utility.yul\":9093:9097   */\n  dup2\n    /* \"#utility.yul\":8967:9098   */\n  tag_86\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8959:9098   */\n  swap1\n  pop\n    /* \"#utility.yul\":8686:9105   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9111:9229   */\ntag_87:\n    /* \"#utility.yul\":9198:9222   */\n  tag_195\n    /* \"#utility.yul\":9216:9221   */\n  dup2\n    /* \"#utility.yul\":9198:9222   */\n  tag_69\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9193:9196   */\n  dup3\n    /* \"#utility.yul\":9186:9223   */\n  mstore\n    /* \"#utility.yul\":9111:9229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9235:9677   */\ntag_49:\n    /* \"#utility.yul\":9384:9388   */\n  0x00\n    /* \"#utility.yul\":9422:9424   */\n  0x60\n    /* \"#utility.yul\":9411:9420   */\n  dup3\n    /* \"#utility.yul\":9407:9425   */\n  add\n    /* \"#utility.yul\":9399:9425   */\n  swap1\n  pop\n    /* \"#utility.yul\":9435:9506   */\n  tag_197\n    /* \"#utility.yul\":9503:9504   */\n  0x00\n    /* \"#utility.yul\":9492:9501   */\n  dup4\n    /* \"#utility.yul\":9488:9505   */\n  add\n    /* \"#utility.yul\":9479:9485   */\n  dup7\n    /* \"#utility.yul\":9435:9506   */\n  tag_81\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9516:9588   */\n  tag_198\n    /* \"#utility.yul\":9584:9586   */\n  0x20\n    /* \"#utility.yul\":9573:9582   */\n  dup4\n    /* \"#utility.yul\":9569:9587   */\n  add\n    /* \"#utility.yul\":9560:9566   */\n  dup6\n    /* \"#utility.yul\":9516:9588   */\n  tag_87\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9598:9670   */\n  tag_199\n    /* \"#utility.yul\":9666:9668   */\n  0x40\n    /* \"#utility.yul\":9655:9664   */\n  dup4\n    /* \"#utility.yul\":9651:9669   */\n  add\n    /* \"#utility.yul\":9642:9648   */\n  dup5\n    /* \"#utility.yul\":9598:9670   */\n  tag_87\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9235:9677   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9683:9905   */\ntag_53:\n    /* \"#utility.yul\":9776:9780   */\n  0x00\n    /* \"#utility.yul\":9814:9816   */\n  0x20\n    /* \"#utility.yul\":9803:9812   */\n  dup3\n    /* \"#utility.yul\":9799:9817   */\n  add\n    /* \"#utility.yul\":9791:9817   */\n  swap1\n  pop\n    /* \"#utility.yul\":9827:9898   */\n  tag_201\n    /* \"#utility.yul\":9895:9896   */\n  0x00\n    /* \"#utility.yul\":9884:9893   */\n  dup4\n    /* \"#utility.yul\":9880:9897   */\n  add\n    /* \"#utility.yul\":9871:9877   */\n  dup5\n    /* \"#utility.yul\":9827:9898   */\n  tag_87\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9683:9905   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/regalium.sol\":250:4894  contract RegaliumToken is ERC20, ERC20Burnable, Ownable {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/regalium.sol\":250:4894  contract RegaliumToken is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x602512e1\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc7b8981c\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xa6f9dae1\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x715018a6\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x7bb1ca19\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x602512e1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x6e99d52f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x70480275\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x24d7806c\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x32cb6b0c\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x331e03a8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x4d474898\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x5556db65\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x24d7806c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x31ae450b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x16934fc4\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1785f53c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x19cae462\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x14bfd6d0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":499:541  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":790:813  address[] public admins */\n    tag_6:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":451:492  mapping(address => uint256) public stakes */\n    tag_7:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":3915:4393  function removeAdmin(address adminToRemove) public onlyOwner {... */\n    tag_8:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_9:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":408:442  uint256 public difficulty = 10**10 */\n    tag_10:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":820:859  mapping(address => bool) public isAdmin */\n    tag_12:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":2430:2844  function unstake(uint256 amount) public {... */\n    tag_13:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_14:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":4799:4891  function getAdmins() public view returns (address[] memory) {... */\n    tag_15:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":315:369  uint256 public constant MAX_SUPPLY = 50000000 * 10**18 */\n    tag_16:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":603:653  mapping(address => uint256) public lastUnstakeTime */\n    tag_17:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_18:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/regalium.sol\":1555:1963  function mine(uint256 nonce) public {... */\n    tag_19:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/regalium.sol\":376:401  uint256 public totalMined */\n    tag_20:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":4401:4505  function setDifficulty(uint256 _difficulty) public onlyAdmin {... */\n    tag_21:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"contracts/regalium.sol\":733:781  uint256 public constant COOLDOWN_PERIOD = 1 days */\n    tag_22:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":3721:3907  function addAdmin(address newAdmin) public onlyOwner {... */\n    tag_23:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_26:\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      stop\n        /* \"contracts/regalium.sol\":693:724  uint256 public rewardRate = 100 */\n    tag_27:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":548:596  mapping(address => uint256) public lastStakeTime */\n    tag_28:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":660:686  uint256 public totalStaked */\n    tag_29:\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_30:\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_31:\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":4513:4617  function setRewardRate(uint256 _rewardRate) public onlyAdmin {... */\n    tag_32:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n    tag_152:\n      stop\n        /* \"contracts/regalium.sol\":2002:2389  function stake(uint256 amount) public {... */\n    tag_33:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"contracts/regalium.sol\":4625:4791  function changeOwner(address newOwner) public onlyOwner {... */\n    tag_34:\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n    tag_158:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/regalium.sol\":2892:3115  function withdrawRewards() public {... */\n    tag_36:\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      stop\n        /* \"contracts/regalium.sol\":3161:3689  function calculateReward(address staker) public view returns (uint256) {... */\n    tag_37:\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_38:\n      tag_171\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      tag_174\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      tag_175\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n      tag_176\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_177:\n      tag_178\n      jump\t// in\n    tag_176:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_182\n      swap1\n      tag_181\n      jump\t// in\n    tag_182:\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_184\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_183)\n    tag_184:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_185:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_185\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/regalium.sol\":499:541  mapping(address => uint256) public rewards */\n    tag_54:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":790:813  address[] public admins */\n    tag_66:\n      0x0e\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/regalium.sol\":451:492  mapping(address => uint256) public stakes */\n    tag_71:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/regalium.sol\":3915:4393  function removeAdmin(address adminToRemove) public onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/regalium.sol\":3995:4002  isAdmin */\n      0x0f\n        /* \"contracts/regalium.sol\":3995:4017  isAdmin[adminToRemove] */\n      0x00\n        /* \"contracts/regalium.sol\":4003:4016  adminToRemove */\n      dup3\n        /* \"contracts/regalium.sol\":3995:4017  isAdmin[adminToRemove] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/regalium.sol\":3987:4034  require(isAdmin[adminToRemove], \"Not an admin\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/regalium.sol\":4069:4070  1 */\n      0x01\n        /* \"contracts/regalium.sol\":4053:4059  admins */\n      0x0e\n        /* \"contracts/regalium.sol\":4053:4066  admins.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":4053:4070  admins.length > 1 */\n      gt\n        /* \"contracts/regalium.sol\":4045:4103  require(admins.length > 1, \"Cannot remove the last admin\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/regalium.sol\":4141:4146  false */\n      0x00\n        /* \"contracts/regalium.sol\":4116:4123  isAdmin */\n      0x0f\n        /* \"contracts/regalium.sol\":4116:4138  isAdmin[adminToRemove] */\n      0x00\n        /* \"contracts/regalium.sol\":4124:4137  adminToRemove */\n      dup4\n        /* \"contracts/regalium.sol\":4116:4138  isAdmin[adminToRemove] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/regalium.sol\":4116:4146  isAdmin[adminToRemove] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":4162:4171  uint256 i */\n      0x00\n        /* \"contracts/regalium.sol\":4157:4386  for (uint256 i = 0; i < admins.length; i++) {... */\n    tag_203:\n        /* \"contracts/regalium.sol\":4181:4187  admins */\n      0x0e\n        /* \"contracts/regalium.sol\":4181:4194  admins.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":4177:4178  i */\n      dup2\n        /* \"contracts/regalium.sol\":4177:4194  i < admins.length */\n      lt\n        /* \"contracts/regalium.sol\":4157:4386  for (uint256 i = 0; i < admins.length; i++) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/regalium.sol\":4233:4246  adminToRemove */\n      dup2\n        /* \"contracts/regalium.sol\":4220:4246  admins[i] == adminToRemove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/regalium.sol\":4220:4226  admins */\n      0x0e\n        /* \"contracts/regalium.sol\":4227:4228  i */\n      dup3\n        /* \"contracts/regalium.sol\":4220:4229  admins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n    tag_206:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/regalium.sol\":4220:4246  admins[i] == adminToRemove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/regalium.sol\":4216:4375  if (admins[i] == adminToRemove) {... */\n      tag_210\n      jumpi\n        /* \"contracts/regalium.sol\":4279:4285  admins */\n      0x0e\n        /* \"contracts/regalium.sol\":4302:4303  1 */\n      0x01\n        /* \"contracts/regalium.sol\":4286:4292  admins */\n      0x0e\n        /* \"contracts/regalium.sol\":4286:4299  admins.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":4286:4303  admins.length - 1 */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"contracts/regalium.sol\":4279:4304  admins[admins.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_214\n      tag_208\n      jump\t// in\n    tag_214:\n    tag_213:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/regalium.sol\":4267:4273  admins */\n      0x0e\n        /* \"contracts/regalium.sol\":4274:4275  i */\n      dup3\n        /* \"contracts/regalium.sol\":4267:4276  admins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_217\n      tag_208\n      jump\t// in\n    tag_217:\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/regalium.sol\":4267:4304  admins[i] = admins[admins.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":4323:4329  admins */\n      0x0e\n        /* \"contracts/regalium.sol\":4323:4335  admins.pop() */\n      dup1\n      sload\n      dup1\n      tag_219\n      jumpi\n      tag_220\n      tag_221\n      jump\t// in\n    tag_220:\n    tag_219:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/regalium.sol\":4354:4359  break */\n      jump(tag_204)\n        /* \"contracts/regalium.sol\":4216:4375  if (admins[i] == adminToRemove) {... */\n    tag_210:\n        /* \"contracts/regalium.sol\":4196:4199  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/regalium.sol\":4157:4386  for (uint256 i = 0; i < admins.length; i++) {... */\n      jump(tag_203)\n    tag_204:\n      pop\n        /* \"contracts/regalium.sol\":3915:4393  function removeAdmin(address adminToRemove) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/regalium.sol\":408:442  uint256 public difficulty = 10**10 */\n    tag_80:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":820:859  mapping(address => bool) public isAdmin */\n    tag_89:\n      mstore(0x20, 0x0f)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/regalium.sol\":2430:2844  function unstake(uint256 amount) public {... */\n    tag_93:\n        /* \"contracts/regalium.sol\":2511:2517  amount */\n      dup1\n        /* \"contracts/regalium.sol\":2489:2495  stakes */\n      0x08\n        /* \"contracts/regalium.sol\":2489:2507  stakes[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":2496:2506  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2489:2507  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/regalium.sol\":2489:2517  stakes[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/regalium.sol\":2481:2548  require(stakes[msg.sender] >= amount, \"Insufficient stake balance\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"contracts/regalium.sol\":775:781  1 days */\n      0x015180\n        /* \"contracts/regalium.sol\":2586:2599  lastStakeTime */\n      0x0a\n        /* \"contracts/regalium.sol\":2586:2611  lastStakeTime[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":2600:2610  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2586:2611  lastStakeTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/regalium.sol\":2586:2629  lastStakeTime[msg.sender] + COOLDOWN_PERIOD */\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"contracts/regalium.sol\":2567:2582  block.timestamp */\n      timestamp\n        /* \"contracts/regalium.sol\":2567:2629  block.timestamp >= lastStakeTime[msg.sender] + COOLDOWN_PERIOD */\n      lt\n      iszero\n        /* \"contracts/regalium.sol\":2559:2671  require(block.timestamp >= lastStakeTime[msg.sender] + COOLDOWN_PERIOD, \"Cooldown period not met for unstaking\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"contracts/regalium.sol\":2706:2712  amount */\n      dup1\n        /* \"contracts/regalium.sol\":2684:2690  stakes */\n      0x08\n        /* \"contracts/regalium.sol\":2684:2702  stakes[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":2691:2701  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2684:2702  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/regalium.sol\":2684:2712  stakes[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_239\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_239:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":2738:2744  amount */\n      dup1\n        /* \"contracts/regalium.sol\":2723:2734  totalStaked */\n      0x0c\n      0x00\n        /* \"contracts/regalium.sol\":2723:2744  totalStaked -= amount */\n      dup3\n      dup3\n      sload\n      tag_240\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_240:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":2755:2780  _mint(msg.sender, amount) */\n      tag_241\n        /* \"contracts/regalium.sol\":2761:2771  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2773:2779  amount */\n      dup3\n        /* \"contracts/regalium.sol\":2755:2760  _mint */\n      tag_242\n        /* \"contracts/regalium.sol\":2755:2780  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/regalium.sol\":2821:2836  block.timestamp */\n      timestamp\n        /* \"contracts/regalium.sol\":2791:2806  lastUnstakeTime */\n      0x0b\n        /* \"contracts/regalium.sol\":2791:2818  lastUnstakeTime[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":2807:2817  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2791:2818  lastUnstakeTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/regalium.sol\":2791:2836  lastUnstakeTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":2430:2844  function unstake(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/regalium.sol\":4799:4891  function getAdmins() public view returns (address[] memory) {... */\n    tag_99:\n        /* \"contracts/regalium.sol\":4841:4857  address[] memory */\n      0x60\n        /* \"contracts/regalium.sol\":4877:4883  admins */\n      0x0e\n        /* \"contracts/regalium.sol\":4870:4883  return admins */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_245\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_246:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_246\n      jumpi\n    tag_245:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":4799:4891  function getAdmins() public view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/regalium.sol\":315:369  uint256 public constant MAX_SUPPLY = 50000000 * 10**18 */\n    tag_103:\n        /* \"contracts/regalium.sol\":352:369  50000000 * 10**18 */\n      0x295be96e64066972000000\n        /* \"contracts/regalium.sol\":315:369  uint256 public constant MAX_SUPPLY = 50000000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/regalium.sol\":603:653  mapping(address => uint256) public lastUnstakeTime */\n    tag_107:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":1555:1963  function mine(uint256 nonce) public {... */\n    tag_114:\n        /* \"contracts/regalium.sol\":1641:1644  100 */\n      0x64\n        /* \"contracts/regalium.sol\":1636:1638  80 */\n      0x50\n        /* \"contracts/regalium.sol\":352:369  50000000 * 10**18 */\n      0x295be96e64066972000000\n        /* \"contracts/regalium.sol\":1623:1638  MAX_SUPPLY * 80 */\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"contracts/regalium.sol\":1623:1644  MAX_SUPPLY * 80 / 100 */\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"contracts/regalium.sol\":1610:1620  totalMined */\n      sload(0x06)\n        /* \"contracts/regalium.sol\":1610:1644  totalMined < MAX_SUPPLY * 80 / 100 */\n      lt\n        /* \"contracts/regalium.sol\":1602:1665  require(totalMined < MAX_SUPPLY * 80 / 100, \"All tokens mined\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/regalium.sol\":1678:1690  bytes32 hash */\n      0x00\n        /* \"contracts/regalium.sol\":1720:1730  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":1732:1737  nonce */\n      dup3\n        /* \"contracts/regalium.sol\":1703:1738  abi.encodePacked(msg.sender, nonce) */\n      add(0x20, mload(0x40))\n      tag_259\n      swap3\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/regalium.sol\":1693:1739  keccak256(abi.encodePacked(msg.sender, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/regalium.sol\":1678:1739  bytes32 hash = keccak256(abi.encodePacked(msg.sender, nonce)) */\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":1774:1784  difficulty */\n      sload(0x07)\n        /* \"contracts/regalium.sol\":1766:1770  hash */\n      dup2\n        /* \"contracts/regalium.sol\":1758:1771  uint256(hash) */\n      0x00\n      shr\n        /* \"contracts/regalium.sol\":1758:1784  uint256(hash) < difficulty */\n      lt\n        /* \"contracts/regalium.sol\":1750:1814  require(uint256(hash) < difficulty, \"Mining difficulty not met\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"contracts/regalium.sol\":1827:1841  uint256 reward */\n      0x00\n        /* \"contracts/regalium.sol\":1844:1855  50 * 10**18 */\n      0x02b5e3af16b1880000\n        /* \"contracts/regalium.sol\":1827:1855  uint256 reward = 50 * 10**18 */\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":1887:1924  _mintWithCapCheck(msg.sender, reward) */\n      tag_264\n        /* \"contracts/regalium.sol\":1905:1915  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":1917:1923  reward */\n      dup3\n        /* \"contracts/regalium.sol\":1887:1904  _mintWithCapCheck */\n      tag_265\n        /* \"contracts/regalium.sol\":1887:1924  _mintWithCapCheck(msg.sender, reward) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/regalium.sol\":1949:1955  reward */\n      dup1\n        /* \"contracts/regalium.sol\":1935:1945  totalMined */\n      0x06\n      0x00\n        /* \"contracts/regalium.sol\":1935:1955  totalMined += reward */\n      dup3\n      dup3\n      sload\n      tag_266\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_266:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":1591:1963  {... */\n      pop\n      pop\n        /* \"contracts/regalium.sol\":1555:1963  function mine(uint256 nonce) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":376:401  uint256 public totalMined */\n    tag_116:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/regalium.sol\":4401:4505  function setDifficulty(uint256 _difficulty) public onlyAdmin {... */\n    tag_120:\n        /* \"contracts/regalium.sol\":908:915  isAdmin */\n      0x0f\n        /* \"contracts/regalium.sol\":908:927  isAdmin[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":916:926  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":908:927  isAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/regalium.sol\":900:944  require(isAdmin[msg.sender], \"Not an admin\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_199\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"contracts/regalium.sol\":4486:4497  _difficulty */\n      dup1\n        /* \"contracts/regalium.sol\":4473:4483  difficulty */\n      0x07\n        /* \"contracts/regalium.sol\":4473:4497  difficulty = _difficulty */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":4401:4505  function setDifficulty(uint256 _difficulty) public onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":733:781  uint256 public constant COOLDOWN_PERIOD = 1 days */\n    tag_122:\n        /* \"contracts/regalium.sol\":775:781  1 days */\n      0x015180\n        /* \"contracts/regalium.sol\":733:781  uint256 public constant COOLDOWN_PERIOD = 1 days */\n      dup2\n      jump\t// out\n        /* \"contracts/regalium.sol\":3721:3907  function addAdmin(address newAdmin) public onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_272:\n        /* \"contracts/regalium.sol\":3794:3801  isAdmin */\n      0x0f\n        /* \"contracts/regalium.sol\":3794:3811  isAdmin[newAdmin] */\n      0x00\n        /* \"contracts/regalium.sol\":3802:3810  newAdmin */\n      dup3\n        /* \"contracts/regalium.sol\":3794:3811  isAdmin[newAdmin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/regalium.sol\":3793:3811  !isAdmin[newAdmin] */\n      iszero\n        /* \"contracts/regalium.sol\":3785:3832  require(!isAdmin[newAdmin], \"Already an admin\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/regalium.sol\":3863:3867  true */\n      0x01\n        /* \"contracts/regalium.sol\":3843:3850  isAdmin */\n      0x0f\n        /* \"contracts/regalium.sol\":3843:3860  isAdmin[newAdmin] */\n      0x00\n        /* \"contracts/regalium.sol\":3851:3859  newAdmin */\n      dup4\n        /* \"contracts/regalium.sol\":3843:3860  isAdmin[newAdmin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/regalium.sol\":3843:3867  isAdmin[newAdmin] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":3878:3884  admins */\n      0x0e\n        /* \"contracts/regalium.sol\":3890:3898  newAdmin */\n      dup2\n        /* \"contracts/regalium.sol\":3878:3899  admins.push(newAdmin) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":3721:3907  function addAdmin(address newAdmin) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_282\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":693:724  uint256 public rewardRate = 100 */\n    tag_137:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/regalium.sol\":548:596  mapping(address => uint256) public lastStakeTime */\n    tag_141:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/regalium.sol\":660:686  uint256 public totalStaked */\n    tag_144:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_290\n      swap1\n      tag_181\n      jump\t// in\n    tag_290:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_291\n      swap1\n      tag_181\n      jump\t// in\n    tag_291:\n      dup1\n      iszero\n      tag_292\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_293\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_292)\n    tag_293:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_294:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_294\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/regalium.sol\":4513:4617  function setRewardRate(uint256 _rewardRate) public onlyAdmin {... */\n    tag_154:\n        /* \"contracts/regalium.sol\":908:915  isAdmin */\n      0x0f\n        /* \"contracts/regalium.sol\":908:927  isAdmin[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":916:926  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":908:927  isAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/regalium.sol\":900:944  require(isAdmin[msg.sender], \"Not an admin\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_199\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"contracts/regalium.sol\":4598:4609  _rewardRate */\n      dup1\n        /* \"contracts/regalium.sol\":4585:4595  rewardRate */\n      0x0d\n        /* \"contracts/regalium.sol\":4585:4609  rewardRate = _rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":4513:4617  function setRewardRate(uint256 _rewardRate) public onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":2002:2389  function stake(uint256 amount) public {... */\n    tag_157:\n        /* \"contracts/regalium.sol\":2068:2069  0 */\n      0x00\n        /* \"contracts/regalium.sol\":2059:2065  amount */\n      dup2\n        /* \"contracts/regalium.sol\":2059:2069  amount > 0 */\n      gt\n        /* \"contracts/regalium.sol\":2051:2095  require(amount > 0, \"Cannot stake 0 tokens\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"contracts/regalium.sol\":775:781  1 days */\n      0x015180\n        /* \"contracts/regalium.sol\":2133:2148  lastUnstakeTime */\n      0x0b\n        /* \"contracts/regalium.sol\":2133:2160  lastUnstakeTime[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":2149:2159  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2133:2160  lastUnstakeTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/regalium.sol\":2133:2178  lastUnstakeTime[msg.sender] + COOLDOWN_PERIOD */\n      tag_303\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_303:\n        /* \"contracts/regalium.sol\":2114:2129  block.timestamp */\n      timestamp\n        /* \"contracts/regalium.sol\":2114:2178  block.timestamp >= lastUnstakeTime[msg.sender] + COOLDOWN_PERIOD */\n      lt\n      iszero\n        /* \"contracts/regalium.sol\":2106:2218  require(block.timestamp >= lastUnstakeTime[msg.sender] + COOLDOWN_PERIOD, \"Cooldown period not met for staking\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_304:\n        /* \"contracts/regalium.sol\":2231:2256  _burn(msg.sender, amount) */\n      tag_307\n        /* \"contracts/regalium.sol\":2237:2247  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2249:2255  amount */\n      dup3\n        /* \"contracts/regalium.sol\":2231:2236  _burn */\n      tag_250\n        /* \"contracts/regalium.sol\":2231:2256  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/regalium.sol\":2289:2295  amount */\n      dup1\n        /* \"contracts/regalium.sol\":2267:2273  stakes */\n      0x08\n        /* \"contracts/regalium.sol\":2267:2285  stakes[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":2274:2284  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2267:2285  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/regalium.sol\":2267:2295  stakes[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_308\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_308:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":2321:2327  amount */\n      dup1\n        /* \"contracts/regalium.sol\":2306:2317  totalStaked */\n      0x0c\n      0x00\n        /* \"contracts/regalium.sol\":2306:2327  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_309\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_309:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":2366:2381  block.timestamp */\n      timestamp\n        /* \"contracts/regalium.sol\":2338:2351  lastStakeTime */\n      0x0a\n        /* \"contracts/regalium.sol\":2338:2363  lastStakeTime[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":2352:2362  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2338:2363  lastStakeTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/regalium.sol\":2338:2381  lastStakeTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":2002:2389  function stake(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":4625:4791  function changeOwner(address newOwner) public onlyOwner {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_311:\n        /* \"contracts/regalium.sol\":4720:4721  0 */\n      0x00\n        /* \"contracts/regalium.sol\":4700:4722  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/regalium.sol\":4700:4708  newOwner */\n      dup2\n        /* \"contracts/regalium.sol\":4700:4722  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/regalium.sol\":4692:4744  require(newOwner != address(0), \"Invalid new owner\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"contracts/regalium.sol\":4755:4783  _transferOwnership(newOwner) */\n      tag_316\n        /* \"contracts/regalium.sol\":4774:4782  newOwner */\n      dup2\n        /* \"contracts/regalium.sol\":4755:4773  _transferOwnership */\n      tag_283\n        /* \"contracts/regalium.sol\":4755:4783  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_316:\n        /* \"contracts/regalium.sol\":4625:4791  function changeOwner(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":2892:3115  function withdrawRewards() public {... */\n    tag_166:\n        /* \"contracts/regalium.sol\":2937:2951  uint256 reward */\n      0x00\n        /* \"contracts/regalium.sol\":2954:2981  calculateReward(msg.sender) */\n      tag_321\n        /* \"contracts/regalium.sol\":2970:2980  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":2954:2969  calculateReward */\n      tag_169\n        /* \"contracts/regalium.sol\":2954:2981  calculateReward(msg.sender) */\n      jump\t// in\n    tag_321:\n        /* \"contracts/regalium.sol\":2937:2981  uint256 reward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":3009:3010  0 */\n      0x00\n        /* \"contracts/regalium.sol\":3000:3006  reward */\n      dup2\n        /* \"contracts/regalium.sol\":3000:3010  reward > 0 */\n      gt\n        /* \"contracts/regalium.sol\":2992:3037  require(reward > 0, \"No rewards to withdraw\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"contracts/regalium.sol\":3070:3071  0 */\n      0x00\n        /* \"contracts/regalium.sol\":3048:3055  rewards */\n      0x09\n        /* \"contracts/regalium.sol\":3048:3067  rewards[msg.sender] */\n      0x00\n        /* \"contracts/regalium.sol\":3056:3066  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":3048:3067  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/regalium.sol\":3048:3071  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/regalium.sol\":3082:3107  _mint(msg.sender, reward) */\n      tag_325\n        /* \"contracts/regalium.sol\":3088:3098  msg.sender */\n      caller\n        /* \"contracts/regalium.sol\":3100:3106  reward */\n      dup3\n        /* \"contracts/regalium.sol\":3082:3087  _mint */\n      tag_242\n        /* \"contracts/regalium.sol\":3082:3107  _mint(msg.sender, reward) */\n      jump\t// in\n    tag_325:\n        /* \"contracts/regalium.sol\":2926:3115  {... */\n      pop\n        /* \"contracts/regalium.sol\":2892:3115  function withdrawRewards() public {... */\n      jump\t// out\n        /* \"contracts/regalium.sol\":3161:3689  function calculateReward(address staker) public view returns (uint256) {... */\n    tag_169:\n        /* \"contracts/regalium.sol\":3223:3230  uint256 */\n      0x00\n        /* \"contracts/regalium.sol\":3243:3268  uint256 accumulatedReward */\n      dup1\n        /* \"contracts/regalium.sol\":3301:3306  10000 */\n      0x2710\n        /* \"contracts/regalium.sol\":3288:3298  rewardRate */\n      sload(0x0d)\n        /* \"contracts/regalium.sol\":3271:3277  stakes */\n      0x08\n        /* \"contracts/regalium.sol\":3271:3285  stakes[staker] */\n      0x00\n        /* \"contracts/regalium.sol\":3278:3284  staker */\n      dup7\n        /* \"contracts/regalium.sol\":3271:3285  stakes[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/regalium.sol\":3271:3298  stakes[staker] * rewardRate */\n      tag_327\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_327:\n        /* \"contracts/regalium.sol\":3271:3306  stakes[staker] * rewardRate / 10000 */\n      tag_328\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_328:\n        /* \"contracts/regalium.sol\":3243:3306  uint256 accumulatedReward = stakes[staker] * rewardRate / 10000 */\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":3391:3407  uint256 lastTime */\n      0x00\n        /* \"contracts/regalium.sol\":3410:3423  lastStakeTime */\n      0x0a\n        /* \"contracts/regalium.sol\":3410:3431  lastStakeTime[staker] */\n      0x00\n        /* \"contracts/regalium.sol\":3424:3430  staker */\n      dup6\n        /* \"contracts/regalium.sol\":3410:3431  lastStakeTime[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/regalium.sol\":3391:3431  uint256 lastTime = lastStakeTime[staker] */\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":3457:3458  0 */\n      0x00\n        /* \"contracts/regalium.sol\":3446:3454  lastTime */\n      dup2\n        /* \"contracts/regalium.sol\":3446:3458  lastTime > 0 */\n      gt\n        /* \"contracts/regalium.sol\":3442:3627  if (lastTime > 0) {... */\n      iszero\n      tag_329\n      jumpi\n        /* \"contracts/regalium.sol\":3475:3491  uint256 timeDiff */\n      0x00\n        /* \"contracts/regalium.sol\":3512:3520  lastTime */\n      dup2\n        /* \"contracts/regalium.sol\":3494:3509  block.timestamp */\n      timestamp\n        /* \"contracts/regalium.sol\":3494:3520  block.timestamp - lastTime */\n      tag_330\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_330:\n        /* \"contracts/regalium.sol\":3475:3520  uint256 timeDiff = block.timestamp - lastTime */\n      swap1\n      pop\n        /* \"contracts/regalium.sol\":3598:3614  10000 * 365 days */\n      0x496cebb800\n        /* \"contracts/regalium.sol\":3586:3594  timeDiff */\n      dup2\n        /* \"contracts/regalium.sol\":3573:3583  rewardRate */\n      sload(0x0d)\n        /* \"contracts/regalium.sol\":3556:3562  stakes */\n      0x08\n        /* \"contracts/regalium.sol\":3556:3570  stakes[staker] */\n      0x00\n        /* \"contracts/regalium.sol\":3563:3569  staker */\n      dup10\n        /* \"contracts/regalium.sol\":3556:3570  stakes[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/regalium.sol\":3556:3583  stakes[staker] * rewardRate */\n      tag_331\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_331:\n        /* \"contracts/regalium.sol\":3556:3594  stakes[staker] * rewardRate * timeDiff */\n      tag_332\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_332:\n        /* \"contracts/regalium.sol\":3556:3615  stakes[staker] * rewardRate * timeDiff / (10000 * 365 days) */\n      tag_333\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_333:\n        /* \"contracts/regalium.sol\":3535:3615  accumulatedReward += stakes[staker] * rewardRate * timeDiff / (10000 * 365 days) */\n      dup4\n      tag_334\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_334:\n      swap3\n      pop\n        /* \"contracts/regalium.sol\":3460:3627  {... */\n      pop\n        /* \"contracts/regalium.sol\":3442:3627  if (lastTime > 0) {... */\n    tag_329:\n        /* \"contracts/regalium.sol\":3666:3673  rewards */\n      0x09\n        /* \"contracts/regalium.sol\":3666:3681  rewards[staker] */\n      0x00\n        /* \"contracts/regalium.sol\":3674:3680  staker */\n      dup6\n        /* \"contracts/regalium.sol\":3666:3681  rewards[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/regalium.sol\":3646:3663  accumulatedReward */\n      dup3\n        /* \"contracts/regalium.sol\":3646:3681  accumulatedReward + rewards[staker] */\n      tag_335\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_335:\n        /* \"contracts/regalium.sol\":3639:3681  return accumulatedReward + rewards[staker] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/regalium.sol\":3161:3689  function calculateReward(address staker) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_338\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_342\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_345\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_346\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_348\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_349\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_354\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_346\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_362\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_362:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_365\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_366\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_370\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_366\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_373\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_374\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_366\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/regalium.sol\":1323:1519  function _mintWithCapCheck(address account, uint256 amount) internal {... */\n    tag_265:\n        /* \"contracts/regalium.sol\":352:369  50000000 * 10**18 */\n      0x295be96e64066972000000\n        /* \"contracts/regalium.sol\":1427:1433  amount */\n      dup2\n        /* \"contracts/regalium.sol\":1411:1424  totalSupply() */\n      tag_376\n        /* \"contracts/regalium.sol\":1411:1422  totalSupply */\n      tag_77\n        /* \"contracts/regalium.sol\":1411:1424  totalSupply() */\n      jump\t// in\n    tag_376:\n        /* \"contracts/regalium.sol\":1411:1433  totalSupply() + amount */\n      tag_377\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_377:\n        /* \"contracts/regalium.sol\":1411:1447  totalSupply() + amount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/regalium.sol\":1403:1478  require(totalSupply() + amount <= MAX_SUPPLY, \"Minting exceeds max supply\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap1\n      tag_380\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_378:\n        /* \"contracts/regalium.sol\":1489:1511  _mint(account, amount) */\n      tag_381\n        /* \"contracts/regalium.sol\":1495:1502  account */\n      dup3\n        /* \"contracts/regalium.sol\":1504:1510  amount */\n      dup3\n        /* \"contracts/regalium.sol\":1489:1494  _mint */\n      tag_242\n        /* \"contracts/regalium.sol\":1489:1511  _mint(account, amount) */\n      jump\t// in\n    tag_381:\n        /* \"contracts/regalium.sol\":1323:1519  function _mintWithCapCheck(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_385\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_385:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_389\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_391\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_392\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_392:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_393)\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_396\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_397)\n    tag_396:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_398\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_398:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_399:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_400:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_401:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_402:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_403:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_466\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_399\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":711:782   */\n      tag_467\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_400\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_468\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_401\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":881:910   */\n      tag_469\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_402\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_50:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_471\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_403\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_405:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_407:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_408:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_477\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_407\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_409:\n        /* \"#utility.yul\":1876:1900   */\n      tag_479\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_408\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_480:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_410:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_482\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_409\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2405   */\n    tag_53:\n        /* \"#utility.yul\":2135:2141   */\n      0x00\n        /* \"#utility.yul\":2184:2186   */\n      0x20\n        /* \"#utility.yul\":2172:2181   */\n      dup3\n        /* \"#utility.yul\":2163:2170   */\n      dup5\n        /* \"#utility.yul\":2159:2182   */\n      sub\n        /* \"#utility.yul\":2155:2187   */\n      slt\n        /* \"#utility.yul\":2152:2271   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":2190:2269   */\n      tag_485\n      tag_405\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":2152:2271   */\n    tag_484:\n        /* \"#utility.yul\":2310:2311   */\n      0x00\n        /* \"#utility.yul\":2335:2388   */\n      tag_486\n        /* \"#utility.yul\":2380:2387   */\n      dup5\n        /* \"#utility.yul\":2371:2377   */\n      dup3\n        /* \"#utility.yul\":2360:2369   */\n      dup6\n        /* \"#utility.yul\":2356:2378   */\n      add\n        /* \"#utility.yul\":2335:2388   */\n      tag_410\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":2325:2388   */\n      swap2\n      pop\n        /* \"#utility.yul\":2281:2398   */\n      pop\n        /* \"#utility.yul\":2076:2405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2411:2488   */\n    tag_411:\n        /* \"#utility.yul\":2448:2455   */\n      0x00\n        /* \"#utility.yul\":2477:2482   */\n      dup2\n        /* \"#utility.yul\":2466:2482   */\n      swap1\n      pop\n        /* \"#utility.yul\":2411:2488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2494:2612   */\n    tag_412:\n        /* \"#utility.yul\":2581:2605   */\n      tag_489\n        /* \"#utility.yul\":2599:2604   */\n      dup2\n        /* \"#utility.yul\":2581:2605   */\n      tag_411\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":2576:2579   */\n      dup3\n        /* \"#utility.yul\":2569:2606   */\n      mstore\n        /* \"#utility.yul\":2494:2612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2618:2840   */\n    tag_56:\n        /* \"#utility.yul\":2711:2715   */\n      0x00\n        /* \"#utility.yul\":2749:2751   */\n      0x20\n        /* \"#utility.yul\":2738:2747   */\n      dup3\n        /* \"#utility.yul\":2734:2752   */\n      add\n        /* \"#utility.yul\":2726:2752   */\n      swap1\n      pop\n        /* \"#utility.yul\":2762:2833   */\n      tag_491\n        /* \"#utility.yul\":2830:2831   */\n      0x00\n        /* \"#utility.yul\":2819:2828   */\n      dup4\n        /* \"#utility.yul\":2815:2832   */\n      add\n        /* \"#utility.yul\":2806:2812   */\n      dup5\n        /* \"#utility.yul\":2762:2833   */\n      tag_412\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":2618:2840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:2968   */\n    tag_413:\n        /* \"#utility.yul\":2919:2943   */\n      tag_493\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2919:2943   */\n      tag_411\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2909:2944   */\n      eq\n        /* \"#utility.yul\":2899:2962   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2955:2956   */\n      dup1\n        /* \"#utility.yul\":2948:2960   */\n      revert\n        /* \"#utility.yul\":2899:2962   */\n    tag_494:\n        /* \"#utility.yul\":2846:2968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2974:3113   */\n    tag_414:\n        /* \"#utility.yul\":3020:3025   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3045:3065   */\n      calldataload\n        /* \"#utility.yul\":3036:3065   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3107   */\n      tag_496\n        /* \"#utility.yul\":3101:3106   */\n      dup2\n        /* \"#utility.yul\":3074:3107   */\n      tag_413\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":2974:3113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3593   */\n    tag_59:\n        /* \"#utility.yul\":3187:3193   */\n      0x00\n        /* \"#utility.yul\":3195:3201   */\n      dup1\n        /* \"#utility.yul\":3244:3246   */\n      0x40\n        /* \"#utility.yul\":3232:3241   */\n      dup4\n        /* \"#utility.yul\":3223:3230   */\n      dup6\n        /* \"#utility.yul\":3219:3242   */\n      sub\n        /* \"#utility.yul\":3215:3247   */\n      slt\n        /* \"#utility.yul\":3212:3331   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":3250:3329   */\n      tag_499\n      tag_405\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":3212:3331   */\n    tag_498:\n        /* \"#utility.yul\":3370:3371   */\n      0x00\n        /* \"#utility.yul\":3395:3448   */\n      tag_500\n        /* \"#utility.yul\":3440:3447   */\n      dup6\n        /* \"#utility.yul\":3431:3437   */\n      dup3\n        /* \"#utility.yul\":3420:3429   */\n      dup7\n        /* \"#utility.yul\":3416:3438   */\n      add\n        /* \"#utility.yul\":3395:3448   */\n      tag_410\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":3385:3448   */\n      swap3\n      pop\n        /* \"#utility.yul\":3341:3458   */\n      pop\n        /* \"#utility.yul\":3497:3499   */\n      0x20\n        /* \"#utility.yul\":3523:3576   */\n      tag_501\n        /* \"#utility.yul\":3568:3575   */\n      dup6\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup7\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_414\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3468:3586   */\n      pop\n        /* \"#utility.yul\":3119:3593   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3689   */\n    tag_415:\n        /* \"#utility.yul\":3633:3640   */\n      0x00\n        /* \"#utility.yul\":3676:3681   */\n      dup2\n        /* \"#utility.yul\":3669:3682   */\n      iszero\n        /* \"#utility.yul\":3662:3683   */\n      iszero\n        /* \"#utility.yul\":3651:3683   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3695:3804   */\n    tag_416:\n        /* \"#utility.yul\":3776:3797   */\n      tag_504\n        /* \"#utility.yul\":3791:3796   */\n      dup2\n        /* \"#utility.yul\":3776:3797   */\n      tag_415\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":3771:3774   */\n      dup3\n        /* \"#utility.yul\":3764:3798   */\n      mstore\n        /* \"#utility.yul\":3695:3804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3810:4020   */\n    tag_62:\n        /* \"#utility.yul\":3897:3901   */\n      0x00\n        /* \"#utility.yul\":3935:3937   */\n      0x20\n        /* \"#utility.yul\":3924:3933   */\n      dup3\n        /* \"#utility.yul\":3920:3938   */\n      add\n        /* \"#utility.yul\":3912:3938   */\n      swap1\n      pop\n        /* \"#utility.yul\":3948:4013   */\n      tag_506\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3948:4013   */\n      tag_416\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":3810:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4355   */\n    tag_65:\n        /* \"#utility.yul\":4085:4091   */\n      0x00\n        /* \"#utility.yul\":4134:4136   */\n      0x20\n        /* \"#utility.yul\":4122:4131   */\n      dup3\n        /* \"#utility.yul\":4113:4120   */\n      dup5\n        /* \"#utility.yul\":4109:4132   */\n      sub\n        /* \"#utility.yul\":4105:4137   */\n      slt\n        /* \"#utility.yul\":4102:4221   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":4140:4219   */\n      tag_509\n      tag_405\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":4102:4221   */\n    tag_508:\n        /* \"#utility.yul\":4260:4261   */\n      0x00\n        /* \"#utility.yul\":4285:4338   */\n      tag_510\n        /* \"#utility.yul\":4330:4337   */\n      dup5\n        /* \"#utility.yul\":4321:4327   */\n      dup3\n        /* \"#utility.yul\":4310:4319   */\n      dup6\n        /* \"#utility.yul\":4306:4328   */\n      add\n        /* \"#utility.yul\":4285:4338   */\n      tag_414\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":4275:4338   */\n      swap2\n      pop\n        /* \"#utility.yul\":4231:4348   */\n      pop\n        /* \"#utility.yul\":4026:4355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4361:4479   */\n    tag_417:\n        /* \"#utility.yul\":4448:4472   */\n      tag_512\n        /* \"#utility.yul\":4466:4471   */\n      dup2\n        /* \"#utility.yul\":4448:4472   */\n      tag_408\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4443:4446   */\n      dup3\n        /* \"#utility.yul\":4436:4473   */\n      mstore\n        /* \"#utility.yul\":4361:4479   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4485:4707   */\n    tag_68:\n        /* \"#utility.yul\":4578:4582   */\n      0x00\n        /* \"#utility.yul\":4616:4618   */\n      0x20\n        /* \"#utility.yul\":4605:4614   */\n      dup3\n        /* \"#utility.yul\":4601:4619   */\n      add\n        /* \"#utility.yul\":4593:4619   */\n      swap1\n      pop\n        /* \"#utility.yul\":4629:4700   */\n      tag_514\n        /* \"#utility.yul\":4697:4698   */\n      0x00\n        /* \"#utility.yul\":4686:4695   */\n      dup4\n        /* \"#utility.yul\":4682:4699   */\n      add\n        /* \"#utility.yul\":4673:4679   */\n      dup5\n        /* \"#utility.yul\":4629:4700   */\n      tag_417\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":4485:4707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4713:5332   */\n    tag_84:\n        /* \"#utility.yul\":4790:4796   */\n      0x00\n        /* \"#utility.yul\":4798:4804   */\n      dup1\n        /* \"#utility.yul\":4806:4812   */\n      0x00\n        /* \"#utility.yul\":4855:4857   */\n      0x60\n        /* \"#utility.yul\":4843:4852   */\n      dup5\n        /* \"#utility.yul\":4834:4841   */\n      dup7\n        /* \"#utility.yul\":4830:4853   */\n      sub\n        /* \"#utility.yul\":4826:4858   */\n      slt\n        /* \"#utility.yul\":4823:4942   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":4861:4940   */\n      tag_517\n      tag_405\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":4823:4942   */\n    tag_516:\n        /* \"#utility.yul\":4981:4982   */\n      0x00\n        /* \"#utility.yul\":5006:5059   */\n      tag_518\n        /* \"#utility.yul\":5051:5058   */\n      dup7\n        /* \"#utility.yul\":5042:5048   */\n      dup3\n        /* \"#utility.yul\":5031:5040   */\n      dup8\n        /* \"#utility.yul\":5027:5049   */\n      add\n        /* \"#utility.yul\":5006:5059   */\n      tag_410\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":4996:5059   */\n      swap4\n      pop\n        /* \"#utility.yul\":4952:5069   */\n      pop\n        /* \"#utility.yul\":5108:5110   */\n      0x20\n        /* \"#utility.yul\":5134:5187   */\n      tag_519\n        /* \"#utility.yul\":5179:5186   */\n      dup7\n        /* \"#utility.yul\":5170:5176   */\n      dup3\n        /* \"#utility.yul\":5159:5168   */\n      dup8\n        /* \"#utility.yul\":5155:5177   */\n      add\n        /* \"#utility.yul\":5134:5187   */\n      tag_410\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":5124:5187   */\n      swap3\n      pop\n        /* \"#utility.yul\":5079:5197   */\n      pop\n        /* \"#utility.yul\":5236:5238   */\n      0x40\n        /* \"#utility.yul\":5262:5315   */\n      tag_520\n        /* \"#utility.yul\":5307:5314   */\n      dup7\n        /* \"#utility.yul\":5298:5304   */\n      dup3\n        /* \"#utility.yul\":5287:5296   */\n      dup8\n        /* \"#utility.yul\":5283:5305   */\n      add\n        /* \"#utility.yul\":5262:5315   */\n      tag_414\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":5252:5315   */\n      swap2\n      pop\n        /* \"#utility.yul\":5207:5325   */\n      pop\n        /* \"#utility.yul\":4713:5332   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5338:5424   */\n    tag_418:\n        /* \"#utility.yul\":5373:5380   */\n      0x00\n        /* \"#utility.yul\":5413:5417   */\n      0xff\n        /* \"#utility.yul\":5406:5411   */\n      dup3\n        /* \"#utility.yul\":5402:5418   */\n      and\n        /* \"#utility.yul\":5391:5418   */\n      swap1\n      pop\n        /* \"#utility.yul\":5338:5424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5542   */\n    tag_419:\n        /* \"#utility.yul\":5513:5535   */\n      tag_523\n        /* \"#utility.yul\":5529:5534   */\n      dup2\n        /* \"#utility.yul\":5513:5535   */\n      tag_418\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5536   */\n      mstore\n        /* \"#utility.yul\":5430:5542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5762   */\n    tag_97:\n        /* \"#utility.yul\":5637:5641   */\n      0x00\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"#utility.yul\":5664:5673   */\n      dup3\n        /* \"#utility.yul\":5660:5678   */\n      add\n        /* \"#utility.yul\":5652:5678   */\n      swap1\n      pop\n        /* \"#utility.yul\":5688:5755   */\n      tag_525\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5688:5755   */\n      tag_419\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":5548:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5882   */\n    tag_420:\n        /* \"#utility.yul\":5835:5841   */\n      0x00\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5863:5875   */\n      mload\n        /* \"#utility.yul\":5853:5875   */\n      swap1\n      pop\n        /* \"#utility.yul\":5768:5882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6072   */\n    tag_421:\n        /* \"#utility.yul\":5987:5998   */\n      0x00\n        /* \"#utility.yul\":6021:6027   */\n      dup3\n        /* \"#utility.yul\":6016:6019   */\n      dup3\n        /* \"#utility.yul\":6009:6028   */\n      mstore\n        /* \"#utility.yul\":6061:6065   */\n      0x20\n        /* \"#utility.yul\":6056:6059   */\n      dup3\n        /* \"#utility.yul\":6052:6066   */\n      add\n        /* \"#utility.yul\":6037:6066   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:6072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6078:6210   */\n    tag_422:\n        /* \"#utility.yul\":6145:6149   */\n      0x00\n        /* \"#utility.yul\":6168:6171   */\n      dup2\n        /* \"#utility.yul\":6160:6171   */\n      swap1\n      pop\n        /* \"#utility.yul\":6198:6202   */\n      0x20\n        /* \"#utility.yul\":6193:6196   */\n      dup3\n        /* \"#utility.yul\":6189:6203   */\n      add\n        /* \"#utility.yul\":6181:6203   */\n      swap1\n      pop\n        /* \"#utility.yul\":6078:6210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6216:6324   */\n    tag_423:\n        /* \"#utility.yul\":6293:6317   */\n      tag_530\n        /* \"#utility.yul\":6311:6316   */\n      dup2\n        /* \"#utility.yul\":6293:6317   */\n      tag_408\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":6288:6291   */\n      dup3\n        /* \"#utility.yul\":6281:6318   */\n      mstore\n        /* \"#utility.yul\":6216:6324   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6330:6509   */\n    tag_424:\n        /* \"#utility.yul\":6399:6409   */\n      0x00\n        /* \"#utility.yul\":6420:6466   */\n      tag_532\n        /* \"#utility.yul\":6462:6465   */\n      dup4\n        /* \"#utility.yul\":6454:6460   */\n      dup4\n        /* \"#utility.yul\":6420:6466   */\n      tag_423\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":6498:6502   */\n      0x20\n        /* \"#utility.yul\":6493:6496   */\n      dup4\n        /* \"#utility.yul\":6489:6503   */\n      add\n        /* \"#utility.yul\":6475:6503   */\n      swap1\n      pop\n        /* \"#utility.yul\":6330:6509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6515:6628   */\n    tag_425:\n        /* \"#utility.yul\":6585:6589   */\n      0x00\n        /* \"#utility.yul\":6617:6621   */\n      0x20\n        /* \"#utility.yul\":6612:6615   */\n      dup3\n        /* \"#utility.yul\":6608:6622   */\n      add\n        /* \"#utility.yul\":6600:6622   */\n      swap1\n      pop\n        /* \"#utility.yul\":6515:6628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6664:7396   */\n    tag_426:\n        /* \"#utility.yul\":6783:6786   */\n      0x00\n        /* \"#utility.yul\":6812:6866   */\n      tag_535\n        /* \"#utility.yul\":6860:6865   */\n      dup3\n        /* \"#utility.yul\":6812:6866   */\n      tag_420\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":6882:6968   */\n      tag_536\n        /* \"#utility.yul\":6961:6967   */\n      dup2\n        /* \"#utility.yul\":6956:6959   */\n      dup6\n        /* \"#utility.yul\":6882:6968   */\n      tag_421\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":6875:6968   */\n      swap4\n      pop\n        /* \"#utility.yul\":6992:7048   */\n      tag_537\n        /* \"#utility.yul\":7042:7047   */\n      dup4\n        /* \"#utility.yul\":6992:7048   */\n      tag_422\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7071:7078   */\n      dup1\n        /* \"#utility.yul\":7102:7103   */\n      0x00\n        /* \"#utility.yul\":7087:7371   */\n    tag_538:\n        /* \"#utility.yul\":7112:7118   */\n      dup4\n        /* \"#utility.yul\":7109:7110   */\n      dup2\n        /* \"#utility.yul\":7106:7119   */\n      lt\n        /* \"#utility.yul\":7087:7371   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":7188:7194   */\n      dup2\n        /* \"#utility.yul\":7182:7195   */\n      mload\n        /* \"#utility.yul\":7215:7278   */\n      tag_541\n        /* \"#utility.yul\":7274:7277   */\n      dup9\n        /* \"#utility.yul\":7259:7272   */\n      dup3\n        /* \"#utility.yul\":7215:7278   */\n      tag_424\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7208:7278   */\n      swap8\n      pop\n        /* \"#utility.yul\":7301:7361   */\n      tag_542\n        /* \"#utility.yul\":7354:7360   */\n      dup4\n        /* \"#utility.yul\":7301:7361   */\n      tag_425\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":7291:7361   */\n      swap3\n      pop\n        /* \"#utility.yul\":7147:7371   */\n      pop\n        /* \"#utility.yul\":7134:7135   */\n      0x01\n        /* \"#utility.yul\":7131:7132   */\n      dup2\n        /* \"#utility.yul\":7127:7136   */\n      add\n        /* \"#utility.yul\":7122:7136   */\n      swap1\n      pop\n        /* \"#utility.yul\":7087:7371   */\n      jump(tag_538)\n    tag_540:\n        /* \"#utility.yul\":7091:7105   */\n      pop\n        /* \"#utility.yul\":7387:7390   */\n      dup6\n        /* \"#utility.yul\":7380:7390   */\n      swap4\n      pop\n        /* \"#utility.yul\":6788:7396   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6664:7396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7402:7775   */\n    tag_101:\n        /* \"#utility.yul\":7545:7549   */\n      0x00\n        /* \"#utility.yul\":7583:7585   */\n      0x20\n        /* \"#utility.yul\":7572:7581   */\n      dup3\n        /* \"#utility.yul\":7568:7586   */\n      add\n        /* \"#utility.yul\":7560:7586   */\n      swap1\n      pop\n        /* \"#utility.yul\":7632:7641   */\n      dup2\n        /* \"#utility.yul\":7626:7630   */\n      dup2\n        /* \"#utility.yul\":7622:7642   */\n      sub\n        /* \"#utility.yul\":7618:7619   */\n      0x00\n        /* \"#utility.yul\":7607:7616   */\n      dup4\n        /* \"#utility.yul\":7603:7620   */\n      add\n        /* \"#utility.yul\":7596:7643   */\n      mstore\n        /* \"#utility.yul\":7660:7768   */\n      tag_544\n        /* \"#utility.yul\":7763:7767   */\n      dup2\n        /* \"#utility.yul\":7754:7760   */\n      dup5\n        /* \"#utility.yul\":7660:7768   */\n      tag_426\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":7652:7768   */\n      swap1\n      pop\n        /* \"#utility.yul\":7402:7775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7781:8255   */\n    tag_173:\n        /* \"#utility.yul\":7849:7855   */\n      0x00\n        /* \"#utility.yul\":7857:7863   */\n      dup1\n        /* \"#utility.yul\":7906:7908   */\n      0x40\n        /* \"#utility.yul\":7894:7903   */\n      dup4\n        /* \"#utility.yul\":7885:7892   */\n      dup6\n        /* \"#utility.yul\":7881:7904   */\n      sub\n        /* \"#utility.yul\":7877:7909   */\n      slt\n        /* \"#utility.yul\":7874:7993   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":7912:7991   */\n      tag_547\n      tag_405\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":7874:7993   */\n    tag_546:\n        /* \"#utility.yul\":8032:8033   */\n      0x00\n        /* \"#utility.yul\":8057:8110   */\n      tag_548\n        /* \"#utility.yul\":8102:8109   */\n      dup6\n        /* \"#utility.yul\":8093:8099   */\n      dup3\n        /* \"#utility.yul\":8082:8091   */\n      dup7\n        /* \"#utility.yul\":8078:8100   */\n      add\n        /* \"#utility.yul\":8057:8110   */\n      tag_410\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":8047:8110   */\n      swap3\n      pop\n        /* \"#utility.yul\":8003:8120   */\n      pop\n        /* \"#utility.yul\":8159:8161   */\n      0x20\n        /* \"#utility.yul\":8185:8238   */\n      tag_549\n        /* \"#utility.yul\":8230:8237   */\n      dup6\n        /* \"#utility.yul\":8221:8227   */\n      dup3\n        /* \"#utility.yul\":8210:8219   */\n      dup7\n        /* \"#utility.yul\":8206:8228   */\n      add\n        /* \"#utility.yul\":8185:8238   */\n      tag_410\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":8175:8238   */\n      swap2\n      pop\n        /* \"#utility.yul\":8130:8248   */\n      pop\n        /* \"#utility.yul\":7781:8255   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8261:8441   */\n    tag_427:\n        /* \"#utility.yul\":8309:8386   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8306:8307   */\n      0x00\n        /* \"#utility.yul\":8299:8387   */\n      mstore\n        /* \"#utility.yul\":8406:8410   */\n      0x22\n        /* \"#utility.yul\":8403:8404   */\n      0x04\n        /* \"#utility.yul\":8396:8411   */\n      mstore\n        /* \"#utility.yul\":8430:8434   */\n      0x24\n        /* \"#utility.yul\":8427:8428   */\n      0x00\n        /* \"#utility.yul\":8420:8435   */\n      revert\n        /* \"#utility.yul\":8447:8767   */\n    tag_181:\n        /* \"#utility.yul\":8491:8497   */\n      0x00\n        /* \"#utility.yul\":8528:8529   */\n      0x02\n        /* \"#utility.yul\":8522:8526   */\n      dup3\n        /* \"#utility.yul\":8518:8530   */\n      div\n        /* \"#utility.yul\":8508:8530   */\n      swap1\n      pop\n        /* \"#utility.yul\":8575:8576   */\n      0x01\n        /* \"#utility.yul\":8569:8573   */\n      dup3\n        /* \"#utility.yul\":8565:8577   */\n      and\n        /* \"#utility.yul\":8596:8614   */\n      dup1\n        /* \"#utility.yul\":8586:8667   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":8652:8656   */\n      0x7f\n        /* \"#utility.yul\":8644:8650   */\n      dup3\n        /* \"#utility.yul\":8640:8657   */\n      and\n        /* \"#utility.yul\":8630:8657   */\n      swap2\n      pop\n        /* \"#utility.yul\":8586:8667   */\n    tag_552:\n        /* \"#utility.yul\":8714:8716   */\n      0x20\n        /* \"#utility.yul\":8706:8712   */\n      dup3\n        /* \"#utility.yul\":8703:8717   */\n      lt\n        /* \"#utility.yul\":8683:8701   */\n      dup2\n        /* \"#utility.yul\":8680:8718   */\n      sub\n        /* \"#utility.yul\":8677:8761   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":8733:8751   */\n      tag_554\n      tag_427\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":8677:8761   */\n    tag_553:\n        /* \"#utility.yul\":8498:8767   */\n      pop\n        /* \"#utility.yul\":8447:8767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8773:8935   */\n    tag_428:\n        /* \"#utility.yul\":8913:8927   */\n      0x4e6f7420616e2061646d696e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":8909:8910   */\n      0x00\n        /* \"#utility.yul\":8901:8907   */\n      dup3\n        /* \"#utility.yul\":8897:8911   */\n      add\n        /* \"#utility.yul\":8890:8928   */\n      mstore\n        /* \"#utility.yul\":8773:8935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8941:9307   */\n    tag_429:\n        /* \"#utility.yul\":9083:9086   */\n      0x00\n        /* \"#utility.yul\":9104:9171   */\n      tag_557\n        /* \"#utility.yul\":9168:9170   */\n      0x0c\n        /* \"#utility.yul\":9163:9166   */\n      dup4\n        /* \"#utility.yul\":9104:9171   */\n      tag_400\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9097:9171   */\n      swap2\n      pop\n        /* \"#utility.yul\":9180:9273   */\n      tag_558\n        /* \"#utility.yul\":9269:9272   */\n      dup3\n        /* \"#utility.yul\":9180:9273   */\n      tag_428\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9298:9300   */\n      0x20\n        /* \"#utility.yul\":9293:9296   */\n      dup3\n        /* \"#utility.yul\":9289:9301   */\n      add\n        /* \"#utility.yul\":9282:9301   */\n      swap1\n      pop\n        /* \"#utility.yul\":8941:9307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9313:9732   */\n    tag_199:\n        /* \"#utility.yul\":9479:9483   */\n      0x00\n        /* \"#utility.yul\":9517:9519   */\n      0x20\n        /* \"#utility.yul\":9506:9515   */\n      dup3\n        /* \"#utility.yul\":9502:9520   */\n      add\n        /* \"#utility.yul\":9494:9520   */\n      swap1\n      pop\n        /* \"#utility.yul\":9566:9575   */\n      dup2\n        /* \"#utility.yul\":9560:9564   */\n      dup2\n        /* \"#utility.yul\":9556:9576   */\n      sub\n        /* \"#utility.yul\":9552:9553   */\n      0x00\n        /* \"#utility.yul\":9541:9550   */\n      dup4\n        /* \"#utility.yul\":9537:9554   */\n      add\n        /* \"#utility.yul\":9530:9577   */\n      mstore\n        /* \"#utility.yul\":9594:9725   */\n      tag_560\n        /* \"#utility.yul\":9720:9724   */\n      dup2\n        /* \"#utility.yul\":9594:9725   */\n      tag_429\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":9586:9725   */\n      swap1\n      pop\n        /* \"#utility.yul\":9313:9732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9738:9916   */\n    tag_430:\n        /* \"#utility.yul\":9878:9908   */\n      0x43616e6e6f742072656d6f766520746865206c6173742061646d696e00000000\n        /* \"#utility.yul\":9874:9875   */\n      0x00\n        /* \"#utility.yul\":9866:9872   */\n      dup3\n        /* \"#utility.yul\":9862:9876   */\n      add\n        /* \"#utility.yul\":9855:9909   */\n      mstore\n        /* \"#utility.yul\":9738:9916   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9922:10288   */\n    tag_431:\n        /* \"#utility.yul\":10064:10067   */\n      0x00\n        /* \"#utility.yul\":10085:10152   */\n      tag_563\n        /* \"#utility.yul\":10149:10151   */\n      0x1c\n        /* \"#utility.yul\":10144:10147   */\n      dup4\n        /* \"#utility.yul\":10085:10152   */\n      tag_400\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":10078:10152   */\n      swap2\n      pop\n        /* \"#utility.yul\":10161:10254   */\n      tag_564\n        /* \"#utility.yul\":10250:10253   */\n      dup3\n        /* \"#utility.yul\":10161:10254   */\n      tag_430\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":10279:10281   */\n      0x20\n        /* \"#utility.yul\":10274:10277   */\n      dup3\n        /* \"#utility.yul\":10270:10282   */\n      add\n        /* \"#utility.yul\":10263:10282   */\n      swap1\n      pop\n        /* \"#utility.yul\":9922:10288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10294:10713   */\n    tag_202:\n        /* \"#utility.yul\":10460:10464   */\n      0x00\n        /* \"#utility.yul\":10498:10500   */\n      0x20\n        /* \"#utility.yul\":10487:10496   */\n      dup3\n        /* \"#utility.yul\":10483:10501   */\n      add\n        /* \"#utility.yul\":10475:10501   */\n      swap1\n      pop\n        /* \"#utility.yul\":10547:10556   */\n      dup2\n        /* \"#utility.yul\":10541:10545   */\n      dup2\n        /* \"#utility.yul\":10537:10557   */\n      sub\n        /* \"#utility.yul\":10533:10534   */\n      0x00\n        /* \"#utility.yul\":10522:10531   */\n      dup4\n        /* \"#utility.yul\":10518:10535   */\n      add\n        /* \"#utility.yul\":10511:10558   */\n      mstore\n        /* \"#utility.yul\":10575:10706   */\n      tag_566\n        /* \"#utility.yul\":10701:10705   */\n      dup2\n        /* \"#utility.yul\":10575:10706   */\n      tag_431\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10567:10706   */\n      swap1\n      pop\n        /* \"#utility.yul\":10294:10713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10719:10899   */\n    tag_208:\n        /* \"#utility.yul\":10767:10844   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10764:10765   */\n      0x00\n        /* \"#utility.yul\":10757:10845   */\n      mstore\n        /* \"#utility.yul\":10864:10868   */\n      0x32\n        /* \"#utility.yul\":10861:10862   */\n      0x04\n        /* \"#utility.yul\":10854:10869   */\n      mstore\n        /* \"#utility.yul\":10888:10892   */\n      0x24\n        /* \"#utility.yul\":10885:10886   */\n      0x00\n        /* \"#utility.yul\":10878:10893   */\n      revert\n        /* \"#utility.yul\":10905:11085   */\n    tag_432:\n        /* \"#utility.yul\":10953:11030   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10950:10951   */\n      0x00\n        /* \"#utility.yul\":10943:11031   */\n      mstore\n        /* \"#utility.yul\":11050:11054   */\n      0x11\n        /* \"#utility.yul\":11047:11048   */\n      0x04\n        /* \"#utility.yul\":11040:11055   */\n      mstore\n        /* \"#utility.yul\":11074:11078   */\n      0x24\n        /* \"#utility.yul\":11071:11072   */\n      0x00\n        /* \"#utility.yul\":11064:11079   */\n      revert\n        /* \"#utility.yul\":11091:11285   */\n    tag_212:\n        /* \"#utility.yul\":11131:11135   */\n      0x00\n        /* \"#utility.yul\":11151:11171   */\n      tag_570\n        /* \"#utility.yul\":11169:11170   */\n      dup3\n        /* \"#utility.yul\":11151:11171   */\n      tag_411\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11146:11171   */\n      swap2\n      pop\n        /* \"#utility.yul\":11185:11205   */\n      tag_571\n        /* \"#utility.yul\":11203:11204   */\n      dup4\n        /* \"#utility.yul\":11185:11205   */\n      tag_411\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":11180:11205   */\n      swap3\n      pop\n        /* \"#utility.yul\":11229:11230   */\n      dup3\n        /* \"#utility.yul\":11226:11227   */\n      dup3\n        /* \"#utility.yul\":11222:11231   */\n      sub\n        /* \"#utility.yul\":11214:11231   */\n      swap1\n      pop\n        /* \"#utility.yul\":11253:11254   */\n      dup2\n        /* \"#utility.yul\":11247:11251   */\n      dup2\n        /* \"#utility.yul\":11244:11255   */\n      gt\n        /* \"#utility.yul\":11241:11278   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":11258:11276   */\n      tag_573\n      tag_432\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":11241:11278   */\n    tag_572:\n        /* \"#utility.yul\":11091:11285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11291:11471   */\n    tag_221:\n        /* \"#utility.yul\":11339:11416   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11336:11337   */\n      0x00\n        /* \"#utility.yul\":11329:11417   */\n      mstore\n        /* \"#utility.yul\":11436:11440   */\n      0x31\n        /* \"#utility.yul\":11433:11434   */\n      0x04\n        /* \"#utility.yul\":11426:11441   */\n      mstore\n        /* \"#utility.yul\":11460:11464   */\n      0x24\n        /* \"#utility.yul\":11457:11458   */\n      0x00\n        /* \"#utility.yul\":11450:11465   */\n      revert\n        /* \"#utility.yul\":11477:11653   */\n    tag_433:\n        /* \"#utility.yul\":11617:11645   */\n      0x496e73756666696369656e74207374616b652062616c616e6365000000000000\n        /* \"#utility.yul\":11613:11614   */\n      0x00\n        /* \"#utility.yul\":11605:11611   */\n      dup3\n        /* \"#utility.yul\":11601:11615   */\n      add\n        /* \"#utility.yul\":11594:11646   */\n      mstore\n        /* \"#utility.yul\":11477:11653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11659:12025   */\n    tag_434:\n        /* \"#utility.yul\":11801:11804   */\n      0x00\n        /* \"#utility.yul\":11822:11889   */\n      tag_577\n        /* \"#utility.yul\":11886:11888   */\n      0x1a\n        /* \"#utility.yul\":11881:11884   */\n      dup4\n        /* \"#utility.yul\":11822:11889   */\n      tag_400\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":11815:11889   */\n      swap2\n      pop\n        /* \"#utility.yul\":11898:11991   */\n      tag_578\n        /* \"#utility.yul\":11987:11990   */\n      dup3\n        /* \"#utility.yul\":11898:11991   */\n      tag_433\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":12016:12018   */\n      0x20\n        /* \"#utility.yul\":12011:12014   */\n      dup3\n        /* \"#utility.yul\":12007:12019   */\n      add\n        /* \"#utility.yul\":12000:12019   */\n      swap1\n      pop\n        /* \"#utility.yul\":11659:12025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12031:12450   */\n    tag_233:\n        /* \"#utility.yul\":12197:12201   */\n      0x00\n        /* \"#utility.yul\":12235:12237   */\n      0x20\n        /* \"#utility.yul\":12224:12233   */\n      dup3\n        /* \"#utility.yul\":12220:12238   */\n      add\n        /* \"#utility.yul\":12212:12238   */\n      swap1\n      pop\n        /* \"#utility.yul\":12284:12293   */\n      dup2\n        /* \"#utility.yul\":12278:12282   */\n      dup2\n        /* \"#utility.yul\":12274:12294   */\n      sub\n        /* \"#utility.yul\":12270:12271   */\n      0x00\n        /* \"#utility.yul\":12259:12268   */\n      dup4\n        /* \"#utility.yul\":12255:12272   */\n      add\n        /* \"#utility.yul\":12248:12295   */\n      mstore\n        /* \"#utility.yul\":12312:12443   */\n      tag_580\n        /* \"#utility.yul\":12438:12442   */\n      dup2\n        /* \"#utility.yul\":12312:12443   */\n      tag_434\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":12304:12443   */\n      swap1\n      pop\n        /* \"#utility.yul\":12031:12450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12456:12647   */\n    tag_235:\n        /* \"#utility.yul\":12496:12499   */\n      0x00\n        /* \"#utility.yul\":12515:12535   */\n      tag_582\n        /* \"#utility.yul\":12533:12534   */\n      dup3\n        /* \"#utility.yul\":12515:12535   */\n      tag_411\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":12510:12535   */\n      swap2\n      pop\n        /* \"#utility.yul\":12549:12569   */\n      tag_583\n        /* \"#utility.yul\":12567:12568   */\n      dup4\n        /* \"#utility.yul\":12549:12569   */\n      tag_411\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":12544:12569   */\n      swap3\n      pop\n        /* \"#utility.yul\":12592:12593   */\n      dup3\n        /* \"#utility.yul\":12589:12590   */\n      dup3\n        /* \"#utility.yul\":12585:12594   */\n      add\n        /* \"#utility.yul\":12578:12594   */\n      swap1\n      pop\n        /* \"#utility.yul\":12613:12616   */\n      dup1\n        /* \"#utility.yul\":12610:12611   */\n      dup3\n        /* \"#utility.yul\":12607:12617   */\n      gt\n        /* \"#utility.yul\":12604:12640   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":12620:12638   */\n      tag_585\n      tag_432\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":12604:12640   */\n    tag_584:\n        /* \"#utility.yul\":12456:12647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12653:12877   */\n    tag_435:\n        /* \"#utility.yul\":12793:12827   */\n      0x436f6f6c646f776e20706572696f64206e6f74206d657420666f7220756e7374\n        /* \"#utility.yul\":12789:12790   */\n      0x00\n        /* \"#utility.yul\":12781:12787   */\n      dup3\n        /* \"#utility.yul\":12777:12791   */\n      add\n        /* \"#utility.yul\":12770:12828   */\n      mstore\n        /* \"#utility.yul\":12862:12869   */\n      0x616b696e67000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12857:12859   */\n      0x20\n        /* \"#utility.yul\":12849:12855   */\n      dup3\n        /* \"#utility.yul\":12845:12860   */\n      add\n        /* \"#utility.yul\":12838:12870   */\n      mstore\n        /* \"#utility.yul\":12653:12877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12883:13249   */\n    tag_436:\n        /* \"#utility.yul\":13025:13028   */\n      0x00\n        /* \"#utility.yul\":13046:13113   */\n      tag_588\n        /* \"#utility.yul\":13110:13112   */\n      0x25\n        /* \"#utility.yul\":13105:13108   */\n      dup4\n        /* \"#utility.yul\":13046:13113   */\n      tag_400\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":13039:13113   */\n      swap2\n      pop\n        /* \"#utility.yul\":13122:13215   */\n      tag_589\n        /* \"#utility.yul\":13211:13214   */\n      dup3\n        /* \"#utility.yul\":13122:13215   */\n      tag_435\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":13240:13242   */\n      0x40\n        /* \"#utility.yul\":13235:13238   */\n      dup3\n        /* \"#utility.yul\":13231:13243   */\n      add\n        /* \"#utility.yul\":13224:13243   */\n      swap1\n      pop\n        /* \"#utility.yul\":12883:13249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13255:13674   */\n    tag_238:\n        /* \"#utility.yul\":13421:13425   */\n      0x00\n        /* \"#utility.yul\":13459:13461   */\n      0x20\n        /* \"#utility.yul\":13448:13457   */\n      dup3\n        /* \"#utility.yul\":13444:13462   */\n      add\n        /* \"#utility.yul\":13436:13462   */\n      swap1\n      pop\n        /* \"#utility.yul\":13508:13517   */\n      dup2\n        /* \"#utility.yul\":13502:13506   */\n      dup2\n        /* \"#utility.yul\":13498:13518   */\n      sub\n        /* \"#utility.yul\":13494:13495   */\n      0x00\n        /* \"#utility.yul\":13483:13492   */\n      dup4\n        /* \"#utility.yul\":13479:13496   */\n      add\n        /* \"#utility.yul\":13472:13519   */\n      mstore\n        /* \"#utility.yul\":13536:13667   */\n      tag_591\n        /* \"#utility.yul\":13662:13666   */\n      dup2\n        /* \"#utility.yul\":13536:13667   */\n      tag_436\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":13528:13667   */\n      swap1\n      pop\n        /* \"#utility.yul\":13255:13674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13680:14090   */\n    tag_253:\n        /* \"#utility.yul\":13720:13727   */\n      0x00\n        /* \"#utility.yul\":13743:13763   */\n      tag_593\n        /* \"#utility.yul\":13761:13762   */\n      dup3\n        /* \"#utility.yul\":13743:13763   */\n      tag_411\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":13738:13763   */\n      swap2\n      pop\n        /* \"#utility.yul\":13777:13797   */\n      tag_594\n        /* \"#utility.yul\":13795:13796   */\n      dup4\n        /* \"#utility.yul\":13777:13797   */\n      tag_411\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":13772:13797   */\n      swap3\n      pop\n        /* \"#utility.yul\":13832:13833   */\n      dup3\n        /* \"#utility.yul\":13829:13830   */\n      dup3\n        /* \"#utility.yul\":13825:13834   */\n      mul\n        /* \"#utility.yul\":13854:13884   */\n      tag_595\n        /* \"#utility.yul\":13872:13883   */\n      dup2\n        /* \"#utility.yul\":13854:13884   */\n      tag_411\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":13843:13884   */\n      swap2\n      pop\n        /* \"#utility.yul\":14033:14034   */\n      dup3\n        /* \"#utility.yul\":14024:14031   */\n      dup3\n        /* \"#utility.yul\":14020:14035   */\n      div\n        /* \"#utility.yul\":14017:14018   */\n      dup5\n        /* \"#utility.yul\":14014:14036   */\n      eq\n        /* \"#utility.yul\":13994:13995   */\n      dup4\n        /* \"#utility.yul\":13987:13996   */\n      iszero\n        /* \"#utility.yul\":13967:14050   */\n      or\n        /* \"#utility.yul\":13944:14083   */\n      tag_596\n      jumpi\n        /* \"#utility.yul\":14063:14081   */\n      tag_597\n      tag_432\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":13944:14083   */\n    tag_596:\n        /* \"#utility.yul\":13728:14090   */\n      pop\n        /* \"#utility.yul\":13680:14090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14096:14276   */\n    tag_437:\n        /* \"#utility.yul\":14144:14221   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14141:14142   */\n      0x00\n        /* \"#utility.yul\":14134:14222   */\n      mstore\n        /* \"#utility.yul\":14241:14245   */\n      0x12\n        /* \"#utility.yul\":14238:14239   */\n      0x04\n        /* \"#utility.yul\":14231:14246   */\n      mstore\n        /* \"#utility.yul\":14265:14269   */\n      0x24\n        /* \"#utility.yul\":14262:14263   */\n      0x00\n        /* \"#utility.yul\":14255:14270   */\n      revert\n        /* \"#utility.yul\":14282:14467   */\n    tag_255:\n        /* \"#utility.yul\":14322:14323   */\n      0x00\n        /* \"#utility.yul\":14339:14359   */\n      tag_600\n        /* \"#utility.yul\":14357:14358   */\n      dup3\n        /* \"#utility.yul\":14339:14359   */\n      tag_411\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":14334:14359   */\n      swap2\n      pop\n        /* \"#utility.yul\":14373:14393   */\n      tag_601\n        /* \"#utility.yul\":14391:14392   */\n      dup4\n        /* \"#utility.yul\":14373:14393   */\n      tag_411\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":14368:14393   */\n      swap3\n      pop\n        /* \"#utility.yul\":14412:14413   */\n      dup3\n        /* \"#utility.yul\":14402:14437   */\n      tag_602\n      jumpi\n        /* \"#utility.yul\":14417:14435   */\n      tag_603\n      tag_437\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":14402:14437   */\n    tag_602:\n        /* \"#utility.yul\":14459:14460   */\n      dup3\n        /* \"#utility.yul\":14456:14457   */\n      dup3\n        /* \"#utility.yul\":14452:14461   */\n      div\n        /* \"#utility.yul\":14447:14461   */\n      swap1\n      pop\n        /* \"#utility.yul\":14282:14467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14473:14639   */\n    tag_438:\n        /* \"#utility.yul\":14613:14631   */\n      0x416c6c20746f6b656e73206d696e656400000000000000000000000000000000\n        /* \"#utility.yul\":14609:14610   */\n      0x00\n        /* \"#utility.yul\":14601:14607   */\n      dup3\n        /* \"#utility.yul\":14597:14611   */\n      add\n        /* \"#utility.yul\":14590:14632   */\n      mstore\n        /* \"#utility.yul\":14473:14639   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14645:15011   */\n    tag_439:\n        /* \"#utility.yul\":14787:14790   */\n      0x00\n        /* \"#utility.yul\":14808:14875   */\n      tag_606\n        /* \"#utility.yul\":14872:14874   */\n      0x10\n        /* \"#utility.yul\":14867:14870   */\n      dup4\n        /* \"#utility.yul\":14808:14875   */\n      tag_400\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":14801:14875   */\n      swap2\n      pop\n        /* \"#utility.yul\":14884:14977   */\n      tag_607\n        /* \"#utility.yul\":14973:14976   */\n      dup3\n        /* \"#utility.yul\":14884:14977   */\n      tag_438\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":15002:15004   */\n      0x20\n        /* \"#utility.yul\":14997:15000   */\n      dup3\n        /* \"#utility.yul\":14993:15005   */\n      add\n        /* \"#utility.yul\":14986:15005   */\n      swap1\n      pop\n        /* \"#utility.yul\":14645:15011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15017:15436   */\n    tag_258:\n        /* \"#utility.yul\":15183:15187   */\n      0x00\n        /* \"#utility.yul\":15221:15223   */\n      0x20\n        /* \"#utility.yul\":15210:15219   */\n      dup3\n        /* \"#utility.yul\":15206:15224   */\n      add\n        /* \"#utility.yul\":15198:15224   */\n      swap1\n      pop\n        /* \"#utility.yul\":15270:15279   */\n      dup2\n        /* \"#utility.yul\":15264:15268   */\n      dup2\n        /* \"#utility.yul\":15260:15280   */\n      sub\n        /* \"#utility.yul\":15256:15257   */\n      0x00\n        /* \"#utility.yul\":15245:15254   */\n      dup4\n        /* \"#utility.yul\":15241:15258   */\n      add\n        /* \"#utility.yul\":15234:15281   */\n      mstore\n        /* \"#utility.yul\":15298:15429   */\n      tag_609\n        /* \"#utility.yul\":15424:15428   */\n      dup2\n        /* \"#utility.yul\":15298:15429   */\n      tag_439\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":15290:15429   */\n      swap1\n      pop\n        /* \"#utility.yul\":15017:15436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15442:15536   */\n    tag_440:\n        /* \"#utility.yul\":15475:15483   */\n      0x00\n        /* \"#utility.yul\":15523:15528   */\n      dup2\n        /* \"#utility.yul\":15519:15521   */\n      0x60\n        /* \"#utility.yul\":15515:15529   */\n      shl\n        /* \"#utility.yul\":15494:15529   */\n      swap1\n      pop\n        /* \"#utility.yul\":15442:15536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15542:15636   */\n    tag_441:\n        /* \"#utility.yul\":15581:15588   */\n      0x00\n        /* \"#utility.yul\":15610:15630   */\n      tag_612\n        /* \"#utility.yul\":15624:15629   */\n      dup3\n        /* \"#utility.yul\":15610:15630   */\n      tag_440\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":15599:15630   */\n      swap1\n      pop\n        /* \"#utility.yul\":15542:15636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15642:15742   */\n    tag_442:\n        /* \"#utility.yul\":15681:15688   */\n      0x00\n        /* \"#utility.yul\":15710:15736   */\n      tag_614\n        /* \"#utility.yul\":15730:15735   */\n      dup3\n        /* \"#utility.yul\":15710:15736   */\n      tag_441\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":15699:15736   */\n      swap1\n      pop\n        /* \"#utility.yul\":15642:15742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15748:15905   */\n    tag_443:\n        /* \"#utility.yul\":15853:15898   */\n      tag_616\n        /* \"#utility.yul\":15873:15897   */\n      tag_617\n        /* \"#utility.yul\":15891:15896   */\n      dup3\n        /* \"#utility.yul\":15873:15897   */\n      tag_408\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":15853:15898   */\n      tag_442\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":15848:15851   */\n      dup3\n        /* \"#utility.yul\":15841:15899   */\n      mstore\n        /* \"#utility.yul\":15748:15905   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15911:15990   */\n    tag_444:\n        /* \"#utility.yul\":15950:15957   */\n      0x00\n        /* \"#utility.yul\":15979:15984   */\n      dup2\n        /* \"#utility.yul\":15968:15984   */\n      swap1\n      pop\n        /* \"#utility.yul\":15911:15990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15996:16153   */\n    tag_445:\n        /* \"#utility.yul\":16101:16146   */\n      tag_620\n        /* \"#utility.yul\":16121:16145   */\n      tag_621\n        /* \"#utility.yul\":16139:16144   */\n      dup3\n        /* \"#utility.yul\":16121:16145   */\n      tag_411\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":16101:16146   */\n      tag_444\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":16096:16099   */\n      dup3\n        /* \"#utility.yul\":16089:16147   */\n      mstore\n        /* \"#utility.yul\":15996:16153   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16159:16556   */\n    tag_260:\n        /* \"#utility.yul\":16299:16302   */\n      0x00\n        /* \"#utility.yul\":16314:16389   */\n      tag_623\n        /* \"#utility.yul\":16385:16388   */\n      dup3\n        /* \"#utility.yul\":16376:16382   */\n      dup6\n        /* \"#utility.yul\":16314:16389   */\n      tag_443\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":16414:16416   */\n      0x14\n        /* \"#utility.yul\":16409:16412   */\n      dup3\n        /* \"#utility.yul\":16405:16417   */\n      add\n        /* \"#utility.yul\":16398:16417   */\n      swap2\n      pop\n        /* \"#utility.yul\":16427:16502   */\n      tag_624\n        /* \"#utility.yul\":16498:16501   */\n      dup3\n        /* \"#utility.yul\":16489:16495   */\n      dup5\n        /* \"#utility.yul\":16427:16502   */\n      tag_445\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":16527:16529   */\n      0x20\n        /* \"#utility.yul\":16522:16525   */\n      dup3\n        /* \"#utility.yul\":16518:16530   */\n      add\n        /* \"#utility.yul\":16511:16530   */\n      swap2\n      pop\n        /* \"#utility.yul\":16547:16550   */\n      dup2\n        /* \"#utility.yul\":16540:16550   */\n      swap1\n      pop\n        /* \"#utility.yul\":16159:16556   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16562:16737   */\n    tag_446:\n        /* \"#utility.yul\":16702:16729   */\n      0x4d696e696e6720646966666963756c7479206e6f74206d657400000000000000\n        /* \"#utility.yul\":16698:16699   */\n      0x00\n        /* \"#utility.yul\":16690:16696   */\n      dup3\n        /* \"#utility.yul\":16686:16700   */\n      add\n        /* \"#utility.yul\":16679:16730   */\n      mstore\n        /* \"#utility.yul\":16562:16737   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16743:17109   */\n    tag_447:\n        /* \"#utility.yul\":16885:16888   */\n      0x00\n        /* \"#utility.yul\":16906:16973   */\n      tag_627\n        /* \"#utility.yul\":16970:16972   */\n      0x19\n        /* \"#utility.yul\":16965:16968   */\n      dup4\n        /* \"#utility.yul\":16906:16973   */\n      tag_400\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":16899:16973   */\n      swap2\n      pop\n        /* \"#utility.yul\":16982:17075   */\n      tag_628\n        /* \"#utility.yul\":17071:17074   */\n      dup3\n        /* \"#utility.yul\":16982:17075   */\n      tag_446\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":17100:17102   */\n      0x20\n        /* \"#utility.yul\":17095:17098   */\n      dup3\n        /* \"#utility.yul\":17091:17103   */\n      add\n        /* \"#utility.yul\":17084:17103   */\n      swap1\n      pop\n        /* \"#utility.yul\":16743:17109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17115:17534   */\n    tag_263:\n        /* \"#utility.yul\":17281:17285   */\n      0x00\n        /* \"#utility.yul\":17319:17321   */\n      0x20\n        /* \"#utility.yul\":17308:17317   */\n      dup3\n        /* \"#utility.yul\":17304:17322   */\n      add\n        /* \"#utility.yul\":17296:17322   */\n      swap1\n      pop\n        /* \"#utility.yul\":17368:17377   */\n      dup2\n        /* \"#utility.yul\":17362:17366   */\n      dup2\n        /* \"#utility.yul\":17358:17378   */\n      sub\n        /* \"#utility.yul\":17354:17355   */\n      0x00\n        /* \"#utility.yul\":17343:17352   */\n      dup4\n        /* \"#utility.yul\":17339:17356   */\n      add\n        /* \"#utility.yul\":17332:17379   */\n      mstore\n        /* \"#utility.yul\":17396:17527   */\n      tag_630\n        /* \"#utility.yul\":17522:17526   */\n      dup2\n        /* \"#utility.yul\":17396:17527   */\n      tag_447\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":17388:17527   */\n      swap1\n      pop\n        /* \"#utility.yul\":17115:17534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17540:17706   */\n    tag_448:\n        /* \"#utility.yul\":17680:17698   */\n      0x416c726561647920616e2061646d696e00000000000000000000000000000000\n        /* \"#utility.yul\":17676:17677   */\n      0x00\n        /* \"#utility.yul\":17668:17674   */\n      dup3\n        /* \"#utility.yul\":17664:17678   */\n      add\n        /* \"#utility.yul\":17657:17699   */\n      mstore\n        /* \"#utility.yul\":17540:17706   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17712:18078   */\n    tag_449:\n        /* \"#utility.yul\":17854:17857   */\n      0x00\n        /* \"#utility.yul\":17875:17942   */\n      tag_633\n        /* \"#utility.yul\":17939:17941   */\n      0x10\n        /* \"#utility.yul\":17934:17937   */\n      dup4\n        /* \"#utility.yul\":17875:17942   */\n      tag_400\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":17868:17942   */\n      swap2\n      pop\n        /* \"#utility.yul\":17951:18044   */\n      tag_634\n        /* \"#utility.yul\":18040:18043   */\n      dup3\n        /* \"#utility.yul\":17951:18044   */\n      tag_448\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":18069:18071   */\n      0x20\n        /* \"#utility.yul\":18064:18067   */\n      dup3\n        /* \"#utility.yul\":18060:18072   */\n      add\n        /* \"#utility.yul\":18053:18072   */\n      swap1\n      pop\n        /* \"#utility.yul\":17712:18078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18084:18503   */\n    tag_276:\n        /* \"#utility.yul\":18250:18254   */\n      0x00\n        /* \"#utility.yul\":18288:18290   */\n      0x20\n        /* \"#utility.yul\":18277:18286   */\n      dup3\n        /* \"#utility.yul\":18273:18291   */\n      add\n        /* \"#utility.yul\":18265:18291   */\n      swap1\n      pop\n        /* \"#utility.yul\":18337:18346   */\n      dup2\n        /* \"#utility.yul\":18331:18335   */\n      dup2\n        /* \"#utility.yul\":18327:18347   */\n      sub\n        /* \"#utility.yul\":18323:18324   */\n      0x00\n        /* \"#utility.yul\":18312:18321   */\n      dup4\n        /* \"#utility.yul\":18308:18325   */\n      add\n        /* \"#utility.yul\":18301:18348   */\n      mstore\n        /* \"#utility.yul\":18365:18496   */\n      tag_636\n        /* \"#utility.yul\":18491:18495   */\n      dup2\n        /* \"#utility.yul\":18365:18496   */\n      tag_449\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":18357:18496   */\n      swap1\n      pop\n        /* \"#utility.yul\":18084:18503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18509:18680   */\n    tag_450:\n        /* \"#utility.yul\":18649:18672   */\n      0x43616e6e6f74207374616b65203020746f6b656e730000000000000000000000\n        /* \"#utility.yul\":18645:18646   */\n      0x00\n        /* \"#utility.yul\":18637:18643   */\n      dup3\n        /* \"#utility.yul\":18633:18647   */\n      add\n        /* \"#utility.yul\":18626:18673   */\n      mstore\n        /* \"#utility.yul\":18509:18680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18686:19052   */\n    tag_451:\n        /* \"#utility.yul\":18828:18831   */\n      0x00\n        /* \"#utility.yul\":18849:18916   */\n      tag_639\n        /* \"#utility.yul\":18913:18915   */\n      0x15\n        /* \"#utility.yul\":18908:18911   */\n      dup4\n        /* \"#utility.yul\":18849:18916   */\n      tag_400\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":18842:18916   */\n      swap2\n      pop\n        /* \"#utility.yul\":18925:19018   */\n      tag_640\n        /* \"#utility.yul\":19014:19017   */\n      dup3\n        /* \"#utility.yul\":18925:19018   */\n      tag_450\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":19043:19045   */\n      0x20\n        /* \"#utility.yul\":19038:19041   */\n      dup3\n        /* \"#utility.yul\":19034:19046   */\n      add\n        /* \"#utility.yul\":19027:19046   */\n      swap1\n      pop\n        /* \"#utility.yul\":18686:19052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19058:19477   */\n    tag_302:\n        /* \"#utility.yul\":19224:19228   */\n      0x00\n        /* \"#utility.yul\":19262:19264   */\n      0x20\n        /* \"#utility.yul\":19251:19260   */\n      dup3\n        /* \"#utility.yul\":19247:19265   */\n      add\n        /* \"#utility.yul\":19239:19265   */\n      swap1\n      pop\n        /* \"#utility.yul\":19311:19320   */\n      dup2\n        /* \"#utility.yul\":19305:19309   */\n      dup2\n        /* \"#utility.yul\":19301:19321   */\n      sub\n        /* \"#utility.yul\":19297:19298   */\n      0x00\n        /* \"#utility.yul\":19286:19295   */\n      dup4\n        /* \"#utility.yul\":19282:19299   */\n      add\n        /* \"#utility.yul\":19275:19322   */\n      mstore\n        /* \"#utility.yul\":19339:19470   */\n      tag_642\n        /* \"#utility.yul\":19465:19469   */\n      dup2\n        /* \"#utility.yul\":19339:19470   */\n      tag_451\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":19331:19470   */\n      swap1\n      pop\n        /* \"#utility.yul\":19058:19477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19483:19705   */\n    tag_452:\n        /* \"#utility.yul\":19623:19657   */\n      0x436f6f6c646f776e20706572696f64206e6f74206d657420666f72207374616b\n        /* \"#utility.yul\":19619:19620   */\n      0x00\n        /* \"#utility.yul\":19611:19617   */\n      dup3\n        /* \"#utility.yul\":19607:19621   */\n      add\n        /* \"#utility.yul\":19600:19658   */\n      mstore\n        /* \"#utility.yul\":19692:19697   */\n      0x696e670000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19687:19689   */\n      0x20\n        /* \"#utility.yul\":19679:19685   */\n      dup3\n        /* \"#utility.yul\":19675:19690   */\n      add\n        /* \"#utility.yul\":19668:19698   */\n      mstore\n        /* \"#utility.yul\":19483:19705   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19711:20077   */\n    tag_453:\n        /* \"#utility.yul\":19853:19856   */\n      0x00\n        /* \"#utility.yul\":19874:19941   */\n      tag_645\n        /* \"#utility.yul\":19938:19940   */\n      0x23\n        /* \"#utility.yul\":19933:19936   */\n      dup4\n        /* \"#utility.yul\":19874:19941   */\n      tag_400\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":19867:19941   */\n      swap2\n      pop\n        /* \"#utility.yul\":19950:20043   */\n      tag_646\n        /* \"#utility.yul\":20039:20042   */\n      dup3\n        /* \"#utility.yul\":19950:20043   */\n      tag_452\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":20068:20070   */\n      0x40\n        /* \"#utility.yul\":20063:20066   */\n      dup3\n        /* \"#utility.yul\":20059:20071   */\n      add\n        /* \"#utility.yul\":20052:20071   */\n      swap1\n      pop\n        /* \"#utility.yul\":19711:20077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20083:20502   */\n    tag_306:\n        /* \"#utility.yul\":20249:20253   */\n      0x00\n        /* \"#utility.yul\":20287:20289   */\n      0x20\n        /* \"#utility.yul\":20276:20285   */\n      dup3\n        /* \"#utility.yul\":20272:20290   */\n      add\n        /* \"#utility.yul\":20264:20290   */\n      swap1\n      pop\n        /* \"#utility.yul\":20336:20345   */\n      dup2\n        /* \"#utility.yul\":20330:20334   */\n      dup2\n        /* \"#utility.yul\":20326:20346   */\n      sub\n        /* \"#utility.yul\":20322:20323   */\n      0x00\n        /* \"#utility.yul\":20311:20320   */\n      dup4\n        /* \"#utility.yul\":20307:20324   */\n      add\n        /* \"#utility.yul\":20300:20347   */\n      mstore\n        /* \"#utility.yul\":20364:20495   */\n      tag_648\n        /* \"#utility.yul\":20490:20494   */\n      dup2\n        /* \"#utility.yul\":20364:20495   */\n      tag_453\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":20356:20495   */\n      swap1\n      pop\n        /* \"#utility.yul\":20083:20502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20508:20675   */\n    tag_454:\n        /* \"#utility.yul\":20648:20667   */\n      0x496e76616c6964206e6577206f776e6572000000000000000000000000000000\n        /* \"#utility.yul\":20644:20645   */\n      0x00\n        /* \"#utility.yul\":20636:20642   */\n      dup3\n        /* \"#utility.yul\":20632:20646   */\n      add\n        /* \"#utility.yul\":20625:20668   */\n      mstore\n        /* \"#utility.yul\":20508:20675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20681:21047   */\n    tag_455:\n        /* \"#utility.yul\":20823:20826   */\n      0x00\n        /* \"#utility.yul\":20844:20911   */\n      tag_651\n        /* \"#utility.yul\":20908:20910   */\n      0x11\n        /* \"#utility.yul\":20903:20906   */\n      dup4\n        /* \"#utility.yul\":20844:20911   */\n      tag_400\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":20837:20911   */\n      swap2\n      pop\n        /* \"#utility.yul\":20920:21013   */\n      tag_652\n        /* \"#utility.yul\":21009:21012   */\n      dup3\n        /* \"#utility.yul\":20920:21013   */\n      tag_454\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":21038:21040   */\n      0x20\n        /* \"#utility.yul\":21033:21036   */\n      dup3\n        /* \"#utility.yul\":21029:21041   */\n      add\n        /* \"#utility.yul\":21022:21041   */\n      swap1\n      pop\n        /* \"#utility.yul\":20681:21047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21053:21472   */\n    tag_315:\n        /* \"#utility.yul\":21219:21223   */\n      0x00\n        /* \"#utility.yul\":21257:21259   */\n      0x20\n        /* \"#utility.yul\":21246:21255   */\n      dup3\n        /* \"#utility.yul\":21242:21260   */\n      add\n        /* \"#utility.yul\":21234:21260   */\n      swap1\n      pop\n        /* \"#utility.yul\":21306:21315   */\n      dup2\n        /* \"#utility.yul\":21300:21304   */\n      dup2\n        /* \"#utility.yul\":21296:21316   */\n      sub\n        /* \"#utility.yul\":21292:21293   */\n      0x00\n        /* \"#utility.yul\":21281:21290   */\n      dup4\n        /* \"#utility.yul\":21277:21294   */\n      add\n        /* \"#utility.yul\":21270:21317   */\n      mstore\n        /* \"#utility.yul\":21334:21465   */\n      tag_654\n        /* \"#utility.yul\":21460:21464   */\n      dup2\n        /* \"#utility.yul\":21334:21465   */\n      tag_455\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":21326:21465   */\n      swap1\n      pop\n        /* \"#utility.yul\":21053:21472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21478:21650   */\n    tag_456:\n        /* \"#utility.yul\":21618:21642   */\n      0x4e6f207265776172647320746f20776974686472617700000000000000000000\n        /* \"#utility.yul\":21614:21615   */\n      0x00\n        /* \"#utility.yul\":21606:21612   */\n      dup3\n        /* \"#utility.yul\":21602:21616   */\n      add\n        /* \"#utility.yul\":21595:21643   */\n      mstore\n        /* \"#utility.yul\":21478:21650   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21656:22022   */\n    tag_457:\n        /* \"#utility.yul\":21798:21801   */\n      0x00\n        /* \"#utility.yul\":21819:21886   */\n      tag_657\n        /* \"#utility.yul\":21883:21885   */\n      0x16\n        /* \"#utility.yul\":21878:21881   */\n      dup4\n        /* \"#utility.yul\":21819:21886   */\n      tag_400\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":21812:21886   */\n      swap2\n      pop\n        /* \"#utility.yul\":21895:21988   */\n      tag_658\n        /* \"#utility.yul\":21984:21987   */\n      dup3\n        /* \"#utility.yul\":21895:21988   */\n      tag_456\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":22013:22015   */\n      0x20\n        /* \"#utility.yul\":22008:22011   */\n      dup3\n        /* \"#utility.yul\":22004:22016   */\n      add\n        /* \"#utility.yul\":21997:22016   */\n      swap1\n      pop\n        /* \"#utility.yul\":21656:22022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22028:22447   */\n    tag_324:\n        /* \"#utility.yul\":22194:22198   */\n      0x00\n        /* \"#utility.yul\":22232:22234   */\n      0x20\n        /* \"#utility.yul\":22221:22230   */\n      dup3\n        /* \"#utility.yul\":22217:22235   */\n      add\n        /* \"#utility.yul\":22209:22235   */\n      swap1\n      pop\n        /* \"#utility.yul\":22281:22290   */\n      dup2\n        /* \"#utility.yul\":22275:22279   */\n      dup2\n        /* \"#utility.yul\":22271:22291   */\n      sub\n        /* \"#utility.yul\":22267:22268   */\n      0x00\n        /* \"#utility.yul\":22256:22265   */\n      dup4\n        /* \"#utility.yul\":22252:22269   */\n      add\n        /* \"#utility.yul\":22245:22292   */\n      mstore\n        /* \"#utility.yul\":22309:22440   */\n      tag_660\n        /* \"#utility.yul\":22435:22439   */\n      dup2\n        /* \"#utility.yul\":22309:22440   */\n      tag_457\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":22301:22440   */\n      swap1\n      pop\n        /* \"#utility.yul\":22028:22447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22453:22895   */\n    tag_358:\n        /* \"#utility.yul\":22602:22606   */\n      0x00\n        /* \"#utility.yul\":22640:22642   */\n      0x60\n        /* \"#utility.yul\":22629:22638   */\n      dup3\n        /* \"#utility.yul\":22625:22643   */\n      add\n        /* \"#utility.yul\":22617:22643   */\n      swap1\n      pop\n        /* \"#utility.yul\":22653:22724   */\n      tag_662\n        /* \"#utility.yul\":22721:22722   */\n      0x00\n        /* \"#utility.yul\":22710:22719   */\n      dup4\n        /* \"#utility.yul\":22706:22723   */\n      add\n        /* \"#utility.yul\":22697:22703   */\n      dup7\n        /* \"#utility.yul\":22653:22724   */\n      tag_417\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":22734:22806   */\n      tag_663\n        /* \"#utility.yul\":22802:22804   */\n      0x20\n        /* \"#utility.yul\":22791:22800   */\n      dup4\n        /* \"#utility.yul\":22787:22805   */\n      add\n        /* \"#utility.yul\":22778:22784   */\n      dup6\n        /* \"#utility.yul\":22734:22806   */\n      tag_412\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":22816:22888   */\n      tag_664\n        /* \"#utility.yul\":22884:22886   */\n      0x40\n        /* \"#utility.yul\":22873:22882   */\n      dup4\n        /* \"#utility.yul\":22869:22887   */\n      add\n        /* \"#utility.yul\":22860:22866   */\n      dup5\n        /* \"#utility.yul\":22816:22888   */\n      tag_412\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":22453:22895   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22901:23077   */\n    tag_458:\n        /* \"#utility.yul\":23041:23069   */\n      0x4d696e74696e672065786365656473206d617820737570706c79000000000000\n        /* \"#utility.yul\":23037:23038   */\n      0x00\n        /* \"#utility.yul\":23029:23035   */\n      dup3\n        /* \"#utility.yul\":23025:23039   */\n      add\n        /* \"#utility.yul\":23018:23070   */\n      mstore\n        /* \"#utility.yul\":22901:23077   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23083:23449   */\n    tag_459:\n        /* \"#utility.yul\":23225:23228   */\n      0x00\n        /* \"#utility.yul\":23246:23313   */\n      tag_667\n        /* \"#utility.yul\":23310:23312   */\n      0x1a\n        /* \"#utility.yul\":23305:23308   */\n      dup4\n        /* \"#utility.yul\":23246:23313   */\n      tag_400\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":23239:23313   */\n      swap2\n      pop\n        /* \"#utility.yul\":23322:23415   */\n      tag_668\n        /* \"#utility.yul\":23411:23414   */\n      dup3\n        /* \"#utility.yul\":23322:23415   */\n      tag_458\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":23440:23442   */\n      0x20\n        /* \"#utility.yul\":23435:23438   */\n      dup3\n        /* \"#utility.yul\":23431:23443   */\n      add\n        /* \"#utility.yul\":23424:23443   */\n      swap1\n      pop\n        /* \"#utility.yul\":23083:23449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23455:23874   */\n    tag_380:\n        /* \"#utility.yul\":23621:23625   */\n      0x00\n        /* \"#utility.yul\":23659:23661   */\n      0x20\n        /* \"#utility.yul\":23648:23657   */\n      dup3\n        /* \"#utility.yul\":23644:23662   */\n      add\n        /* \"#utility.yul\":23636:23662   */\n      swap1\n      pop\n        /* \"#utility.yul\":23708:23717   */\n      dup2\n        /* \"#utility.yul\":23702:23706   */\n      dup2\n        /* \"#utility.yul\":23698:23718   */\n      sub\n        /* \"#utility.yul\":23694:23695   */\n      0x00\n        /* \"#utility.yul\":23683:23692   */\n      dup4\n        /* \"#utility.yul\":23679:23696   */\n      add\n        /* \"#utility.yul\":23672:23719   */\n      mstore\n        /* \"#utility.yul\":23736:23867   */\n      tag_670\n        /* \"#utility.yul\":23862:23866   */\n      dup2\n        /* \"#utility.yul\":23736:23867   */\n      tag_459\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":23728:23867   */\n      swap1\n      pop\n        /* \"#utility.yul\":23455:23874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c45a95eeaa528f9b74e29ce055f60c1132fb7d1de34ee80423786713a28ead6064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1081": {
									"entryPoint": null,
									"id": 1081,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mintWithCapCheck_1104": {
									"entryPoint": 767,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 898,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 572,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1031,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 889,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab": {
									"entryPoint": 2792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9908:8",
										"nodeType": "YulBlock",
										"src": "0:9908:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "922:274:8",
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:8",
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nativeSrc": "970:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nativeSrc": "970:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nativeSrc": "939:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:8",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nativeSrc": "935:32:8",
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nativeSrc": "932:119:8",
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nativeSrc": "1061:128:8",
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nativeSrc": "1076:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nativeSrc": "1147:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nativeSrc": "1115:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:8",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:8",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:8",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											},
											{
												"body": {
													"nativeSrc": "1261:40:8",
													"nodeType": "YulBlock",
													"src": "1261:40:8",
													"statements": [
														{
															"nativeSrc": "1272:22:8",
															"nodeType": "YulAssignment",
															"src": "1272:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:8"
																},
																"nativeSrc": "1282:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:8",
														"nodeType": "YulTypedName",
														"src": "1244:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:8",
														"nodeType": "YulTypedName",
														"src": "1254:6:8",
														"type": ""
													}
												],
												"src": "1202:99:8"
											},
											{
												"body": {
													"nativeSrc": "1335:152:8",
													"nodeType": "YulBlock",
													"src": "1335:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:8"
																},
																"nativeSrc": "1345:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:8"
															},
															"nativeSrc": "1345:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:8"
																},
																"nativeSrc": "1442:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:8"
															},
															"nativeSrc": "1442:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:8"
																},
																"nativeSrc": "1466:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:8"
															},
															"nativeSrc": "1466:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:8"
											},
											{
												"body": {
													"nativeSrc": "1521:152:8",
													"nodeType": "YulBlock",
													"src": "1521:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:8"
																},
																"nativeSrc": "1531:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:8"
															},
															"nativeSrc": "1531:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:8"
																},
																"nativeSrc": "1628:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:8"
															},
															"nativeSrc": "1628:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nativeSrc": "1652:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:8"
															},
															"nativeSrc": "1652:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:8"
											},
											{
												"body": {
													"nativeSrc": "1730:269:8",
													"nodeType": "YulBlock",
													"src": "1730:269:8",
													"statements": [
														{
															"nativeSrc": "1740:22:8",
															"nodeType": "YulAssignment",
															"src": "1740:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:8"
																},
																"nativeSrc": "1750:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:8"
																}
															]
														},
														{
															"nativeSrc": "1771:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:8"
																},
																"nativeSrc": "1797:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:8",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:8",
																"nodeType": "YulBlock",
																"src": "1848:51:8",
																"statements": [
																	{
																		"nativeSrc": "1862:27:8",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:8"
																			},
																			"nativeSrc": "1872:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:8"
																},
																"nativeSrc": "1821:26:8",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:8"
															},
															"nativeSrc": "1818:81:8",
															"nodeType": "YulIf",
															"src": "1818:81:8"
														},
														{
															"body": {
																"nativeSrc": "1951:42:8",
																"nodeType": "YulBlock",
																"src": "1951:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:8"
																			},
																			"nativeSrc": "1965:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:8"
																		},
																		"nativeSrc": "1965:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:8"
																		},
																		"nativeSrc": "1935:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:8"
																},
																"nativeSrc": "1912:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:8"
															},
															"nativeSrc": "1909:84:8",
															"nodeType": "YulIf",
															"src": "1909:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:8",
														"nodeType": "YulTypedName",
														"src": "1714:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:8",
														"nodeType": "YulTypedName",
														"src": "1723:6:8",
														"type": ""
													}
												],
												"src": "1679:320:8"
											},
											{
												"body": {
													"nativeSrc": "2059:87:8",
													"nodeType": "YulBlock",
													"src": "2059:87:8",
													"statements": [
														{
															"nativeSrc": "2069:11:8",
															"nodeType": "YulAssignment",
															"src": "2069:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:8",
																"nodeType": "YulIdentifier",
																"src": "2077:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																},
																"nativeSrc": "2090:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:8"
															},
															"nativeSrc": "2090:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:8"
														},
														{
															"nativeSrc": "2113:26:8",
															"nodeType": "YulAssignment",
															"src": "2113:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:8"
																},
																"nativeSrc": "2121:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:8",
														"nodeType": "YulTypedName",
														"src": "2046:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:8",
														"nodeType": "YulTypedName",
														"src": "2054:4:8",
														"type": ""
													}
												],
												"src": "2005:141:8"
											},
											{
												"body": {
													"nativeSrc": "2196:49:8",
													"nodeType": "YulBlock",
													"src": "2196:49:8",
													"statements": [
														{
															"nativeSrc": "2206:33:8",
															"nodeType": "YulAssignment",
															"src": "2206:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:8"
																		},
																		"nativeSrc": "2220:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:8"
																},
																"nativeSrc": "2216:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:8",
														"nodeType": "YulTypedName",
														"src": "2179:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:8",
														"nodeType": "YulTypedName",
														"src": "2189:6:8",
														"type": ""
													}
												],
												"src": "2152:93:8"
											},
											{
												"body": {
													"nativeSrc": "2304:54:8",
													"nodeType": "YulBlock",
													"src": "2304:54:8",
													"statements": [
														{
															"nativeSrc": "2314:37:8",
															"nodeType": "YulAssignment",
															"src": "2314:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:8"
																},
																"nativeSrc": "2335:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:8",
														"nodeType": "YulTypedName",
														"src": "2279:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:8",
														"nodeType": "YulTypedName",
														"src": "2285:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:8",
														"nodeType": "YulTypedName",
														"src": "2295:8:8",
														"type": ""
													}
												],
												"src": "2251:107:8"
											},
											{
												"body": {
													"nativeSrc": "2440:317:8",
													"nodeType": "YulBlock",
													"src": "2440:317:8",
													"statements": [
														{
															"nativeSrc": "2450:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:8"
																},
																"nativeSrc": "2467:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:8",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:8"
																},
																"nativeSrc": "2506:97:8",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:8",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:8",
															"nodeType": "YulAssignment",
															"src": "2612:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:8"
																},
																"nativeSrc": "2624:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:8"
																}
															]
														},
														{
															"nativeSrc": "2672:30:8",
															"nodeType": "YulAssignment",
															"src": "2672:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:8"
																		},
																		"nativeSrc": "2692:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:8"
																},
																"nativeSrc": "2681:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:8"
																}
															]
														},
														{
															"nativeSrc": "2711:40:8",
															"nodeType": "YulAssignment",
															"src": "2711:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:8"
																		},
																		"nativeSrc": "2731:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:8"
																},
																"nativeSrc": "2721:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:8",
														"nodeType": "YulTypedName",
														"src": "2401:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:8",
														"nodeType": "YulTypedName",
														"src": "2408:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:8",
														"nodeType": "YulTypedName",
														"src": "2420:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:8",
														"nodeType": "YulTypedName",
														"src": "2433:6:8",
														"type": ""
													}
												],
												"src": "2364:393:8"
											},
											{
												"body": {
													"nativeSrc": "2808:32:8",
													"nodeType": "YulBlock",
													"src": "2808:32:8",
													"statements": [
														{
															"nativeSrc": "2818:16:8",
															"nodeType": "YulAssignment",
															"src": "2818:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:8",
																"nodeType": "YulIdentifier",
																"src": "2829:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:8",
														"nodeType": "YulTypedName",
														"src": "2790:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:8",
														"nodeType": "YulTypedName",
														"src": "2800:7:8",
														"type": ""
													}
												],
												"src": "2763:77:8"
											},
											{
												"body": {
													"nativeSrc": "2878:28:8",
													"nodeType": "YulBlock",
													"src": "2878:28:8",
													"statements": [
														{
															"nativeSrc": "2888:12:8",
															"nodeType": "YulAssignment",
															"src": "2888:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:8",
																"nodeType": "YulIdentifier",
																"src": "2895:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:8",
														"nodeType": "YulTypedName",
														"src": "2864:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:8",
														"nodeType": "YulTypedName",
														"src": "2874:3:8",
														"type": ""
													}
												],
												"src": "2846:60:8"
											},
											{
												"body": {
													"nativeSrc": "2972:82:8",
													"nodeType": "YulBlock",
													"src": "2972:82:8",
													"statements": [
														{
															"nativeSrc": "2982:66:8",
															"nodeType": "YulAssignment",
															"src": "2982:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:8"
																				},
																				"nativeSrc": "3022:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:8"
																		},
																		"nativeSrc": "3013:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:8"
																},
																"nativeSrc": "2995:53:8",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:8",
														"nodeType": "YulTypedName",
														"src": "2952:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:8",
														"nodeType": "YulTypedName",
														"src": "2962:9:8",
														"type": ""
													}
												],
												"src": "2912:142:8"
											},
											{
												"body": {
													"nativeSrc": "3107:28:8",
													"nodeType": "YulBlock",
													"src": "3107:28:8",
													"statements": [
														{
															"nativeSrc": "3117:12:8",
															"nodeType": "YulAssignment",
															"src": "3117:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:8",
																"nodeType": "YulIdentifier",
																"src": "3124:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:8",
														"nodeType": "YulTypedName",
														"src": "3093:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:8",
														"nodeType": "YulTypedName",
														"src": "3103:3:8",
														"type": ""
													}
												],
												"src": "3060:75:8"
											},
											{
												"body": {
													"nativeSrc": "3217:193:8",
													"nodeType": "YulBlock",
													"src": "3217:193:8",
													"statements": [
														{
															"nativeSrc": "3227:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:8"
																},
																"nativeSrc": "3251:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:8"
																				},
																				"nativeSrc": "3340:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:8"
																				},
																				"nativeSrc": "3361:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:8"
																		},
																		"nativeSrc": "3312:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:8"
																},
																"nativeSrc": "3299:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:8"
															},
															"nativeSrc": "3299:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:8",
														"nodeType": "YulTypedName",
														"src": "3194:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:8",
														"nodeType": "YulTypedName",
														"src": "3200:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:8",
														"nodeType": "YulTypedName",
														"src": "3208:7:8",
														"type": ""
													}
												],
												"src": "3141:269:8"
											},
											{
												"body": {
													"nativeSrc": "3465:24:8",
													"nodeType": "YulBlock",
													"src": "3465:24:8",
													"statements": [
														{
															"nativeSrc": "3475:8:8",
															"nodeType": "YulAssignment",
															"src": "3475:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:8",
																"nodeType": "YulLiteral",
																"src": "3482:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:8",
														"nodeType": "YulTypedName",
														"src": "3461:3:8",
														"type": ""
													}
												],
												"src": "3416:73:8"
											},
											{
												"body": {
													"nativeSrc": "3548:136:8",
													"nodeType": "YulBlock",
													"src": "3548:136:8",
													"statements": [
														{
															"nativeSrc": "3558:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:8"
																},
																"nativeSrc": "3572:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:8"
																},
																"nativeSrc": "3613:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:8"
															},
															"nativeSrc": "3613:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:8",
														"nodeType": "YulTypedName",
														"src": "3534:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:8",
														"nodeType": "YulTypedName",
														"src": "3540:6:8",
														"type": ""
													}
												],
												"src": "3495:189:8"
											},
											{
												"body": {
													"nativeSrc": "3740:136:8",
													"nodeType": "YulBlock",
													"src": "3740:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:8",
																"nodeType": "YulBlock",
																"src": "3807:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:8"
																			},
																			"nativeSrc": "3821:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:8"
																		},
																		"nativeSrc": "3821:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:8"
																},
																"nativeSrc": "3757:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:8"
															},
															"nativeSrc": "3750:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:8",
																"nodeType": "YulBlock",
																"src": "3772:26:8",
																"statements": [
																	{
																		"nativeSrc": "3774:22:8",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:8"
																			},
																			"nativeSrc": "3783:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:8",
																"nodeType": "YulBlock",
																"src": "3754:2:8",
																"statements": []
															},
															"src": "3750:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:8",
														"nodeType": "YulTypedName",
														"src": "3728:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:8",
														"nodeType": "YulTypedName",
														"src": "3735:3:8",
														"type": ""
													}
												],
												"src": "3690:186:8"
											},
											{
												"body": {
													"nativeSrc": "3961:464:8",
													"nodeType": "YulBlock",
													"src": "3961:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:8",
																"nodeType": "YulBlock",
																"src": "3987:431:8",
																"statements": [
																	{
																		"nativeSrc": "4001:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:8"
																			},
																			"nativeSrc": "4017:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:8"
																					},
																					"nativeSrc": "4101:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:8"
																			},
																			"nativeSrc": "4087:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:8",
																			"nodeType": "YulBlock",
																			"src": "4288:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:8"
																			},
																			"nativeSrc": "4269:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:8"
																		},
																		"nativeSrc": "4266:49:8",
																		"nodeType": "YulIf",
																		"src": "4266:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:8"
																							},
																							"nativeSrc": "4384:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:8"
																					},
																					"nativeSrc": "4370:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:8"
																			},
																			"nativeSrc": "4328:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:8"
																		},
																		"nativeSrc": "4328:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:8"
																},
																"nativeSrc": "3975:11:8",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:8"
															},
															"nativeSrc": "3972:446:8",
															"nodeType": "YulIf",
															"src": "3972:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:8",
														"nodeType": "YulTypedName",
														"src": "3937:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:8",
														"nodeType": "YulTypedName",
														"src": "3944:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:8",
														"nodeType": "YulTypedName",
														"src": "3949:10:8",
														"type": ""
													}
												],
												"src": "3882:543:8"
											},
											{
												"body": {
													"nativeSrc": "4494:54:8",
													"nodeType": "YulBlock",
													"src": "4494:54:8",
													"statements": [
														{
															"nativeSrc": "4504:37:8",
															"nodeType": "YulAssignment",
															"src": "4504:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:8"
																},
																"nativeSrc": "4525:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:8",
														"nodeType": "YulTypedName",
														"src": "4469:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:8",
														"nodeType": "YulTypedName",
														"src": "4475:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:8",
														"nodeType": "YulTypedName",
														"src": "4485:8:8",
														"type": ""
													}
												],
												"src": "4431:117:8"
											},
											{
												"body": {
													"nativeSrc": "4605:118:8",
													"nodeType": "YulBlock",
													"src": "4605:118:8",
													"statements": [
														{
															"nativeSrc": "4615:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:8"
																				},
																				"nativeSrc": "4660:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:8"
																				},
																				"nativeSrc": "4675:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:8"
																		},
																		"nativeSrc": "4631:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:8"
																},
																"nativeSrc": "4627:56:8",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:8",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:8",
															"nodeType": "YulAssignment",
															"src": "4692:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:8"
																},
																"nativeSrc": "4702:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:8",
														"nodeType": "YulTypedName",
														"src": "4582:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:8",
														"nodeType": "YulTypedName",
														"src": "4588:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:8",
														"nodeType": "YulTypedName",
														"src": "4598:6:8",
														"type": ""
													}
												],
												"src": "4554:169:8"
											},
											{
												"body": {
													"nativeSrc": "4809:214:8",
													"nodeType": "YulBlock",
													"src": "4809:214:8",
													"statements": [
														{
															"nativeSrc": "4942:37:8",
															"nodeType": "YulAssignment",
															"src": "4942:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:8"
																},
																"nativeSrc": "4950:29:8",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:8"
																}
															]
														},
														{
															"nativeSrc": "4988:29:8",
															"nodeType": "YulAssignment",
															"src": "4988:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:8"
																		},
																		"nativeSrc": "5005:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:8"
																},
																"nativeSrc": "4996:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:8",
														"nodeType": "YulTypedName",
														"src": "4790:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:8",
														"nodeType": "YulTypedName",
														"src": "4796:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:8",
														"nodeType": "YulTypedName",
														"src": "4804:4:8",
														"type": ""
													}
												],
												"src": "4728:295:8"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:8",
													"nodeType": "YulBlock",
													"src": "5120:1303:8",
													"statements": [
														{
															"nativeSrc": "5131:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:8"
																},
																"nativeSrc": "5145:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:8",
																"nodeType": "YulBlock",
																"src": "5267:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:8"
																			},
																			"nativeSrc": "5269:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:8"
																		},
																		"nativeSrc": "5269:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:8"
																},
																"nativeSrc": "5236:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:8"
															},
															"nativeSrc": "5233:56:8",
															"nodeType": "YulIf",
															"src": "5233:56:8"
														},
														{
															"nativeSrc": "5299:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:8"
																		},
																		"nativeSrc": "5339:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:8"
																},
																"nativeSrc": "5313:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:8"
																},
																"nativeSrc": "5398:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:8"
															},
															"nativeSrc": "5398:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:8"
														},
														{
															"nativeSrc": "5475:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:8",
																"nodeType": "YulLiteral",
																"src": "5492:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:8",
															"nodeType": "YulAssignment",
															"src": "5503:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:8",
																"nodeType": "YulLiteral",
																"src": "5516:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:8",
																		"nodeType": "YulBlock",
																		"src": "5567:611:8",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:8",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:8"
																							},
																							"nativeSrc": "5608:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:8"
																					},
																					"nativeSrc": "5596:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:8",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:8"
																					},
																					"nativeSrc": "5646:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:8",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:8",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:8",
																					"nodeType": "YulBlock",
																					"src": "5764:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:8"
																												},
																												"nativeSrc": "5803:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:8"
																										},
																										"nativeSrc": "5797:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:8"
																								},
																								"nativeSrc": "5782:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:8"
																							},
																							"nativeSrc": "5782:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:8"
																						},
																						{
																							"nativeSrc": "5841:24:8",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:8",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:8"
																								},
																								"nativeSrc": "5851:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:8",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:8",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:8"
																								},
																								"nativeSrc": "5895:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:8"
																					},
																					"nativeSrc": "5727:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:8"
																				},
																				"nativeSrc": "5719:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:8",
																					"nodeType": "YulBlock",
																					"src": "5742:21:8",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:8",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:8",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:8"
																								},
																								"nativeSrc": "5749:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:8",
																					"nodeType": "YulBlock",
																					"src": "5723:3:8",
																					"statements": []
																				},
																				"src": "5719:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:8",
																					"nodeType": "YulBlock",
																					"src": "5963:156:8",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:8"
																										},
																										"nativeSrc": "6004:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:8"
																								},
																								"nativeSrc": "5998:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:8",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:8"
																												},
																												"nativeSrc": "6086:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:8"
																										},
																										"nativeSrc": "6056:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:8"
																								},
																								"nativeSrc": "6041:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:8"
																							},
																							"nativeSrc": "6041:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:8"
																					},
																					"nativeSrc": "5943:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:8"
																				},
																				"nativeSrc": "5940:179:8",
																				"nodeType": "YulIf",
																				"src": "5940:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:8"
																									},
																									"nativeSrc": "6149:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:8"
																							},
																							"nativeSrc": "6145:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:8"
																					},
																					"nativeSrc": "6132:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:8"
																				},
																				"nativeSrc": "6132:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:8",
																	"nodeType": "YulCase",
																	"src": "5560:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:8",
																		"nodeType": "YulBlock",
																		"src": "6195:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:8",
																					"nodeType": "YulBlock",
																					"src": "6246:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:8"
																										},
																										"nativeSrc": "6279:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:8"
																								},
																								"nativeSrc": "6273:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:8"
																				},
																				"nativeSrc": "6236:77:8",
																				"nodeType": "YulIf",
																				"src": "6236:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:8"
																							},
																							"nativeSrc": "6339:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:8"
																					},
																					"nativeSrc": "6326:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:8"
																				},
																				"nativeSrc": "6326:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:8",
																	"nodeType": "YulCase",
																	"src": "6187:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:8"
																},
																"nativeSrc": "5537:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:8"
															},
															"nativeSrc": "5530:887:8",
															"nodeType": "YulSwitch",
															"src": "5530:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:8",
														"nodeType": "YulTypedName",
														"src": "5109:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:8",
														"nodeType": "YulTypedName",
														"src": "5115:3:8",
														"type": ""
													}
												],
												"src": "5028:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6494:53:8",
													"nodeType": "YulBlock",
													"src": "6494:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:8"
																		},
																		"nativeSrc": "6516:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:8"
																},
																"nativeSrc": "6504:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:8"
															},
															"nativeSrc": "6504:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:8",
														"nodeType": "YulTypedName",
														"src": "6482:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:8",
														"nodeType": "YulTypedName",
														"src": "6489:3:8",
														"type": ""
													}
												],
												"src": "6429:118:8"
											},
											{
												"body": {
													"nativeSrc": "6651:124:8",
													"nodeType": "YulBlock",
													"src": "6651:124:8",
													"statements": [
														{
															"nativeSrc": "6661:26:8",
															"nodeType": "YulAssignment",
															"src": "6661:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:8"
																},
																"nativeSrc": "6669:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:8"
																		},
																		"nativeSrc": "6750:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:8"
																},
																"nativeSrc": "6697:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:8"
															},
															"nativeSrc": "6697:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:8",
														"nodeType": "YulTypedName",
														"src": "6623:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:8",
														"nodeType": "YulTypedName",
														"src": "6635:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:8",
														"nodeType": "YulTypedName",
														"src": "6646:4:8",
														"type": ""
													}
												],
												"src": "6553:222:8"
											},
											{
												"body": {
													"nativeSrc": "6809:152:8",
													"nodeType": "YulBlock",
													"src": "6809:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:8"
																},
																"nativeSrc": "6819:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:8"
															},
															"nativeSrc": "6819:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:8"
																},
																"nativeSrc": "6916:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:8"
															},
															"nativeSrc": "6916:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:8"
																},
																"nativeSrc": "6940:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:8"
															},
															"nativeSrc": "6940:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:8"
											},
											{
												"body": {
													"nativeSrc": "7015:362:8",
													"nodeType": "YulBlock",
													"src": "7015:362:8",
													"statements": [
														{
															"nativeSrc": "7025:25:8",
															"nodeType": "YulAssignment",
															"src": "7025:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7048:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7048:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7030:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7030:17:8"
																},
																"nativeSrc": "7030:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7030:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7025:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7025:1:8"
																}
															]
														},
														{
															"nativeSrc": "7059:25:8",
															"nodeType": "YulAssignment",
															"src": "7059:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7082:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7082:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7064:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7064:17:8"
																},
																"nativeSrc": "7064:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7064:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7059:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7059:1:8"
																}
															]
														},
														{
															"nativeSrc": "7093:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7093:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7116:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7116:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7119:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7119:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7112:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7112:3:8"
																},
																"nativeSrc": "7112:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7112:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7097:11:8",
																	"nodeType": "YulTypedName",
																	"src": "7097:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7130:41:8",
															"nodeType": "YulAssignment",
															"src": "7130:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7159:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "7159:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7141:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7141:17:8"
																},
																"nativeSrc": "7141:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7141:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7130:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7130:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7348:22:8",
																"nodeType": "YulBlock",
																"src": "7348:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7350:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7350:16:8"
																			},
																			"nativeSrc": "7350:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7350:18:8"
																		},
																		"nativeSrc": "7350:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7350:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7281:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "7281:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7274:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7274:6:8"
																				},
																				"nativeSrc": "7274:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7274:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7304:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "7304:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7311:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "7311:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7320:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "7320:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7307:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7307:3:8"
																						},
																						"nativeSrc": "7307:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7307:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7301:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "7301:2:8"
																				},
																				"nativeSrc": "7301:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7301:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7254:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7254:2:8"
																		},
																		"nativeSrc": "7254:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7254:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7234:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7234:6:8"
																},
																"nativeSrc": "7234:113:8",
																"nodeType": "YulFunctionCall",
																"src": "7234:113:8"
															},
															"nativeSrc": "7231:139:8",
															"nodeType": "YulIf",
															"src": "7231:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6967:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:8",
														"nodeType": "YulTypedName",
														"src": "6998:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:8",
														"nodeType": "YulTypedName",
														"src": "7001:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7007:7:8",
														"nodeType": "YulTypedName",
														"src": "7007:7:8",
														"type": ""
													}
												],
												"src": "6967:410:8"
											},
											{
												"body": {
													"nativeSrc": "7411:152:8",
													"nodeType": "YulBlock",
													"src": "7411:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7428:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7428:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7431:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7431:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7421:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7421:6:8"
																},
																"nativeSrc": "7421:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7421:88:8"
															},
															"nativeSrc": "7421:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7421:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7525:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7525:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7528:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7528:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7518:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7518:6:8"
																},
																"nativeSrc": "7518:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7518:15:8"
															},
															"nativeSrc": "7518:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7518:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7549:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7549:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7552:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7552:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7542:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7542:6:8"
																},
																"nativeSrc": "7542:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7542:15:8"
															},
															"nativeSrc": "7542:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7542:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7383:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7383:180:8"
											},
											{
												"body": {
													"nativeSrc": "7611:143:8",
													"nodeType": "YulBlock",
													"src": "7611:143:8",
													"statements": [
														{
															"nativeSrc": "7621:25:8",
															"nodeType": "YulAssignment",
															"src": "7621:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7644:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7644:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7626:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7626:17:8"
																},
																"nativeSrc": "7626:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7626:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7621:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7621:1:8"
																}
															]
														},
														{
															"nativeSrc": "7655:25:8",
															"nodeType": "YulAssignment",
															"src": "7655:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7678:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7678:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7660:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7660:17:8"
																},
																"nativeSrc": "7660:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7660:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7655:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7655:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7702:22:8",
																"nodeType": "YulBlock",
																"src": "7702:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7704:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7704:16:8"
																			},
																			"nativeSrc": "7704:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7704:18:8"
																		},
																		"nativeSrc": "7704:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7704:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7699:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7699:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7692:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7692:6:8"
																},
																"nativeSrc": "7692:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7692:9:8"
															},
															"nativeSrc": "7689:35:8",
															"nodeType": "YulIf",
															"src": "7689:35:8"
														},
														{
															"nativeSrc": "7734:14:8",
															"nodeType": "YulAssignment",
															"src": "7734:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7743:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7743:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7746:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7746:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7739:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7739:3:8"
																},
																"nativeSrc": "7739:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7739:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7734:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7734:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7569:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7600:1:8",
														"nodeType": "YulTypedName",
														"src": "7600:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7603:1:8",
														"nodeType": "YulTypedName",
														"src": "7603:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7609:1:8",
														"nodeType": "YulTypedName",
														"src": "7609:1:8",
														"type": ""
													}
												],
												"src": "7569:185:8"
											},
											{
												"body": {
													"nativeSrc": "7804:147:8",
													"nodeType": "YulBlock",
													"src": "7804:147:8",
													"statements": [
														{
															"nativeSrc": "7814:25:8",
															"nodeType": "YulAssignment",
															"src": "7814:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7837:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7837:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7819:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7819:17:8"
																},
																"nativeSrc": "7819:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7819:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7814:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7814:1:8"
																}
															]
														},
														{
															"nativeSrc": "7848:25:8",
															"nodeType": "YulAssignment",
															"src": "7848:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7871:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7871:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7853:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7853:17:8"
																},
																"nativeSrc": "7853:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7853:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7848:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7848:1:8"
																}
															]
														},
														{
															"nativeSrc": "7882:16:8",
															"nodeType": "YulAssignment",
															"src": "7882:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7893:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7893:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7896:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7896:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7889:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7889:3:8"
																},
																"nativeSrc": "7889:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7889:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7882:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7882:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7922:22:8",
																"nodeType": "YulBlock",
																"src": "7922:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7924:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7924:16:8"
																			},
																			"nativeSrc": "7924:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7924:18:8"
																		},
																		"nativeSrc": "7924:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7924:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7914:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7914:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7917:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7917:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7911:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7911:2:8"
																},
																"nativeSrc": "7911:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7911:10:8"
															},
															"nativeSrc": "7908:36:8",
															"nodeType": "YulIf",
															"src": "7908:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7760:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7791:1:8",
														"nodeType": "YulTypedName",
														"src": "7791:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7794:1:8",
														"nodeType": "YulTypedName",
														"src": "7794:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7800:3:8",
														"nodeType": "YulTypedName",
														"src": "7800:3:8",
														"type": ""
													}
												],
												"src": "7760:191:8"
											},
											{
												"body": {
													"nativeSrc": "8053:73:8",
													"nodeType": "YulBlock",
													"src": "8053:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8070:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8070:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8075:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8075:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8063:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:8"
																},
																"nativeSrc": "8063:19:8",
																"nodeType": "YulFunctionCall",
																"src": "8063:19:8"
															},
															"nativeSrc": "8063:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "8063:19:8"
														},
														{
															"nativeSrc": "8091:29:8",
															"nodeType": "YulAssignment",
															"src": "8091:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8110:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8110:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8115:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8115:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8106:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8106:3:8"
																},
																"nativeSrc": "8106:14:8",
																"nodeType": "YulFunctionCall",
																"src": "8106:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8091:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8091:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7957:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8025:3:8",
														"nodeType": "YulTypedName",
														"src": "8025:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8030:6:8",
														"nodeType": "YulTypedName",
														"src": "8030:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8041:11:8",
														"nodeType": "YulTypedName",
														"src": "8041:11:8",
														"type": ""
													}
												],
												"src": "7957:169:8"
											},
											{
												"body": {
													"nativeSrc": "8238:70:8",
													"nodeType": "YulBlock",
													"src": "8238:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8260:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8260:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8268:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8268:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8256:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:8"
																		},
																		"nativeSrc": "8256:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8256:14:8"
																	},
																	{
																		"hexValue": "4d696e74696e672065786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "8272:28:8",
																		"nodeType": "YulLiteral",
																		"src": "8272:28:8",
																		"type": "",
																		"value": "Minting exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8249:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8249:6:8"
																},
																"nativeSrc": "8249:52:8",
																"nodeType": "YulFunctionCall",
																"src": "8249:52:8"
															},
															"nativeSrc": "8249:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "8249:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab",
												"nativeSrc": "8132:176:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8230:6:8",
														"nodeType": "YulTypedName",
														"src": "8230:6:8",
														"type": ""
													}
												],
												"src": "8132:176:8"
											},
											{
												"body": {
													"nativeSrc": "8460:220:8",
													"nodeType": "YulBlock",
													"src": "8460:220:8",
													"statements": [
														{
															"nativeSrc": "8470:74:8",
															"nodeType": "YulAssignment",
															"src": "8470:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8536:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8536:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8541:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8541:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8477:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8477:58:8"
																},
																"nativeSrc": "8477:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8477:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8470:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8470:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8642:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8642:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab",
																	"nativeSrc": "8553:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8553:88:8"
																},
																"nativeSrc": "8553:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8553:93:8"
															},
															"nativeSrc": "8553:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8553:93:8"
														},
														{
															"nativeSrc": "8655:19:8",
															"nodeType": "YulAssignment",
															"src": "8655:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8666:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8666:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8671:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8671:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8662:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:8"
																},
																"nativeSrc": "8662:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8662:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8655:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8655:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8314:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8448:3:8",
														"nodeType": "YulTypedName",
														"src": "8448:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8456:3:8",
														"nodeType": "YulTypedName",
														"src": "8456:3:8",
														"type": ""
													}
												],
												"src": "8314:366:8"
											},
											{
												"body": {
													"nativeSrc": "8857:248:8",
													"nodeType": "YulBlock",
													"src": "8857:248:8",
													"statements": [
														{
															"nativeSrc": "8867:26:8",
															"nodeType": "YulAssignment",
															"src": "8867:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8879:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8879:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8890:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8890:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8875:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8875:3:8"
																},
																"nativeSrc": "8875:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8875:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8867:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8867:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8914:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8914:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8925:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8925:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8910:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8910:3:8"
																		},
																		"nativeSrc": "8910:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8910:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8933:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8933:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8939:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8939:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8929:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8929:3:8"
																		},
																		"nativeSrc": "8929:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8929:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8903:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8903:6:8"
																},
																"nativeSrc": "8903:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8903:47:8"
															},
															"nativeSrc": "8903:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8903:47:8"
														},
														{
															"nativeSrc": "8959:139:8",
															"nodeType": "YulAssignment",
															"src": "8959:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9093:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9093:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8967:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8967:124:8"
																},
																"nativeSrc": "8967:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8967:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8959:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8959:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8686:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8837:9:8",
														"nodeType": "YulTypedName",
														"src": "8837:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8852:4:8",
														"nodeType": "YulTypedName",
														"src": "8852:4:8",
														"type": ""
													}
												],
												"src": "8686:419:8"
											},
											{
												"body": {
													"nativeSrc": "9176:53:8",
													"nodeType": "YulBlock",
													"src": "9176:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9193:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9193:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9216:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9216:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9198:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9198:17:8"
																		},
																		"nativeSrc": "9198:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9198:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9186:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9186:6:8"
																},
																"nativeSrc": "9186:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9186:37:8"
															},
															"nativeSrc": "9186:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "9186:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9111:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9164:5:8",
														"nodeType": "YulTypedName",
														"src": "9164:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9171:3:8",
														"nodeType": "YulTypedName",
														"src": "9171:3:8",
														"type": ""
													}
												],
												"src": "9111:118:8"
											},
											{
												"body": {
													"nativeSrc": "9389:288:8",
													"nodeType": "YulBlock",
													"src": "9389:288:8",
													"statements": [
														{
															"nativeSrc": "9399:26:8",
															"nodeType": "YulAssignment",
															"src": "9399:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9411:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9411:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9422:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9422:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9407:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9407:3:8"
																},
																"nativeSrc": "9407:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9407:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9399:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9399:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9479:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9479:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9492:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9492:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9503:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9503:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9488:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9488:3:8"
																		},
																		"nativeSrc": "9488:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9488:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9435:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9435:43:8"
																},
																"nativeSrc": "9435:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9435:71:8"
															},
															"nativeSrc": "9435:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9435:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9560:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9560:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9573:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9573:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9584:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9584:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9569:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9569:3:8"
																		},
																		"nativeSrc": "9569:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9569:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9516:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9516:43:8"
																},
																"nativeSrc": "9516:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9516:72:8"
															},
															"nativeSrc": "9516:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9516:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9642:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9642:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9655:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9655:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9666:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9666:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9651:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9651:3:8"
																		},
																		"nativeSrc": "9651:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9651:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9598:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9598:43:8"
																},
																"nativeSrc": "9598:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9598:72:8"
															},
															"nativeSrc": "9598:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9598:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9235:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9345:9:8",
														"nodeType": "YulTypedName",
														"src": "9345:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9357:6:8",
														"nodeType": "YulTypedName",
														"src": "9357:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9365:6:8",
														"nodeType": "YulTypedName",
														"src": "9365:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9373:6:8",
														"nodeType": "YulTypedName",
														"src": "9373:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9384:4:8",
														"nodeType": "YulTypedName",
														"src": "9384:4:8",
														"type": ""
													}
												],
												"src": "9235:442:8"
											},
											{
												"body": {
													"nativeSrc": "9781:124:8",
													"nodeType": "YulBlock",
													"src": "9781:124:8",
													"statements": [
														{
															"nativeSrc": "9791:26:8",
															"nodeType": "YulAssignment",
															"src": "9791:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9803:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9803:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9814:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9814:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9799:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9799:3:8"
																},
																"nativeSrc": "9799:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9799:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9791:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9791:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9871:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9871:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9884:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9884:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9895:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9895:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9880:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9880:3:8"
																		},
																		"nativeSrc": "9880:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9880:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9827:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9827:43:8"
																},
																"nativeSrc": "9827:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9827:71:8"
															},
															"nativeSrc": "9827:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9827:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9683:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9753:9:8",
														"nodeType": "YulTypedName",
														"src": "9753:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9765:6:8",
														"nodeType": "YulTypedName",
														"src": "9765:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9776:4:8",
														"nodeType": "YulTypedName",
														"src": "9776:4:8",
														"type": ""
													}
												],
												"src": "9683:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minting exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526402540be4006007556064600d5534801561001d575f80fd5b506040516137c13803806137c1833981810160405281019061003f919061067e565b806040518060400160405280600e81526020017f526567616c69756d20546f6b656e0000000000000000000000000000000000008152506040518060400160405280600481526020017f52474c4d0000000000000000000000000000000000000000000000000000000081525081600390816100bb91906108e3565b5080600490816100cb91906108e3565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361013e575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161013591906109c1565b60405180910390fd5b61014d8161023c60201b60201c565b5061018181606460146a295be96e6406697200000061016c9190610a07565b6101769190610a75565b6102ff60201b60201c565b600e81908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050610bad565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6a295be96e640669720000008161031a61037960201b60201c565b6103249190610aa5565b1115610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c90610b32565b60405180910390fd5b610375828261038260201b60201c565b5050565b5f600254905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103f2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103e991906109c1565b60405180910390fd5b6104035f838361040760201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610457578060025f82825461044b9190610aa5565b92505081905550610525565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156104e0578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104d793929190610b5f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361056c578060025f82825403925050819055506105b6565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106139190610b94565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61064d82610624565b9050919050565b61065d81610643565b8114610667575f80fd5b50565b5f8151905061067881610654565b92915050565b5f6020828403121561069357610692610620565b5b5f6106a08482850161066a565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061072457607f821691505b602082108103610737576107366106e0565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261075e565b6107a3868361075e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6107e76107e26107dd846107bb565b6107c4565b6107bb565b9050919050565b5f819050919050565b610800836107cd565b61081461080c826107ee565b84845461076a565b825550505050565b5f90565b61082861081c565b6108338184846107f7565b505050565b5b818110156108565761084b5f82610820565b600181019050610839565b5050565b601f82111561089b5761086c8161073d565b6108758461074f565b81016020851015610884578190505b6108986108908561074f565b830182610838565b50505b505050565b5f82821c905092915050565b5f6108bb5f19846008026108a0565b1980831691505092915050565b5f6108d383836108ac565b9150826002028217905092915050565b6108ec826106a9565b67ffffffffffffffff811115610905576109046106b3565b5b61090f825461070d565b61091a82828561085a565b5f60209050601f83116001811461094b575f8415610939578287015190505b61094385826108c8565b8655506109aa565b601f1984166109598661073d565b5f5b828110156109805784890151825560018201915060208501945060208101905061095b565b8683101561099d5784890151610999601f8916826108ac565b8355505b6001600288020188555050505b505050505050565b6109bb81610643565b82525050565b5f6020820190506109d45f8301846109b2565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a11826107bb565b9150610a1c836107bb565b9250828202610a2a816107bb565b91508282048414831517610a4157610a406109da565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610a7f826107bb565b9150610a8a836107bb565b925082610a9a57610a99610a48565b5b828204905092915050565b5f610aaf826107bb565b9150610aba836107bb565b9250828201905080821115610ad257610ad16109da565b5b92915050565b5f82825260208201905092915050565b7f4d696e74696e672065786365656473206d617820737570706c790000000000005f82015250565b5f610b1c601a83610ad8565b9150610b2782610ae8565b602082019050919050565b5f6020820190508181035f830152610b4981610b10565b9050919050565b610b59816107bb565b82525050565b5f606082019050610b725f8301866109b2565b610b7f6020830185610b50565b610b8c6040830184610b50565b949350505050565b5f602082019050610ba75f830184610b50565b92915050565b612c0780610bba5f395ff3fe608060405234801561000f575f80fd5b5060043610610225575f3560e01c8063602512e11161012e5780638da5cb5b116100b6578063a9059cbb1161007a578063a9059cbb14610663578063c7b8981c14610693578063d82e39621461069d578063dd62ed3e146106cd578063f2fde38b146106fd57610225565b80638da5cb5b146105d357806395d89b41146105f15780639e447fc61461060f578063a694fc3a1461062b578063a6f9dae11461064757610225565b8063715018a6116100fd578063715018a61461054157806379cc67901461054b5780637b0a47ee146105675780637bb1ca1914610585578063817b1cd2146105b557610225565b8063602512e1146104bb5780636e99d52f146104d757806370480275146104f557806370a082311461051157610225565b806324d7806c116101b157806332cb6b0c1161018057806332cb6b0c14610417578063331e03a81461043557806342966c68146104655780634d474898146104815780635556db651461049d57610225565b806324d7806c1461038f5780632e17de78146103bf578063313ce567146103db57806331ae450b146103f957610225565b806316934fc4116101f857806316934fc4146102d75780631785f53c1461030757806318160ddd1461032357806319cae4621461034157806323b872dd1461035f57610225565b806306fdde03146102295780630700037d14610247578063095ea7b31461027757806314bfd6d0146102a7575b5f80fd5b610231610719565b60405161023e9190612097565b60405180910390f35b610261600480360381019061025c9190612115565b6107a9565b60405161026e9190612158565b60405180910390f35b610291600480360381019061028c919061219b565b6107be565b60405161029e91906121f3565b60405180910390f35b6102c160048036038101906102bc919061220c565b6107e0565b6040516102ce9190612246565b60405180910390f35b6102f160048036038101906102ec9190612115565b61081b565b6040516102fe9190612158565b60405180910390f35b610321600480360381019061031c9190612115565b610830565b005b61032b610ada565b6040516103389190612158565b60405180910390f35b610349610ae3565b6040516103569190612158565b60405180910390f35b6103796004803603810190610374919061225f565b610ae9565b60405161038691906121f3565b60405180910390f35b6103a960048036038101906103a49190612115565b610b17565b6040516103b691906121f3565b60405180910390f35b6103d960048036038101906103d4919061220c565b610b34565b005b6103e3610cfc565b6040516103f091906122ca565b60405180910390f35b610401610d04565b60405161040e919061239a565b60405180910390f35b61041f610d8f565b60405161042c9190612158565b60405180910390f35b61044f600480360381019061044a9190612115565b610d9e565b60405161045c9190612158565b60405180910390f35b61047f600480360381019061047a919061220c565b610db3565b005b61049b6004803603810190610496919061220c565b610dc7565b005b6104a5610ed4565b6040516104b29190612158565b60405180910390f35b6104d560048036038101906104d0919061220c565b610eda565b005b6104df610f6d565b6040516104ec9190612158565b60405180910390f35b61050f600480360381019061050a9190612115565b610f74565b005b61052b60048036038101906105269190612115565b6110be565b6040516105389190612158565b60405180910390f35b610549611103565b005b6105656004803603810190610560919061219b565b611116565b005b61056f611136565b60405161057c9190612158565b60405180910390f35b61059f600480360381019061059a9190612115565b61113c565b6040516105ac9190612158565b60405180910390f35b6105bd611151565b6040516105ca9190612158565b60405180910390f35b6105db611157565b6040516105e89190612246565b60405180910390f35b6105f961117f565b6040516106069190612097565b60405180910390f35b6106296004803603810190610624919061220c565b61120f565b005b6106456004803603810190610640919061220c565b6112a2565b005b610661600480360381019061065c9190612115565b61142c565b005b61067d6004803603810190610678919061219b565b6114ae565b60405161068a91906121f3565b60405180910390f35b61069b6114d0565b005b6106b760048036038101906106b29190612115565b61156d565b6040516106c49190612158565b60405180910390f35b6106e760048036038101906106e291906123ba565b6116e8565b6040516106f49190612158565b60405180910390f35b61071760048036038101906107129190612115565b61176a565b005b60606003805461072890612425565b80601f016020809104026020016040519081016040528092919081815260200182805461075490612425565b801561079f5780601f106107765761010080835404028352916020019161079f565b820191905f5260205f20905b81548152906001019060200180831161078257829003601f168201915b5050505050905090565b6009602052805f5260405f205f915090505481565b5f806107c86117ee565b90506107d58185856117f5565b600191505092915050565b600e81815481106107ef575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6008602052805f5260405f205f915090505481565b610838611807565b600f5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166108c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b89061249f565b60405180910390fd5b6001600e8054905011610909576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090090612507565b60405180910390fd5b5f600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f5b600e80549050811015610ad6578173ffffffffffffffffffffffffffffffffffffffff16600e828154811061099757610996612525565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ac957600e6001600e805490506109ee919061257f565b815481106109ff576109fe612525565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e8281548110610a3b57610a3a612525565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600e805480610a9257610a916125b2565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610ad6565b808060010191505061095f565b5050565b5f600254905090565b60075481565b5f80610af36117ee565b9050610b0085828561188e565b610b0b858585611920565b60019150509392505050565b600f602052805f5260405f205f915054906101000a900460ff1681565b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90612629565b60405180910390fd5b62015180600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610c009190612647565b421015610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c39906126ea565b60405180910390fd5b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c8e919061257f565b9250508190555080600c5f828254610ca6919061257f565b92505081905550610cb73382611a10565b42600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f6012905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610d8557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d3c575b5050505050905090565b6a295be96e6406697200000081565b600b602052805f5260405f205f915090505481565b610dc4610dbe6117ee565b82611a8f565b50565b606460506a295be96e64066972000000610de19190612708565b610deb9190612776565b60065410610e2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e25906127f0565b60405180910390fd5b5f3382604051602001610e42929190612873565b604051602081830303815290604052805190602001209050600754815f1c10610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e97906128e8565b60405180910390fd5b5f6802b5e3af16b18800009050610eb73382611b0e565b8060065f828254610ec89190612647565b92505081905550505050565b60065481565b600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a9061249f565b60405180910390fd5b8060078190555050565b6201518081565b610f7c611807565b600f5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611006576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffd90612950565b60405180910390fd5b6001600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600e81908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61110b611807565b6111145f611b7c565b565b611128826111226117ee565b8361188e565b6111328282611a8f565b5050565b600d5481565b600a602052805f5260405f205f915090505481565b600c5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461118e90612425565b80601f01602080910402602001604051908101604052809291908181526020018280546111ba90612425565b80156112055780601f106111dc57610100808354040283529160200191611205565b820191905f5260205f20905b8154815290600101906020018083116111e857829003601f168201915b5050505050905090565b600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128f9061249f565b60405180910390fd5b80600d8190555050565b5f81116112e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112db906129b8565b60405180910390fd5b62015180600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546113309190612647565b421015611372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136990612a46565b60405180910390fd5b61137c3382611a8f565b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546113c89190612647565b9250508190555080600c5f8282546113e09190612647565b9250508190555042600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b611434611807565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149990612aae565b60405180910390fd5b6114ab81611b7c565b50565b5f806114b86117ee565b90506114c5818585611920565b600191505092915050565b5f6114da3361156d565b90505f811161151e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151590612b16565b60405180910390fd5b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061156a3382611a10565b50565b5f80612710600d5460085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546115bd9190612708565b6115c79190612776565b90505f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811115611696575f814261161f919061257f565b905064496cebb80081600d5460085f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546116739190612708565b61167d9190612708565b6116879190612776565b836116929190612647565b9250505b60095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054826116df9190612647565b92505050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611772611807565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117e2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117d99190612246565b60405180910390fd5b6117eb81611b7c565b50565b5f33905090565b6118028383836001611c3f565b505050565b61180f6117ee565b73ffffffffffffffffffffffffffffffffffffffff1661182d611157565b73ffffffffffffffffffffffffffffffffffffffff161461188c576118506117ee565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016118839190612246565b60405180910390fd5b565b5f61189984846116e8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461191a578181101561190b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161190293929190612b34565b60405180910390fd5b61191984848484035f611c3f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611990575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119879190612246565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a00575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119f79190612246565b60405180910390fd5b611a0b838383611e0e565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a80575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611a779190612246565b60405180910390fd5b611a8b5f8383611e0e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611aff575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611af69190612246565b60405180910390fd5b611b0a825f83611e0e565b5050565b6a295be96e6406697200000081611b23610ada565b611b2d9190612647565b1115611b6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6590612bb3565b60405180910390fd5b611b788282611a10565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611caf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611ca69190612246565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d1f575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d169190612246565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611e08578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611dff9190612158565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e5e578060025f828254611e529190612647565b92505081905550611f2c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611ee7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ede93929190612b34565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f73578060025f8282540392505081905550611fbd565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161201a9190612158565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61206982612027565b6120738185612031565b9350612083818560208601612041565b61208c8161204f565b840191505092915050565b5f6020820190508181035f8301526120af818461205f565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6120e4826120bb565b9050919050565b6120f4816120da565b81146120fe575f80fd5b50565b5f8135905061210f816120eb565b92915050565b5f6020828403121561212a576121296120b7565b5b5f61213784828501612101565b91505092915050565b5f819050919050565b61215281612140565b82525050565b5f60208201905061216b5f830184612149565b92915050565b61217a81612140565b8114612184575f80fd5b50565b5f8135905061219581612171565b92915050565b5f80604083850312156121b1576121b06120b7565b5b5f6121be85828601612101565b92505060206121cf85828601612187565b9150509250929050565b5f8115159050919050565b6121ed816121d9565b82525050565b5f6020820190506122065f8301846121e4565b92915050565b5f60208284031215612221576122206120b7565b5b5f61222e84828501612187565b91505092915050565b612240816120da565b82525050565b5f6020820190506122595f830184612237565b92915050565b5f805f60608486031215612276576122756120b7565b5b5f61228386828701612101565b935050602061229486828701612101565b92505060406122a586828701612187565b9150509250925092565b5f60ff82169050919050565b6122c4816122af565b82525050565b5f6020820190506122dd5f8301846122bb565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612315816120da565b82525050565b5f612326838361230c565b60208301905092915050565b5f602082019050919050565b5f612348826122e3565b61235281856122ed565b935061235d836122fd565b805f5b8381101561238d578151612374888261231b565b975061237f83612332565b925050600181019050612360565b5085935050505092915050565b5f6020820190508181035f8301526123b2818461233e565b905092915050565b5f80604083850312156123d0576123cf6120b7565b5b5f6123dd85828601612101565b92505060206123ee85828601612101565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061243c57607f821691505b60208210810361244f5761244e6123f8565b5b50919050565b7f4e6f7420616e2061646d696e00000000000000000000000000000000000000005f82015250565b5f612489600c83612031565b915061249482612455565b602082019050919050565b5f6020820190508181035f8301526124b68161247d565b9050919050565b7f43616e6e6f742072656d6f766520746865206c6173742061646d696e000000005f82015250565b5f6124f1601c83612031565b91506124fc826124bd565b602082019050919050565b5f6020820190508181035f83015261251e816124e5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61258982612140565b915061259483612140565b92508282039050818111156125ac576125ab612552565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f496e73756666696369656e74207374616b652062616c616e63650000000000005f82015250565b5f612613601a83612031565b915061261e826125df565b602082019050919050565b5f6020820190508181035f83015261264081612607565b9050919050565b5f61265182612140565b915061265c83612140565b925082820190508082111561267457612673612552565b5b92915050565b7f436f6f6c646f776e20706572696f64206e6f74206d657420666f7220756e73745f8201527f616b696e67000000000000000000000000000000000000000000000000000000602082015250565b5f6126d4602583612031565b91506126df8261267a565b604082019050919050565b5f6020820190508181035f830152612701816126c8565b9050919050565b5f61271282612140565b915061271d83612140565b925082820261272b81612140565b9150828204841483151761274257612741612552565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61278082612140565b915061278b83612140565b92508261279b5761279a612749565b5b828204905092915050565b7f416c6c20746f6b656e73206d696e6564000000000000000000000000000000005f82015250565b5f6127da601083612031565b91506127e5826127a6565b602082019050919050565b5f6020820190508181035f830152612807816127ce565b9050919050565b5f8160601b9050919050565b5f6128248261280e565b9050919050565b5f6128358261281a565b9050919050565b61284d612848826120da565b61282b565b82525050565b5f819050919050565b61286d61286882612140565b612853565b82525050565b5f61287e828561283c565b60148201915061288e828461285c565b6020820191508190509392505050565b7f4d696e696e6720646966666963756c7479206e6f74206d6574000000000000005f82015250565b5f6128d2601983612031565b91506128dd8261289e565b602082019050919050565b5f6020820190508181035f8301526128ff816128c6565b9050919050565b7f416c726561647920616e2061646d696e000000000000000000000000000000005f82015250565b5f61293a601083612031565b915061294582612906565b602082019050919050565b5f6020820190508181035f8301526129678161292e565b9050919050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f6129a2601583612031565b91506129ad8261296e565b602082019050919050565b5f6020820190508181035f8301526129cf81612996565b9050919050565b7f436f6f6c646f776e20706572696f64206e6f74206d657420666f72207374616b5f8201527f696e670000000000000000000000000000000000000000000000000000000000602082015250565b5f612a30602383612031565b9150612a3b826129d6565b604082019050919050565b5f6020820190508181035f830152612a5d81612a24565b9050919050565b7f496e76616c6964206e6577206f776e65720000000000000000000000000000005f82015250565b5f612a98601183612031565b9150612aa382612a64565b602082019050919050565b5f6020820190508181035f830152612ac581612a8c565b9050919050565b7f4e6f207265776172647320746f207769746864726177000000000000000000005f82015250565b5f612b00601683612031565b9150612b0b82612acc565b602082019050919050565b5f6020820190508181035f830152612b2d81612af4565b9050919050565b5f606082019050612b475f830186612237565b612b546020830185612149565b612b616040830184612149565b949350505050565b7f4d696e74696e672065786365656473206d617820737570706c790000000000005f82015250565b5f612b9d601a83612031565b9150612ba882612b69565b602082019050919050565b5f6020820190508181035f830152612bca81612b91565b905091905056fea2646970667358221220c45a95eeaa528f9b74e29ce055f60c1132fb7d1de34ee80423786713a28ead6064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH5 0x2540BE400 PUSH1 0x7 SSTORE PUSH1 0x64 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x37C1 CODESIZE SUB DUP1 PUSH2 0x37C1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3F SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x526567616C69756D20546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52474C4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D DUP2 PUSH2 0x23C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x181 DUP2 PUSH1 0x64 PUSH1 0x14 PUSH11 0x295BE96E64066972000000 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x2FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH2 0xBAD JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 DUP2 PUSH2 0x31A PUSH2 0x379 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x324 SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST GT ISZERO PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x375 DUP3 DUP3 PUSH2 0x382 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x403 PUSH0 DUP4 DUP4 PUSH2 0x407 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x457 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x525 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x56C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5B6 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x64D DUP3 PUSH2 0x624 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP2 PUSH2 0x643 JUMP JUMPDEST DUP2 EQ PUSH2 0x667 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x678 DUP2 PUSH2 0x654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x693 JUMPI PUSH2 0x692 PUSH2 0x620 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6A0 DUP5 DUP3 DUP6 ADD PUSH2 0x66A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x724 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x737 JUMPI PUSH2 0x736 PUSH2 0x6E0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x799 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x75E JUMP JUMPDEST PUSH2 0x7A3 DUP7 DUP4 PUSH2 0x75E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7E7 PUSH2 0x7E2 PUSH2 0x7DD DUP5 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x800 DUP4 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x814 PUSH2 0x80C DUP3 PUSH2 0x7EE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x76A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x828 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x833 DUP2 DUP5 DUP5 PUSH2 0x7F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x856 JUMPI PUSH2 0x84B PUSH0 DUP3 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x839 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x89B JUMPI PUSH2 0x86C DUP2 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x875 DUP5 PUSH2 0x74F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x884 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x898 PUSH2 0x890 DUP6 PUSH2 0x74F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x838 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8BB PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8A0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D3 DUP4 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8EC DUP3 PUSH2 0x6A9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x905 JUMPI PUSH2 0x904 PUSH2 0x6B3 JUMP JUMPDEST JUMPDEST PUSH2 0x90F DUP3 SLOAD PUSH2 0x70D JUMP JUMPDEST PUSH2 0x91A DUP3 DUP3 DUP6 PUSH2 0x85A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x94B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x939 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x943 DUP6 DUP3 PUSH2 0x8C8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x959 DUP7 PUSH2 0x73D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x980 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x95B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x99D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x999 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8AC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9BB DUP2 PUSH2 0x643 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x9B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA11 DUP3 PUSH2 0x7BB JUMP JUMPDEST SWAP2 POP PUSH2 0xA1C DUP4 PUSH2 0x7BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA2A DUP2 PUSH2 0x7BB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA41 JUMPI PUSH2 0xA40 PUSH2 0x9DA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA7F DUP3 PUSH2 0x7BB JUMP JUMPDEST SWAP2 POP PUSH2 0xA8A DUP4 PUSH2 0x7BB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA9A JUMPI PUSH2 0xA99 PUSH2 0xA48 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAAF DUP3 PUSH2 0x7BB JUMP JUMPDEST SWAP2 POP PUSH2 0xABA DUP4 PUSH2 0x7BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0x9DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E74696E672065786365656473206D617820737570706C79000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB1C PUSH1 0x1A DUP4 PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP PUSH2 0xB27 DUP3 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB49 DUP2 PUSH2 0xB10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB59 DUP2 PUSH2 0x7BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB72 PUSH0 DUP4 ADD DUP7 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0xB7F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0xB8C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB50 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA7 PUSH0 DUP4 ADD DUP5 PUSH2 0xB50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C07 DUP1 PUSH2 0xBBA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x602512E1 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6FD JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x647 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x7BB1CA19 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x5B5 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x602512E1 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x6E99D52F EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x511 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x331E03A8 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x4D474898 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x5556DB65 EQ PUSH2 0x49D JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x24D7806C EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x31AE450B EQ PUSH2 0x3F9 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x19CAE462 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x35F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x14BFD6D0 EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x231 PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH2 0xADA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x225F JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E3 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41F PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A5 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DF PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xF74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x549 PUSH2 0x1103 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x565 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x1116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x56F PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DB PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F9 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x629 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x645 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x67D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68A SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69B PUSH2 0x14D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x23BA JUMP JUMPDEST PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x717 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x176A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x728 SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x754 SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x776 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x782 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7C8 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH2 0x7D5 DUP2 DUP6 DUP6 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7EF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x838 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0xF PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B8 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xE DUP1 SLOAD SWAP1 POP GT PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x900 SWAP1 PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 JUMPDEST PUSH1 0xE DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xAD6 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x2525 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC9 JUMPI PUSH1 0xE PUSH1 0x1 PUSH1 0xE DUP1 SLOAD SWAP1 POP PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9FF JUMPI PUSH2 0x9FE PUSH2 0x2525 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA3B JUMPI PUSH2 0xA3A PUSH2 0x2525 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP1 SLOAD DUP1 PUSH2 0xA92 JUMPI PUSH2 0xA91 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0xAD6 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x95F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAF3 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH2 0xB00 DUP6 DUP3 DUP6 PUSH2 0x188E JUMP JUMPDEST PUSH2 0xB0B DUP6 DUP6 DUP6 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAB SWAP1 PUSH2 0x2629 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCB7 CALLER DUP3 PUSH2 0x1A10 JUMP JUMPDEST TIMESTAMP PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD85 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD3C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC4 PUSH2 0xDBE PUSH2 0x17EE JUMP JUMPDEST DUP3 PUSH2 0x1A8F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x64 PUSH1 0x50 PUSH11 0x295BE96E64066972000000 PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH1 0x6 SLOAD LT PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE25 SWAP1 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE42 SWAP3 SWAP2 SWAP1 PUSH2 0x2873 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH0 SHR LT PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE97 SWAP1 PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH9 0x2B5E3AF16B1880000 SWAP1 POP PUSH2 0xEB7 CALLER DUP3 PUSH2 0x1B0E JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0xF7C PUSH2 0x1807 JUMP JUMPDEST PUSH1 0xF PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP1 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110B PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x1114 PUSH0 PUSH2 0x1B7C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1128 DUP3 PUSH2 0x1122 PUSH2 0x17EE JUMP JUMPDEST DUP4 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x1132 DUP3 DUP3 PUSH2 0x1A8F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x118E SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11BA SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1205 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1205 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128F SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x12E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DB SWAP1 PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1330 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1369 SWAP1 PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137C CALLER DUP3 PUSH2 0x1A8F JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13E0 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1434 PUSH2 0x1807 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1499 SWAP1 PUSH2 0x2AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14AB DUP2 PUSH2 0x1B7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14B8 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH2 0x14C5 DUP2 DUP6 DUP6 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DA CALLER PUSH2 0x156D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1515 SWAP1 PUSH2 0x2B16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x156A CALLER DUP3 PUSH2 0x1A10 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH1 0xD SLOAD PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x15BD SWAP2 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0x15C7 SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1696 JUMPI PUSH0 DUP2 TIMESTAMP PUSH2 0x161F SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH5 0x496CEBB800 DUP2 PUSH1 0xD SLOAD PUSH1 0x8 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1673 SWAP2 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0x167D SWAP2 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0x1687 SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST DUP4 PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0x16DF SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1772 PUSH2 0x1807 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17EB DUP2 PUSH2 0x1B7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1802 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x180F PUSH2 0x17EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x182D PUSH2 0x1157 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x188C JUMPI PUSH2 0x1850 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1883 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1899 DUP5 DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x191A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x190B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1902 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1919 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1C3F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1990 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1987 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A00 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F7 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0B DUP4 DUP4 DUP4 PUSH2 0x1E0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A80 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A77 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A8B PUSH0 DUP4 DUP4 PUSH2 0x1E0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AFF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF6 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B0A DUP3 PUSH0 DUP4 PUSH2 0x1E0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 DUP2 PUSH2 0x1B23 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x1B2D SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST GT ISZERO PUSH2 0x1B6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B65 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B78 DUP3 DUP3 PUSH2 0x1A10 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CAF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA6 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D1F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D16 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1E08 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DFF SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E5E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E52 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F2C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1EE7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F73 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FBD JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x201A SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2069 DUP3 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x2073 DUP2 DUP6 PUSH2 0x2031 JUMP JUMPDEST SWAP4 POP PUSH2 0x2083 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x208C DUP2 PUSH2 0x204F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20AF DUP2 DUP5 PUSH2 0x205F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20E4 DUP3 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F4 DUP2 PUSH2 0x20DA JUMP JUMPDEST DUP2 EQ PUSH2 0x20FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210F DUP2 PUSH2 0x20EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2137 DUP5 DUP3 DUP6 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2152 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216B PUSH0 DUP4 ADD DUP5 PUSH2 0x2149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x217A DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP2 EQ PUSH2 0x2184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2195 DUP2 PUSH2 0x2171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21BE DUP6 DUP3 DUP7 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21CF DUP6 DUP3 DUP7 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21ED DUP2 PUSH2 0x21D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2206 PUSH0 DUP4 ADD DUP5 PUSH2 0x21E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2221 JUMPI PUSH2 0x2220 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222E DUP5 DUP3 DUP6 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2240 DUP2 PUSH2 0x20DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2259 PUSH0 DUP4 ADD DUP5 PUSH2 0x2237 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2276 JUMPI PUSH2 0x2275 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2283 DUP7 DUP3 DUP8 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2294 DUP7 DUP3 DUP8 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22A5 DUP7 DUP3 DUP8 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C4 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22DD PUSH0 DUP4 ADD DUP5 PUSH2 0x22BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2315 DUP2 PUSH2 0x20DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2326 DUP4 DUP4 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2348 DUP3 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x2352 DUP2 DUP6 PUSH2 0x22ED JUMP JUMPDEST SWAP4 POP PUSH2 0x235D DUP4 PUSH2 0x22FD JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x238D JUMPI DUP2 MLOAD PUSH2 0x2374 DUP9 DUP3 PUSH2 0x231B JUMP JUMPDEST SWAP8 POP PUSH2 0x237F DUP4 PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2360 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B2 DUP2 DUP5 PUSH2 0x233E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23D0 JUMPI PUSH2 0x23CF PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23DD DUP6 DUP3 DUP7 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23EE DUP6 DUP3 DUP7 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x243C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x244F JUMPI PUSH2 0x244E PUSH2 0x23F8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2489 PUSH1 0xC DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2494 DUP3 PUSH2 0x2455 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24B6 DUP2 PUSH2 0x247D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742072656D6F766520746865206C6173742061646D696E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24F1 PUSH1 0x1C DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FC DUP3 PUSH2 0x24BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x251E DUP2 PUSH2 0x24E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2589 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH2 0x2594 DUP4 PUSH2 0x2140 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25AC JUMPI PUSH2 0x25AB PUSH2 0x2552 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E74207374616B652062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2613 PUSH1 0x1A DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x261E DUP3 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2640 DUP2 PUSH2 0x2607 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2651 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH2 0x265C DUP4 PUSH2 0x2140 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2673 PUSH2 0x2552 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E20706572696F64206E6F74206D657420666F7220756E7374 PUSH0 DUP3 ADD MSTORE PUSH32 0x616B696E67000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26D4 PUSH1 0x25 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x26DF DUP3 PUSH2 0x267A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2701 DUP2 PUSH2 0x26C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2712 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH2 0x271D DUP4 PUSH2 0x2140 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x272B DUP2 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2742 JUMPI PUSH2 0x2741 PUSH2 0x2552 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2780 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH2 0x278B DUP4 PUSH2 0x2140 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x279B JUMPI PUSH2 0x279A PUSH2 0x2749 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C20746F6B656E73206D696E656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27DA PUSH1 0x10 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E5 DUP3 PUSH2 0x27A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2807 DUP2 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2824 DUP3 PUSH2 0x280E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2835 DUP3 PUSH2 0x281A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284D PUSH2 0x2848 DUP3 PUSH2 0x20DA JUMP JUMPDEST PUSH2 0x282B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x286D PUSH2 0x2868 DUP3 PUSH2 0x2140 JUMP JUMPDEST PUSH2 0x2853 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x287E DUP3 DUP6 PUSH2 0x283C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x288E DUP3 DUP5 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D696E696E6720646966666963756C7479206E6F74206D657400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28D2 PUSH1 0x19 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x28DD DUP3 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28FF DUP2 PUSH2 0x28C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920616E2061646D696E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x293A PUSH1 0x10 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2945 DUP3 PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2967 DUP2 PUSH2 0x292E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29A2 PUSH1 0x15 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x29AD DUP3 PUSH2 0x296E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29CF DUP2 PUSH2 0x2996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E20706572696F64206E6F74206D657420666F72207374616B PUSH0 DUP3 ADD MSTORE PUSH32 0x696E670000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A30 PUSH1 0x23 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3B DUP3 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A5D DUP2 PUSH2 0x2A24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206E6577206F776E6572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A98 PUSH1 0x11 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA3 DUP3 PUSH2 0x2A64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AC5 DUP2 PUSH2 0x2A8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B00 PUSH1 0x16 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0B DUP3 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B2D DUP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B47 PUSH0 DUP4 ADD DUP7 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0x2B54 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x2B61 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2149 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D696E74696E672065786365656473206D617820737570706C79000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9D PUSH1 0x1A DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA8 DUP3 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCA DUP2 PUSH2 0x2B91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 GAS SWAP6 0xEE 0xAA MSTORE DUP16 SWAP12 PUSH21 0xE29CE055F60C1132FB7D1DE34EE80423786713A28E 0xAD PUSH1 0x64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "250:4644:7:-:0;;;436:6;408:34;;721:3;693:31;;972:280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1046:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1071:54:7::2;1089:12;1121:3;1116:2;352:17;1103:15;;;;:::i;:::-;:21;;;;:::i;:::-;1071:17;;;:54;;:::i;:::-;1180:6;1192:12;1180:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:4;1216:7;:21;1224:12;1216:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;972:280:::0;250:4644;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1323:196:7:-;352:17;1427:6;1411:13;:11;;;:13;;:::i;:::-;:22;;;;:::i;:::-;:36;;1403:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1489:22;1495:7;1504:6;1489:5;;;:22;;:::i;:::-;1323:196;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:410;7007:7;7030:20;7048:1;7030:20;:::i;:::-;7025:25;;7064:20;7082:1;7064:20;:::i;:::-;7059:25;;7119:1;7116;7112:9;7141:30;7159:11;7141:30;:::i;:::-;7130:41;;7320:1;7311:7;7307:15;7304:1;7301:22;7281:1;7274:9;7254:83;7231:139;;7350:18;;:::i;:::-;7231:139;7015:362;6967:410;;;;:::o;7383:180::-;7431:77;7428:1;7421:88;7528:4;7525:1;7518:15;7552:4;7549:1;7542:15;7569:185;7609:1;7626:20;7644:1;7626:20;:::i;:::-;7621:25;;7660:20;7678:1;7660:20;:::i;:::-;7655:25;;7699:1;7689:35;;7704:18;;:::i;:::-;7689:35;7746:1;7743;7739:9;7734:14;;7569:185;;;;:::o;7760:191::-;7800:3;7819:20;7837:1;7819:20;:::i;:::-;7814:25;;7853:20;7871:1;7853:20;:::i;:::-;7848:25;;7896:1;7893;7889:9;7882:16;;7917:3;7914:1;7911:10;7908:36;;;7924:18;;:::i;:::-;7908:36;7760:191;;;;:::o;7957:169::-;8041:11;8075:6;8070:3;8063:19;8115:4;8110:3;8106:14;8091:29;;7957:169;;;;:::o;8132:176::-;8272:28;8268:1;8260:6;8256:14;8249:52;8132:176;:::o;8314:366::-;8456:3;8477:67;8541:2;8536:3;8477:67;:::i;:::-;8470:74;;8553:93;8642:3;8553:93;:::i;:::-;8671:2;8666:3;8662:12;8655:19;;8314:366;;;:::o;8686:419::-;8852:4;8890:2;8879:9;8875:18;8867:26;;8939:9;8933:4;8929:20;8925:1;8914:9;8910:17;8903:47;8967:131;9093:4;8967:131;:::i;:::-;8959:139;;8686:419;;;:::o;9111:118::-;9198:24;9216:5;9198:24;:::i;:::-;9193:3;9186:37;9111:118;;:::o;9235:442::-;9384:4;9422:2;9411:9;9407:18;9399:26;;9435:71;9503:1;9492:9;9488:17;9479:6;9435:71;:::i;:::-;9516:72;9584:2;9573:9;9569:18;9560:6;9516:72;:::i;:::-;9598;9666:2;9655:9;9651:18;9642:6;9598:72;:::i;:::-;9235:442;;;;;;:::o;9683:222::-;9776:4;9814:2;9803:9;9799:18;9791:26;;9827:71;9895:1;9884:9;9880:17;9871:6;9827:71;:::i;:::-;9683:222;;;;:::o;250:4644:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@COOLDOWN_PERIOD_1028": {
									"entryPoint": 3949,
									"id": 1028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_997": {
									"entryPoint": 3471,
									"id": 997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 6133,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 7231,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 6799,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6151,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mintWithCapCheck_1104": {
									"entryPoint": 6926,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 6672,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 6126,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 6286,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 7036,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 6432,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 7694,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addAdmin_1381": {
									"entryPoint": 3956,
									"id": 1381,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@admins_1031": {
									"entryPoint": 2016,
									"id": 1031,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 5864,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1982,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 4286,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 4374,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 3507,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_1353": {
									"entryPoint": 5485,
									"id": 1353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeOwner_1493": {
									"entryPoint": 5164,
									"id": 1493,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 3324,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@difficulty_1004": {
									"entryPoint": 2787,
									"id": 1004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAdmins_1502": {
									"entryPoint": 3332,
									"id": 1502,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isAdmin_1035": {
									"entryPoint": 2839,
									"id": 1035,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastStakeTime_1016": {
									"entryPoint": 4412,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastUnstakeTime_1020": {
									"entryPoint": 3486,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mine_1160": {
									"entryPoint": 3527,
									"id": 1160,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1817,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 4439,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAdmin_1447": {
									"entryPoint": 2096,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 4355,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_1025": {
									"entryPoint": 4406,
									"id": 1025,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_1012": {
									"entryPoint": 1961,
									"id": 1012,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDifficulty_1459": {
									"entryPoint": 3802,
									"id": 1459,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_1471": {
									"entryPoint": 4623,
									"id": 1471,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1211": {
									"entryPoint": 4770,
									"id": 1211,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_1008": {
									"entryPoint": 2075,
									"id": 1008,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 4479,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalMined_999": {
									"entryPoint": 3796,
									"id": 999,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1022": {
									"entryPoint": 4433,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 2778,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2793,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5994,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 5294,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstake_1265": {
									"entryPoint": 2868,
									"id": 1265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawRewards_1296": {
									"entryPoint": 5328,
									"id": 1296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 8987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 8972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 10300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 10332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10355,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11060,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 10283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 10266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 10323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 9650,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 10254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c": {
									"entryPoint": 10398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab": {
									"entryPoint": 11113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5": {
									"entryPoint": 9405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9": {
									"entryPoint": 10502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250": {
									"entryPoint": 9301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c": {
									"entryPoint": 10956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21": {
									"entryPoint": 9850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b": {
									"entryPoint": 10852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684": {
									"entryPoint": 9695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7": {
									"entryPoint": 10710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f": {
									"entryPoint": 10150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b": {
									"entryPoint": 10606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23877:8",
										"nodeType": "YulBlock",
										"src": "0:23877:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2142:263:8",
													"nodeType": "YulBlock",
													"src": "2142:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2188:83:8",
																"nodeType": "YulBlock",
																"src": "2188:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2190:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2190:77:8"
																			},
																			"nativeSrc": "2190:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2190:79:8"
																		},
																		"nativeSrc": "2190:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2190:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2163:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2163:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2172:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2172:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2159:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:8"
																		},
																		"nativeSrc": "2159:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2159:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2184:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2184:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2155:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2155:3:8"
																},
																"nativeSrc": "2155:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2155:32:8"
															},
															"nativeSrc": "2152:119:8",
															"nodeType": "YulIf",
															"src": "2152:119:8"
														},
														{
															"nativeSrc": "2281:117:8",
															"nodeType": "YulBlock",
															"src": "2281:117:8",
															"statements": [
																{
																	"nativeSrc": "2296:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2310:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2310:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2300:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2300:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2325:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2325:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2360:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2360:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2371:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2371:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2356:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2356:3:8"
																				},
																				"nativeSrc": "2356:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2356:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2380:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2380:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2335:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2335:20:8"
																		},
																		"nativeSrc": "2335:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2335:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2325:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2325:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2076:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2112:9:8",
														"nodeType": "YulTypedName",
														"src": "2112:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2123:7:8",
														"nodeType": "YulTypedName",
														"src": "2123:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2135:6:8",
														"nodeType": "YulTypedName",
														"src": "2135:6:8",
														"type": ""
													}
												],
												"src": "2076:329:8"
											},
											{
												"body": {
													"nativeSrc": "2456:32:8",
													"nodeType": "YulBlock",
													"src": "2456:32:8",
													"statements": [
														{
															"nativeSrc": "2466:16:8",
															"nodeType": "YulAssignment",
															"src": "2466:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2477:5:8",
																"nodeType": "YulIdentifier",
																"src": "2477:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2466:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2466:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2411:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2438:5:8",
														"nodeType": "YulTypedName",
														"src": "2438:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2448:7:8",
														"nodeType": "YulTypedName",
														"src": "2448:7:8",
														"type": ""
													}
												],
												"src": "2411:77:8"
											},
											{
												"body": {
													"nativeSrc": "2559:53:8",
													"nodeType": "YulBlock",
													"src": "2559:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2576:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2576:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2599:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2599:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2581:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "2581:17:8"
																		},
																		"nativeSrc": "2581:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2581:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2569:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2569:6:8"
																},
																"nativeSrc": "2569:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2569:37:8"
															},
															"nativeSrc": "2569:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "2569:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2494:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:8",
														"nodeType": "YulTypedName",
														"src": "2547:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2554:3:8",
														"nodeType": "YulTypedName",
														"src": "2554:3:8",
														"type": ""
													}
												],
												"src": "2494:118:8"
											},
											{
												"body": {
													"nativeSrc": "2716:124:8",
													"nodeType": "YulBlock",
													"src": "2716:124:8",
													"statements": [
														{
															"nativeSrc": "2726:26:8",
															"nodeType": "YulAssignment",
															"src": "2726:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2738:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2738:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2749:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2749:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2734:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:8"
																},
																"nativeSrc": "2734:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2734:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2726:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2726:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2806:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2806:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2819:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2830:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2830:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2815:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:8"
																		},
																		"nativeSrc": "2815:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2762:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2762:43:8"
																},
																"nativeSrc": "2762:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2762:71:8"
															},
															"nativeSrc": "2762:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "2762:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2618:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2688:9:8",
														"nodeType": "YulTypedName",
														"src": "2688:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2700:6:8",
														"nodeType": "YulTypedName",
														"src": "2700:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2711:4:8",
														"nodeType": "YulTypedName",
														"src": "2711:4:8",
														"type": ""
													}
												],
												"src": "2618:222:8"
											},
											{
												"body": {
													"nativeSrc": "2889:79:8",
													"nodeType": "YulBlock",
													"src": "2889:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2946:16:8",
																"nodeType": "YulBlock",
																"src": "2946:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2955:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2958:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2948:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:8"
																			},
																			"nativeSrc": "2948:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:12:8"
																		},
																		"nativeSrc": "2948:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2912:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2912:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2937:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2937:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2919:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2919:17:8"
																				},
																				"nativeSrc": "2919:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2909:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2909:2:8"
																		},
																		"nativeSrc": "2909:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2902:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:8"
																},
																"nativeSrc": "2902:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2902:43:8"
															},
															"nativeSrc": "2899:63:8",
															"nodeType": "YulIf",
															"src": "2899:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2846:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2882:5:8",
														"nodeType": "YulTypedName",
														"src": "2882:5:8",
														"type": ""
													}
												],
												"src": "2846:122:8"
											},
											{
												"body": {
													"nativeSrc": "3026:87:8",
													"nodeType": "YulBlock",
													"src": "3026:87:8",
													"statements": [
														{
															"nativeSrc": "3036:29:8",
															"nodeType": "YulAssignment",
															"src": "3036:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3058:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3058:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3045:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3045:12:8"
																},
																"nativeSrc": "3045:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3045:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3036:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3036:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3101:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3101:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3074:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3074:26:8"
																},
																"nativeSrc": "3074:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3074:33:8"
															},
															"nativeSrc": "3074:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3074:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2974:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3004:6:8",
														"nodeType": "YulTypedName",
														"src": "3004:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3012:3:8",
														"nodeType": "YulTypedName",
														"src": "3012:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3020:5:8",
														"nodeType": "YulTypedName",
														"src": "3020:5:8",
														"type": ""
													}
												],
												"src": "2974:139:8"
											},
											{
												"body": {
													"nativeSrc": "3202:391:8",
													"nodeType": "YulBlock",
													"src": "3202:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3248:83:8",
																"nodeType": "YulBlock",
																"src": "3248:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3250:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3250:77:8"
																			},
																			"nativeSrc": "3250:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3250:79:8"
																		},
																		"nativeSrc": "3250:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3250:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3223:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3223:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3219:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:8"
																		},
																		"nativeSrc": "3219:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3244:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3215:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:8"
																},
																"nativeSrc": "3215:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3215:32:8"
															},
															"nativeSrc": "3212:119:8",
															"nodeType": "YulIf",
															"src": "3212:119:8"
														},
														{
															"nativeSrc": "3341:117:8",
															"nodeType": "YulBlock",
															"src": "3341:117:8",
															"statements": [
																{
																	"nativeSrc": "3356:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3356:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3370:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3370:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3360:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3360:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3385:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3385:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3420:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3420:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3431:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3431:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3416:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3416:3:8"
																				},
																				"nativeSrc": "3416:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3440:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3440:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3395:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3395:20:8"
																		},
																		"nativeSrc": "3395:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3395:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3385:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3385:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3468:118:8",
															"nodeType": "YulBlock",
															"src": "3468:118:8",
															"statements": [
																{
																	"nativeSrc": "3483:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3483:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3497:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3497:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3487:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3487:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3513:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3513:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3548:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3559:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3544:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:8"
																				},
																				"nativeSrc": "3544:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3568:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3523:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:8"
																		},
																		"nativeSrc": "3523:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3513:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3119:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3164:9:8",
														"nodeType": "YulTypedName",
														"src": "3164:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3175:7:8",
														"nodeType": "YulTypedName",
														"src": "3175:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3187:6:8",
														"nodeType": "YulTypedName",
														"src": "3187:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3195:6:8",
														"nodeType": "YulTypedName",
														"src": "3195:6:8",
														"type": ""
													}
												],
												"src": "3119:474:8"
											},
											{
												"body": {
													"nativeSrc": "3641:48:8",
													"nodeType": "YulBlock",
													"src": "3641:48:8",
													"statements": [
														{
															"nativeSrc": "3651:32:8",
															"nodeType": "YulAssignment",
															"src": "3651:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3676:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3676:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3669:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3669:6:8"
																		},
																		"nativeSrc": "3669:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3669:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3662:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:8"
																},
																"nativeSrc": "3662:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3662:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3651:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3651:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3599:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3623:5:8",
														"nodeType": "YulTypedName",
														"src": "3623:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3633:7:8",
														"nodeType": "YulTypedName",
														"src": "3633:7:8",
														"type": ""
													}
												],
												"src": "3599:90:8"
											},
											{
												"body": {
													"nativeSrc": "3754:50:8",
													"nodeType": "YulBlock",
													"src": "3754:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3771:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3771:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3791:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3791:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3776:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3776:14:8"
																		},
																		"nativeSrc": "3776:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3764:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:8"
																},
																"nativeSrc": "3764:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3764:34:8"
															},
															"nativeSrc": "3764:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3764:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3695:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3742:5:8",
														"nodeType": "YulTypedName",
														"src": "3742:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3749:3:8",
														"nodeType": "YulTypedName",
														"src": "3749:3:8",
														"type": ""
													}
												],
												"src": "3695:109:8"
											},
											{
												"body": {
													"nativeSrc": "3902:118:8",
													"nodeType": "YulBlock",
													"src": "3902:118:8",
													"statements": [
														{
															"nativeSrc": "3912:26:8",
															"nodeType": "YulAssignment",
															"src": "3912:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3924:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3924:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3935:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3935:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:8"
																},
																"nativeSrc": "3920:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3920:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3912:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:8"
																		},
																		"nativeSrc": "3995:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3948:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3948:37:8"
																},
																"nativeSrc": "3948:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3948:65:8"
															},
															"nativeSrc": "3948:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3948:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3810:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3874:9:8",
														"nodeType": "YulTypedName",
														"src": "3874:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3886:6:8",
														"nodeType": "YulTypedName",
														"src": "3886:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3897:4:8",
														"nodeType": "YulTypedName",
														"src": "3897:4:8",
														"type": ""
													}
												],
												"src": "3810:210:8"
											},
											{
												"body": {
													"nativeSrc": "4092:263:8",
													"nodeType": "YulBlock",
													"src": "4092:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4138:83:8",
																"nodeType": "YulBlock",
																"src": "4138:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4140:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4140:77:8"
																			},
																			"nativeSrc": "4140:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4140:79:8"
																		},
																		"nativeSrc": "4140:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4140:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4113:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4113:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4122:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4122:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4109:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4109:3:8"
																		},
																		"nativeSrc": "4109:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4109:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4134:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4134:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4105:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4105:3:8"
																},
																"nativeSrc": "4105:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4105:32:8"
															},
															"nativeSrc": "4102:119:8",
															"nodeType": "YulIf",
															"src": "4102:119:8"
														},
														{
															"nativeSrc": "4231:117:8",
															"nodeType": "YulBlock",
															"src": "4231:117:8",
															"statements": [
																{
																	"nativeSrc": "4246:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4246:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4260:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4260:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4250:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4250:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4275:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4275:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4310:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4310:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4321:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4321:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4306:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4306:3:8"
																				},
																				"nativeSrc": "4306:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4306:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4330:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4330:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4285:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4285:20:8"
																		},
																		"nativeSrc": "4285:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4285:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4275:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4275:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4026:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4062:9:8",
														"nodeType": "YulTypedName",
														"src": "4062:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4073:7:8",
														"nodeType": "YulTypedName",
														"src": "4073:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4085:6:8",
														"nodeType": "YulTypedName",
														"src": "4085:6:8",
														"type": ""
													}
												],
												"src": "4026:329:8"
											},
											{
												"body": {
													"nativeSrc": "4426:53:8",
													"nodeType": "YulBlock",
													"src": "4426:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4443:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4443:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4466:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4466:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4448:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4448:17:8"
																		},
																		"nativeSrc": "4448:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4448:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4436:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:8"
																},
																"nativeSrc": "4436:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4436:37:8"
															},
															"nativeSrc": "4436:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "4436:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4361:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4414:5:8",
														"nodeType": "YulTypedName",
														"src": "4414:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4421:3:8",
														"nodeType": "YulTypedName",
														"src": "4421:3:8",
														"type": ""
													}
												],
												"src": "4361:118:8"
											},
											{
												"body": {
													"nativeSrc": "4583:124:8",
													"nodeType": "YulBlock",
													"src": "4583:124:8",
													"statements": [
														{
															"nativeSrc": "4593:26:8",
															"nodeType": "YulAssignment",
															"src": "4593:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4605:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4605:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4616:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4616:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4601:3:8"
																},
																"nativeSrc": "4601:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4601:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4593:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4593:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4673:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4673:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4686:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4686:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4697:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4697:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4682:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:8"
																		},
																		"nativeSrc": "4682:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4629:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4629:43:8"
																},
																"nativeSrc": "4629:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4629:71:8"
															},
															"nativeSrc": "4629:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4629:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4485:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4555:9:8",
														"nodeType": "YulTypedName",
														"src": "4555:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4567:6:8",
														"nodeType": "YulTypedName",
														"src": "4567:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4578:4:8",
														"nodeType": "YulTypedName",
														"src": "4578:4:8",
														"type": ""
													}
												],
												"src": "4485:222:8"
											},
											{
												"body": {
													"nativeSrc": "4813:519:8",
													"nodeType": "YulBlock",
													"src": "4813:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4859:83:8",
																"nodeType": "YulBlock",
																"src": "4859:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4861:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4861:77:8"
																			},
																			"nativeSrc": "4861:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4861:79:8"
																		},
																		"nativeSrc": "4861:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4861:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4834:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4834:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4843:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4843:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4830:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4830:3:8"
																		},
																		"nativeSrc": "4830:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4830:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4855:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4855:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4826:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4826:3:8"
																},
																"nativeSrc": "4826:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4826:32:8"
															},
															"nativeSrc": "4823:119:8",
															"nodeType": "YulIf",
															"src": "4823:119:8"
														},
														{
															"nativeSrc": "4952:117:8",
															"nodeType": "YulBlock",
															"src": "4952:117:8",
															"statements": [
																{
																	"nativeSrc": "4967:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4967:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4981:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4971:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4971:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4996:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4996:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5031:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5031:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5042:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5042:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5027:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:8"
																				},
																				"nativeSrc": "5027:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5027:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5051:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5051:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5006:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5006:20:8"
																		},
																		"nativeSrc": "5006:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5006:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4996:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4996:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5079:118:8",
															"nodeType": "YulBlock",
															"src": "5079:118:8",
															"statements": [
																{
																	"nativeSrc": "5094:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5094:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5108:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5108:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5098:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5098:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5124:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5124:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5159:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5159:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5170:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5170:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5155:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5155:3:8"
																				},
																				"nativeSrc": "5155:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5155:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5179:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5179:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5134:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5134:20:8"
																		},
																		"nativeSrc": "5134:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5134:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5124:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5124:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5207:118:8",
															"nodeType": "YulBlock",
															"src": "5207:118:8",
															"statements": [
																{
																	"nativeSrc": "5222:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5222:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5236:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5236:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5226:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5226:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5252:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5252:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5287:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5287:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5298:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5298:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5283:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5283:3:8"
																				},
																				"nativeSrc": "5283:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5283:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5307:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5307:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5262:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5262:20:8"
																		},
																		"nativeSrc": "5262:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5262:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5252:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5252:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4713:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4767:9:8",
														"nodeType": "YulTypedName",
														"src": "4767:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4778:7:8",
														"nodeType": "YulTypedName",
														"src": "4778:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4790:6:8",
														"nodeType": "YulTypedName",
														"src": "4790:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4798:6:8",
														"nodeType": "YulTypedName",
														"src": "4798:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4806:6:8",
														"nodeType": "YulTypedName",
														"src": "4806:6:8",
														"type": ""
													}
												],
												"src": "4713:619:8"
											},
											{
												"body": {
													"nativeSrc": "5381:43:8",
													"nodeType": "YulBlock",
													"src": "5381:43:8",
													"statements": [
														{
															"nativeSrc": "5391:27:8",
															"nodeType": "YulAssignment",
															"src": "5391:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5406:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5406:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5413:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5413:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5402:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5402:3:8"
																},
																"nativeSrc": "5402:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5402:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5391:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5391:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5338:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5363:5:8",
														"nodeType": "YulTypedName",
														"src": "5363:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5373:7:8",
														"nodeType": "YulTypedName",
														"src": "5373:7:8",
														"type": ""
													}
												],
												"src": "5338:86:8"
											},
											{
												"body": {
													"nativeSrc": "5491:51:8",
													"nodeType": "YulBlock",
													"src": "5491:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5508:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5529:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5529:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5513:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:15:8"
																		},
																		"nativeSrc": "5513:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5513:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5501:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:8"
																},
																"nativeSrc": "5501:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5501:35:8"
															},
															"nativeSrc": "5501:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "5501:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5430:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5479:5:8",
														"nodeType": "YulTypedName",
														"src": "5479:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5486:3:8",
														"nodeType": "YulTypedName",
														"src": "5486:3:8",
														"type": ""
													}
												],
												"src": "5430:112:8"
											},
											{
												"body": {
													"nativeSrc": "5642:120:8",
													"nodeType": "YulBlock",
													"src": "5642:120:8",
													"statements": [
														{
															"nativeSrc": "5652:26:8",
															"nodeType": "YulAssignment",
															"src": "5652:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5664:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5664:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5675:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5660:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:8"
																},
																"nativeSrc": "5660:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5660:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5652:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5652:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:8"
																		},
																		"nativeSrc": "5737:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5688:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5688:39:8"
																},
																"nativeSrc": "5688:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5688:67:8"
															},
															"nativeSrc": "5688:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5688:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5548:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5614:9:8",
														"nodeType": "YulTypedName",
														"src": "5614:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5626:6:8",
														"nodeType": "YulTypedName",
														"src": "5626:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5637:4:8",
														"nodeType": "YulTypedName",
														"src": "5637:4:8",
														"type": ""
													}
												],
												"src": "5548:214:8"
											},
											{
												"body": {
													"nativeSrc": "5842:40:8",
													"nodeType": "YulBlock",
													"src": "5842:40:8",
													"statements": [
														{
															"nativeSrc": "5853:22:8",
															"nodeType": "YulAssignment",
															"src": "5853:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5869:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5869:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5863:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5863:5:8"
																},
																"nativeSrc": "5863:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5863:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5853:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5853:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5768:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5825:5:8",
														"nodeType": "YulTypedName",
														"src": "5825:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5835:6:8",
														"nodeType": "YulTypedName",
														"src": "5835:6:8",
														"type": ""
													}
												],
												"src": "5768:114:8"
											},
											{
												"body": {
													"nativeSrc": "5999:73:8",
													"nodeType": "YulBlock",
													"src": "5999:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6016:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6016:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6021:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6021:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6009:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6009:6:8"
																},
																"nativeSrc": "6009:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6009:19:8"
															},
															"nativeSrc": "6009:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "6009:19:8"
														},
														{
															"nativeSrc": "6037:29:8",
															"nodeType": "YulAssignment",
															"src": "6037:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6056:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6056:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6061:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6061:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6052:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6052:3:8"
																},
																"nativeSrc": "6052:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6052:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6037:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "6037:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5888:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5971:3:8",
														"nodeType": "YulTypedName",
														"src": "5971:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5976:6:8",
														"nodeType": "YulTypedName",
														"src": "5976:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5987:11:8",
														"nodeType": "YulTypedName",
														"src": "5987:11:8",
														"type": ""
													}
												],
												"src": "5888:184:8"
											},
											{
												"body": {
													"nativeSrc": "6150:60:8",
													"nodeType": "YulBlock",
													"src": "6150:60:8",
													"statements": [
														{
															"nativeSrc": "6160:11:8",
															"nodeType": "YulAssignment",
															"src": "6160:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "6168:3:8",
																"nodeType": "YulIdentifier",
																"src": "6168:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6160:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6160:4:8"
																}
															]
														},
														{
															"nativeSrc": "6181:22:8",
															"nodeType": "YulAssignment",
															"src": "6181:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6193:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6193:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6198:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6198:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6189:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6189:3:8"
																},
																"nativeSrc": "6189:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6189:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6181:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6181:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6078:132:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6137:3:8",
														"nodeType": "YulTypedName",
														"src": "6137:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6145:4:8",
														"nodeType": "YulTypedName",
														"src": "6145:4:8",
														"type": ""
													}
												],
												"src": "6078:132:8"
											},
											{
												"body": {
													"nativeSrc": "6271:53:8",
													"nodeType": "YulBlock",
													"src": "6271:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6288:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6288:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6311:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6311:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6293:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6293:17:8"
																		},
																		"nativeSrc": "6293:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6293:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6281:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6281:6:8"
																},
																"nativeSrc": "6281:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6281:37:8"
															},
															"nativeSrc": "6281:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6281:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "6216:108:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6259:5:8",
														"nodeType": "YulTypedName",
														"src": "6259:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6266:3:8",
														"nodeType": "YulTypedName",
														"src": "6266:3:8",
														"type": ""
													}
												],
												"src": "6216:108:8"
											},
											{
												"body": {
													"nativeSrc": "6410:99:8",
													"nodeType": "YulBlock",
													"src": "6410:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6454:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6454:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6462:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6462:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "6420:33:8",
																	"nodeType": "YulIdentifier",
																	"src": "6420:33:8"
																},
																"nativeSrc": "6420:46:8",
																"nodeType": "YulFunctionCall",
																"src": "6420:46:8"
															},
															"nativeSrc": "6420:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "6420:46:8"
														},
														{
															"nativeSrc": "6475:28:8",
															"nodeType": "YulAssignment",
															"src": "6475:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6493:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6493:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6498:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6498:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6489:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6489:3:8"
																},
																"nativeSrc": "6489:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6489:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6475:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "6475:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "6330:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6383:6:8",
														"nodeType": "YulTypedName",
														"src": "6383:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6391:3:8",
														"nodeType": "YulTypedName",
														"src": "6391:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6399:10:8",
														"nodeType": "YulTypedName",
														"src": "6399:10:8",
														"type": ""
													}
												],
												"src": "6330:179:8"
											},
											{
												"body": {
													"nativeSrc": "6590:38:8",
													"nodeType": "YulBlock",
													"src": "6590:38:8",
													"statements": [
														{
															"nativeSrc": "6600:22:8",
															"nodeType": "YulAssignment",
															"src": "6600:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6612:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6612:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6617:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6617:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6608:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6608:3:8"
																},
																"nativeSrc": "6608:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6608:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6600:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6600:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6515:113:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6577:3:8",
														"nodeType": "YulTypedName",
														"src": "6577:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6585:4:8",
														"nodeType": "YulTypedName",
														"src": "6585:4:8",
														"type": ""
													}
												],
												"src": "6515:113:8"
											},
											{
												"body": {
													"nativeSrc": "6788:608:8",
													"nodeType": "YulBlock",
													"src": "6788:608:8",
													"statements": [
														{
															"nativeSrc": "6798:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6798:68:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6860:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6860:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6812:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "6812:47:8"
																},
																"nativeSrc": "6812:54:8",
																"nodeType": "YulFunctionCall",
																"src": "6812:54:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6802:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6802:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6875:93:8",
															"nodeType": "YulAssignment",
															"src": "6875:93:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6956:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6956:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6961:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6961:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6882:73:8",
																	"nodeType": "YulIdentifier",
																	"src": "6882:73:8"
																},
																"nativeSrc": "6882:86:8",
																"nodeType": "YulFunctionCall",
																"src": "6882:86:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6875:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6875:3:8"
																}
															]
														},
														{
															"nativeSrc": "6977:71:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6977:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7042:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7042:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6992:49:8",
																	"nodeType": "YulIdentifier",
																	"src": "6992:49:8"
																},
																"nativeSrc": "6992:56:8",
																"nodeType": "YulFunctionCall",
																"src": "6992:56:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "6981:7:8",
																	"nodeType": "YulTypedName",
																	"src": "6981:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7057:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7057:21:8",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7071:7:8",
																"nodeType": "YulIdentifier",
																"src": "7071:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7061:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7061:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7147:224:8",
																"nodeType": "YulBlock",
																"src": "7147:224:8",
																"statements": [
																	{
																		"nativeSrc": "7161:34:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7161:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7188:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7188:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7182:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7182:5:8"
																			},
																			"nativeSrc": "7182:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7182:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7165:13:8",
																				"nodeType": "YulTypedName",
																				"src": "7165:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7208:70:8",
																		"nodeType": "YulAssignment",
																		"src": "7208:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7259:13:8",
																					"nodeType": "YulIdentifier",
																					"src": "7259:13:8"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7274:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7274:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "7215:43:8",
																				"nodeType": "YulIdentifier",
																				"src": "7215:43:8"
																			},
																			"nativeSrc": "7215:63:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7215:63:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7208:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7208:3:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7291:70:8",
																		"nodeType": "YulAssignment",
																		"src": "7291:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7354:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7354:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "7301:52:8",
																				"nodeType": "YulIdentifier",
																				"src": "7301:52:8"
																			},
																			"nativeSrc": "7301:60:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7301:60:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7291:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7291:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7109:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7109:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7112:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7112:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7106:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7106:2:8"
																},
																"nativeSrc": "7106:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7106:13:8"
															},
															"nativeSrc": "7087:284:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7120:18:8",
																"nodeType": "YulBlock",
																"src": "7120:18:8",
																"statements": [
																	{
																		"nativeSrc": "7122:14:8",
																		"nodeType": "YulAssignment",
																		"src": "7122:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7131:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "7131:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7134:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7134:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7127:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7127:3:8"
																			},
																			"nativeSrc": "7127:9:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7127:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7122:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "7122:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7091:14:8",
																"nodeType": "YulBlock",
																"src": "7091:14:8",
																"statements": [
																	{
																		"nativeSrc": "7093:10:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7093:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7102:1:8",
																			"nodeType": "YulLiteral",
																			"src": "7102:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7097:1:8",
																				"nodeType": "YulTypedName",
																				"src": "7097:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7087:284:8"
														},
														{
															"nativeSrc": "7380:10:8",
															"nodeType": "YulAssignment",
															"src": "7380:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "7387:3:8",
																"nodeType": "YulIdentifier",
																"src": "7387:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7380:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7380:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6664:732:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6767:5:8",
														"nodeType": "YulTypedName",
														"src": "6767:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6774:3:8",
														"nodeType": "YulTypedName",
														"src": "6774:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6783:3:8",
														"nodeType": "YulTypedName",
														"src": "6783:3:8",
														"type": ""
													}
												],
												"src": "6664:732:8"
											},
											{
												"body": {
													"nativeSrc": "7550:225:8",
													"nodeType": "YulBlock",
													"src": "7550:225:8",
													"statements": [
														{
															"nativeSrc": "7560:26:8",
															"nodeType": "YulAssignment",
															"src": "7560:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7572:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7572:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7583:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7583:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7568:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7568:3:8"
																},
																"nativeSrc": "7568:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7568:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7560:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7560:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7607:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7607:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7603:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7603:3:8"
																		},
																		"nativeSrc": "7603:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7603:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7626:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7626:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7632:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7632:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7622:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:8"
																		},
																		"nativeSrc": "7622:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7596:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7596:6:8"
																},
																"nativeSrc": "7596:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7596:47:8"
															},
															"nativeSrc": "7596:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7596:47:8"
														},
														{
															"nativeSrc": "7652:116:8",
															"nodeType": "YulAssignment",
															"src": "7652:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7754:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7754:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7763:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7763:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7660:93:8",
																	"nodeType": "YulIdentifier",
																	"src": "7660:93:8"
																},
																"nativeSrc": "7660:108:8",
																"nodeType": "YulFunctionCall",
																"src": "7660:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7652:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7652:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7402:373:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7522:9:8",
														"nodeType": "YulTypedName",
														"src": "7522:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7534:6:8",
														"nodeType": "YulTypedName",
														"src": "7534:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7545:4:8",
														"nodeType": "YulTypedName",
														"src": "7545:4:8",
														"type": ""
													}
												],
												"src": "7402:373:8"
											},
											{
												"body": {
													"nativeSrc": "7864:391:8",
													"nodeType": "YulBlock",
													"src": "7864:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7910:83:8",
																"nodeType": "YulBlock",
																"src": "7910:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7912:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7912:77:8"
																			},
																			"nativeSrc": "7912:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7912:79:8"
																		},
																		"nativeSrc": "7912:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7912:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7885:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7885:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7894:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7894:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7881:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7881:3:8"
																		},
																		"nativeSrc": "7881:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7881:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7906:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7906:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7877:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7877:3:8"
																},
																"nativeSrc": "7877:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7877:32:8"
															},
															"nativeSrc": "7874:119:8",
															"nodeType": "YulIf",
															"src": "7874:119:8"
														},
														{
															"nativeSrc": "8003:117:8",
															"nodeType": "YulBlock",
															"src": "8003:117:8",
															"statements": [
																{
																	"nativeSrc": "8018:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8018:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8032:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8032:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8022:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8022:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8047:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8047:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8082:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8082:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8093:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8093:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8078:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8078:3:8"
																				},
																				"nativeSrc": "8078:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8078:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8102:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8102:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8057:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8057:20:8"
																		},
																		"nativeSrc": "8057:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8057:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8047:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8047:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8130:118:8",
															"nodeType": "YulBlock",
															"src": "8130:118:8",
															"statements": [
																{
																	"nativeSrc": "8145:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8145:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8159:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8159:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8149:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8149:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8175:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8175:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8210:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8210:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8221:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8221:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8206:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8206:3:8"
																				},
																				"nativeSrc": "8206:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8206:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8230:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8230:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8185:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8185:20:8"
																		},
																		"nativeSrc": "8185:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8185:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8175:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8175:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7781:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7826:9:8",
														"nodeType": "YulTypedName",
														"src": "7826:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7837:7:8",
														"nodeType": "YulTypedName",
														"src": "7837:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7849:6:8",
														"nodeType": "YulTypedName",
														"src": "7849:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7857:6:8",
														"nodeType": "YulTypedName",
														"src": "7857:6:8",
														"type": ""
													}
												],
												"src": "7781:474:8"
											},
											{
												"body": {
													"nativeSrc": "8289:152:8",
													"nodeType": "YulBlock",
													"src": "8289:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8306:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8306:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8309:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8309:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8299:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8299:6:8"
																},
																"nativeSrc": "8299:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8299:88:8"
															},
															"nativeSrc": "8299:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8299:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8403:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8403:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8406:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8406:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8396:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8396:6:8"
																},
																"nativeSrc": "8396:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8396:15:8"
															},
															"nativeSrc": "8396:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8396:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8427:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8427:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8430:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8430:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8420:6:8"
																},
																"nativeSrc": "8420:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8420:15:8"
															},
															"nativeSrc": "8420:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8420:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8261:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8261:180:8"
											},
											{
												"body": {
													"nativeSrc": "8498:269:8",
													"nodeType": "YulBlock",
													"src": "8498:269:8",
													"statements": [
														{
															"nativeSrc": "8508:22:8",
															"nodeType": "YulAssignment",
															"src": "8508:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8522:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8522:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8528:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8528:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8518:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8518:3:8"
																},
																"nativeSrc": "8518:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8518:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8508:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:8"
																}
															]
														},
														{
															"nativeSrc": "8539:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8539:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8569:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8569:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8575:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8575:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8565:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8565:3:8"
																},
																"nativeSrc": "8565:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8565:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8543:18:8",
																	"nodeType": "YulTypedName",
																	"src": "8543:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8616:51:8",
																"nodeType": "YulBlock",
																"src": "8616:51:8",
																"statements": [
																	{
																		"nativeSrc": "8630:27:8",
																		"nodeType": "YulAssignment",
																		"src": "8630:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8644:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8644:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8652:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8652:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8640:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8640:3:8"
																			},
																			"nativeSrc": "8640:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8640:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8630:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8630:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8596:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "8596:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8589:6:8"
																},
																"nativeSrc": "8589:26:8",
																"nodeType": "YulFunctionCall",
																"src": "8589:26:8"
															},
															"nativeSrc": "8586:81:8",
															"nodeType": "YulIf",
															"src": "8586:81:8"
														},
														{
															"body": {
																"nativeSrc": "8719:42:8",
																"nodeType": "YulBlock",
																"src": "8719:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8733:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8733:16:8"
																			},
																			"nativeSrc": "8733:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8733:18:8"
																		},
																		"nativeSrc": "8733:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8733:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8683:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "8683:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8706:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8706:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8714:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8714:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8703:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8703:2:8"
																		},
																		"nativeSrc": "8703:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8703:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8680:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8680:2:8"
																},
																"nativeSrc": "8680:38:8",
																"nodeType": "YulFunctionCall",
																"src": "8680:38:8"
															},
															"nativeSrc": "8677:84:8",
															"nodeType": "YulIf",
															"src": "8677:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8447:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8482:4:8",
														"nodeType": "YulTypedName",
														"src": "8482:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8491:6:8",
														"nodeType": "YulTypedName",
														"src": "8491:6:8",
														"type": ""
													}
												],
												"src": "8447:320:8"
											},
											{
												"body": {
													"nativeSrc": "8879:56:8",
													"nodeType": "YulBlock",
													"src": "8879:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8901:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8901:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8909:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8909:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8897:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8897:3:8"
																		},
																		"nativeSrc": "8897:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8897:14:8"
																	},
																	{
																		"hexValue": "4e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "8913:14:8",
																		"nodeType": "YulLiteral",
																		"src": "8913:14:8",
																		"type": "",
																		"value": "Not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8890:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8890:6:8"
																},
																"nativeSrc": "8890:38:8",
																"nodeType": "YulFunctionCall",
																"src": "8890:38:8"
															},
															"nativeSrc": "8890:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "8890:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
												"nativeSrc": "8773:162:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8871:6:8",
														"nodeType": "YulTypedName",
														"src": "8871:6:8",
														"type": ""
													}
												],
												"src": "8773:162:8"
											},
											{
												"body": {
													"nativeSrc": "9087:220:8",
													"nodeType": "YulBlock",
													"src": "9087:220:8",
													"statements": [
														{
															"nativeSrc": "9097:74:8",
															"nodeType": "YulAssignment",
															"src": "9097:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9163:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9168:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9168:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9104:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9104:58:8"
																},
																"nativeSrc": "9104:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9104:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9097:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9097:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9269:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9269:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																	"nativeSrc": "9180:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9180:88:8"
																},
																"nativeSrc": "9180:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9180:93:8"
															},
															"nativeSrc": "9180:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9180:93:8"
														},
														{
															"nativeSrc": "9282:19:8",
															"nodeType": "YulAssignment",
															"src": "9282:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9293:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9293:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9298:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9298:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9289:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9289:3:8"
																},
																"nativeSrc": "9289:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9289:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9282:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9282:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8941:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9075:3:8",
														"nodeType": "YulTypedName",
														"src": "9075:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9083:3:8",
														"nodeType": "YulTypedName",
														"src": "9083:3:8",
														"type": ""
													}
												],
												"src": "8941:366:8"
											},
											{
												"body": {
													"nativeSrc": "9484:248:8",
													"nodeType": "YulBlock",
													"src": "9484:248:8",
													"statements": [
														{
															"nativeSrc": "9494:26:8",
															"nodeType": "YulAssignment",
															"src": "9494:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9506:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9506:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9517:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9517:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:8"
																},
																"nativeSrc": "9502:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9502:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9494:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9494:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9541:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9541:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9552:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9552:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9537:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9537:3:8"
																		},
																		"nativeSrc": "9537:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9537:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9560:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9560:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9566:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9566:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9556:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9556:3:8"
																		},
																		"nativeSrc": "9556:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9556:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9530:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9530:6:8"
																},
																"nativeSrc": "9530:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9530:47:8"
															},
															"nativeSrc": "9530:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9530:47:8"
														},
														{
															"nativeSrc": "9586:139:8",
															"nodeType": "YulAssignment",
															"src": "9586:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9720:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9720:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9594:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9594:124:8"
																},
																"nativeSrc": "9594:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9594:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9586:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9586:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9313:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9464:9:8",
														"nodeType": "YulTypedName",
														"src": "9464:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9479:4:8",
														"nodeType": "YulTypedName",
														"src": "9479:4:8",
														"type": ""
													}
												],
												"src": "9313:419:8"
											},
											{
												"body": {
													"nativeSrc": "9844:72:8",
													"nodeType": "YulBlock",
													"src": "9844:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9866:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9866:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9874:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9874:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9862:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9862:3:8"
																		},
																		"nativeSrc": "9862:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9862:14:8"
																	},
																	{
																		"hexValue": "43616e6e6f742072656d6f766520746865206c6173742061646d696e",
																		"kind": "string",
																		"nativeSrc": "9878:30:8",
																		"nodeType": "YulLiteral",
																		"src": "9878:30:8",
																		"type": "",
																		"value": "Cannot remove the last admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9855:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9855:6:8"
																},
																"nativeSrc": "9855:54:8",
																"nodeType": "YulFunctionCall",
																"src": "9855:54:8"
															},
															"nativeSrc": "9855:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "9855:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5",
												"nativeSrc": "9738:178:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9836:6:8",
														"nodeType": "YulTypedName",
														"src": "9836:6:8",
														"type": ""
													}
												],
												"src": "9738:178:8"
											},
											{
												"body": {
													"nativeSrc": "10068:220:8",
													"nodeType": "YulBlock",
													"src": "10068:220:8",
													"statements": [
														{
															"nativeSrc": "10078:74:8",
															"nodeType": "YulAssignment",
															"src": "10078:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10144:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10144:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10149:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10149:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10085:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10085:58:8"
																},
																"nativeSrc": "10085:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10085:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10078:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10078:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10250:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10250:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5",
																	"nativeSrc": "10161:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10161:88:8"
																},
																"nativeSrc": "10161:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10161:93:8"
															},
															"nativeSrc": "10161:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10161:93:8"
														},
														{
															"nativeSrc": "10263:19:8",
															"nodeType": "YulAssignment",
															"src": "10263:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10274:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10274:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10279:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10279:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10270:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10270:3:8"
																},
																"nativeSrc": "10270:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10270:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10263:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10263:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9922:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10056:3:8",
														"nodeType": "YulTypedName",
														"src": "10056:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10064:3:8",
														"nodeType": "YulTypedName",
														"src": "10064:3:8",
														"type": ""
													}
												],
												"src": "9922:366:8"
											},
											{
												"body": {
													"nativeSrc": "10465:248:8",
													"nodeType": "YulBlock",
													"src": "10465:248:8",
													"statements": [
														{
															"nativeSrc": "10475:26:8",
															"nodeType": "YulAssignment",
															"src": "10475:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10487:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10487:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10498:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10498:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10483:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10483:3:8"
																},
																"nativeSrc": "10483:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10483:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10475:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10475:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10522:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10522:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10533:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10533:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10518:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10518:3:8"
																		},
																		"nativeSrc": "10518:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10518:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10541:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10541:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10547:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10547:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10537:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10537:3:8"
																		},
																		"nativeSrc": "10537:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10537:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10511:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10511:6:8"
																},
																"nativeSrc": "10511:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10511:47:8"
															},
															"nativeSrc": "10511:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10511:47:8"
														},
														{
															"nativeSrc": "10567:139:8",
															"nodeType": "YulAssignment",
															"src": "10567:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10701:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10701:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10575:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10575:124:8"
																},
																"nativeSrc": "10575:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10575:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10567:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10567:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10294:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10445:9:8",
														"nodeType": "YulTypedName",
														"src": "10445:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10460:4:8",
														"nodeType": "YulTypedName",
														"src": "10460:4:8",
														"type": ""
													}
												],
												"src": "10294:419:8"
											},
											{
												"body": {
													"nativeSrc": "10747:152:8",
													"nodeType": "YulBlock",
													"src": "10747:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10764:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10764:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10767:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10767:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10757:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10757:6:8"
																},
																"nativeSrc": "10757:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10757:88:8"
															},
															"nativeSrc": "10757:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10757:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10861:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10861:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10864:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10864:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10854:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10854:6:8"
																},
																"nativeSrc": "10854:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10854:15:8"
															},
															"nativeSrc": "10854:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10854:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10885:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10885:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10888:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10888:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10878:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10878:6:8"
																},
																"nativeSrc": "10878:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10878:15:8"
															},
															"nativeSrc": "10878:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10878:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10719:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10719:180:8"
											},
											{
												"body": {
													"nativeSrc": "10933:152:8",
													"nodeType": "YulBlock",
													"src": "10933:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10950:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10950:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10953:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10953:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10943:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10943:6:8"
																},
																"nativeSrc": "10943:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10943:88:8"
															},
															"nativeSrc": "10943:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10943:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11047:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11047:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11050:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11050:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11040:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11040:6:8"
																},
																"nativeSrc": "11040:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11040:15:8"
															},
															"nativeSrc": "11040:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11040:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11071:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11071:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11074:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11074:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11064:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11064:6:8"
																},
																"nativeSrc": "11064:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11064:15:8"
															},
															"nativeSrc": "11064:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11064:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10905:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10905:180:8"
											},
											{
												"body": {
													"nativeSrc": "11136:149:8",
													"nodeType": "YulBlock",
													"src": "11136:149:8",
													"statements": [
														{
															"nativeSrc": "11146:25:8",
															"nodeType": "YulAssignment",
															"src": "11146:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11169:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11169:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11151:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11151:17:8"
																},
																"nativeSrc": "11151:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11151:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11146:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11146:1:8"
																}
															]
														},
														{
															"nativeSrc": "11180:25:8",
															"nodeType": "YulAssignment",
															"src": "11180:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11203:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11203:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11185:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11185:17:8"
																},
																"nativeSrc": "11185:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11185:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11180:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11180:1:8"
																}
															]
														},
														{
															"nativeSrc": "11214:17:8",
															"nodeType": "YulAssignment",
															"src": "11214:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11226:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11226:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11229:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11229:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11222:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11222:3:8"
																},
																"nativeSrc": "11222:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11222:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11214:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11214:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11256:22:8",
																"nodeType": "YulBlock",
																"src": "11256:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11258:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11258:16:8"
																			},
																			"nativeSrc": "11258:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11258:18:8"
																		},
																		"nativeSrc": "11258:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11258:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11247:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11247:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11253:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11253:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11244:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11244:2:8"
																},
																"nativeSrc": "11244:11:8",
																"nodeType": "YulFunctionCall",
																"src": "11244:11:8"
															},
															"nativeSrc": "11241:37:8",
															"nodeType": "YulIf",
															"src": "11241:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11091:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11122:1:8",
														"nodeType": "YulTypedName",
														"src": "11122:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11125:1:8",
														"nodeType": "YulTypedName",
														"src": "11125:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11131:4:8",
														"nodeType": "YulTypedName",
														"src": "11131:4:8",
														"type": ""
													}
												],
												"src": "11091:194:8"
											},
											{
												"body": {
													"nativeSrc": "11319:152:8",
													"nodeType": "YulBlock",
													"src": "11319:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11336:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11336:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11339:77:8",
																		"nodeType": "YulLiteral",
																		"src": "11339:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11329:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11329:6:8"
																},
																"nativeSrc": "11329:88:8",
																"nodeType": "YulFunctionCall",
																"src": "11329:88:8"
															},
															"nativeSrc": "11329:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "11329:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11433:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11433:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11436:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11436:4:8",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11426:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11426:6:8"
																},
																"nativeSrc": "11426:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11426:15:8"
															},
															"nativeSrc": "11426:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11426:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11457:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11457:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11460:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11460:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11450:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11450:6:8"
																},
																"nativeSrc": "11450:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11450:15:8"
															},
															"nativeSrc": "11450:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11450:15:8"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "11291:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "11291:180:8"
											},
											{
												"body": {
													"nativeSrc": "11583:70:8",
													"nodeType": "YulBlock",
													"src": "11583:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11605:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11605:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11613:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11613:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11601:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11601:3:8"
																		},
																		"nativeSrc": "11601:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11601:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b652062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11617:28:8",
																		"nodeType": "YulLiteral",
																		"src": "11617:28:8",
																		"type": "",
																		"value": "Insufficient stake balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11594:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11594:6:8"
																},
																"nativeSrc": "11594:52:8",
																"nodeType": "YulFunctionCall",
																"src": "11594:52:8"
															},
															"nativeSrc": "11594:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "11594:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684",
												"nativeSrc": "11477:176:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11575:6:8",
														"nodeType": "YulTypedName",
														"src": "11575:6:8",
														"type": ""
													}
												],
												"src": "11477:176:8"
											},
											{
												"body": {
													"nativeSrc": "11805:220:8",
													"nodeType": "YulBlock",
													"src": "11805:220:8",
													"statements": [
														{
															"nativeSrc": "11815:74:8",
															"nodeType": "YulAssignment",
															"src": "11815:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11881:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11881:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11886:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11886:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11822:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11822:58:8"
																},
																"nativeSrc": "11822:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11822:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11815:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11815:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11987:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11987:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684",
																	"nativeSrc": "11898:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11898:88:8"
																},
																"nativeSrc": "11898:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11898:93:8"
															},
															"nativeSrc": "11898:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11898:93:8"
														},
														{
															"nativeSrc": "12000:19:8",
															"nodeType": "YulAssignment",
															"src": "12000:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12011:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12011:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12016:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12016:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12007:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12007:3:8"
																},
																"nativeSrc": "12007:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12007:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12000:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12000:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11659:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11793:3:8",
														"nodeType": "YulTypedName",
														"src": "11793:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11801:3:8",
														"nodeType": "YulTypedName",
														"src": "11801:3:8",
														"type": ""
													}
												],
												"src": "11659:366:8"
											},
											{
												"body": {
													"nativeSrc": "12202:248:8",
													"nodeType": "YulBlock",
													"src": "12202:248:8",
													"statements": [
														{
															"nativeSrc": "12212:26:8",
															"nodeType": "YulAssignment",
															"src": "12212:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12224:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12224:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12235:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12235:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12220:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12220:3:8"
																},
																"nativeSrc": "12220:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12220:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12212:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12212:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12259:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12259:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12270:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12270:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12255:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12255:3:8"
																		},
																		"nativeSrc": "12255:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12255:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12278:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12278:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12284:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12284:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12274:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12274:3:8"
																		},
																		"nativeSrc": "12274:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12274:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12248:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12248:6:8"
																},
																"nativeSrc": "12248:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12248:47:8"
															},
															"nativeSrc": "12248:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12248:47:8"
														},
														{
															"nativeSrc": "12304:139:8",
															"nodeType": "YulAssignment",
															"src": "12304:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12438:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12438:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12312:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12312:124:8"
																},
																"nativeSrc": "12312:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12312:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12304:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12304:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12031:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12182:9:8",
														"nodeType": "YulTypedName",
														"src": "12182:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12197:4:8",
														"nodeType": "YulTypedName",
														"src": "12197:4:8",
														"type": ""
													}
												],
												"src": "12031:419:8"
											},
											{
												"body": {
													"nativeSrc": "12500:147:8",
													"nodeType": "YulBlock",
													"src": "12500:147:8",
													"statements": [
														{
															"nativeSrc": "12510:25:8",
															"nodeType": "YulAssignment",
															"src": "12510:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12533:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12533:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12515:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12515:17:8"
																},
																"nativeSrc": "12515:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12515:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12510:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12510:1:8"
																}
															]
														},
														{
															"nativeSrc": "12544:25:8",
															"nodeType": "YulAssignment",
															"src": "12544:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12567:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12567:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12549:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12549:17:8"
																},
																"nativeSrc": "12549:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12549:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12544:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12544:1:8"
																}
															]
														},
														{
															"nativeSrc": "12578:16:8",
															"nodeType": "YulAssignment",
															"src": "12578:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12589:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12589:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12592:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12592:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12585:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12585:3:8"
																},
																"nativeSrc": "12585:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12585:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12578:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12578:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12618:22:8",
																"nodeType": "YulBlock",
																"src": "12618:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12620:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12620:16:8"
																			},
																			"nativeSrc": "12620:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12620:18:8"
																		},
																		"nativeSrc": "12620:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12620:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12610:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12610:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12613:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12613:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12607:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12607:2:8"
																},
																"nativeSrc": "12607:10:8",
																"nodeType": "YulFunctionCall",
																"src": "12607:10:8"
															},
															"nativeSrc": "12604:36:8",
															"nodeType": "YulIf",
															"src": "12604:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12456:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12487:1:8",
														"nodeType": "YulTypedName",
														"src": "12487:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12490:1:8",
														"nodeType": "YulTypedName",
														"src": "12490:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12496:3:8",
														"nodeType": "YulTypedName",
														"src": "12496:3:8",
														"type": ""
													}
												],
												"src": "12456:191:8"
											},
											{
												"body": {
													"nativeSrc": "12759:118:8",
													"nodeType": "YulBlock",
													"src": "12759:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12781:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12781:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12789:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12789:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12777:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12777:3:8"
																		},
																		"nativeSrc": "12777:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12777:14:8"
																	},
																	{
																		"hexValue": "436f6f6c646f776e20706572696f64206e6f74206d657420666f7220756e7374",
																		"kind": "string",
																		"nativeSrc": "12793:34:8",
																		"nodeType": "YulLiteral",
																		"src": "12793:34:8",
																		"type": "",
																		"value": "Cooldown period not met for unst"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12770:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12770:6:8"
																},
																"nativeSrc": "12770:58:8",
																"nodeType": "YulFunctionCall",
																"src": "12770:58:8"
															},
															"nativeSrc": "12770:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "12770:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12849:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12857:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12857:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12845:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:8"
																		},
																		"nativeSrc": "12845:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12845:15:8"
																	},
																	{
																		"hexValue": "616b696e67",
																		"kind": "string",
																		"nativeSrc": "12862:7:8",
																		"nodeType": "YulLiteral",
																		"src": "12862:7:8",
																		"type": "",
																		"value": "aking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12838:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12838:6:8"
																},
																"nativeSrc": "12838:32:8",
																"nodeType": "YulFunctionCall",
																"src": "12838:32:8"
															},
															"nativeSrc": "12838:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "12838:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21",
												"nativeSrc": "12653:224:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12751:6:8",
														"nodeType": "YulTypedName",
														"src": "12751:6:8",
														"type": ""
													}
												],
												"src": "12653:224:8"
											},
											{
												"body": {
													"nativeSrc": "13029:220:8",
													"nodeType": "YulBlock",
													"src": "13029:220:8",
													"statements": [
														{
															"nativeSrc": "13039:74:8",
															"nodeType": "YulAssignment",
															"src": "13039:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13105:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13105:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13110:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13110:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13046:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13046:58:8"
																},
																"nativeSrc": "13046:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13046:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13039:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13039:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13211:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13211:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21",
																	"nativeSrc": "13122:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13122:88:8"
																},
																"nativeSrc": "13122:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13122:93:8"
															},
															"nativeSrc": "13122:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13122:93:8"
														},
														{
															"nativeSrc": "13224:19:8",
															"nodeType": "YulAssignment",
															"src": "13224:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13235:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13235:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13240:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13240:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13231:3:8"
																},
																"nativeSrc": "13231:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13231:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13224:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13224:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12883:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13017:3:8",
														"nodeType": "YulTypedName",
														"src": "13017:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13025:3:8",
														"nodeType": "YulTypedName",
														"src": "13025:3:8",
														"type": ""
													}
												],
												"src": "12883:366:8"
											},
											{
												"body": {
													"nativeSrc": "13426:248:8",
													"nodeType": "YulBlock",
													"src": "13426:248:8",
													"statements": [
														{
															"nativeSrc": "13436:26:8",
															"nodeType": "YulAssignment",
															"src": "13436:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13448:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13448:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13459:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13459:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13444:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13444:3:8"
																},
																"nativeSrc": "13444:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13444:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13436:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13436:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13483:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13483:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13494:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13494:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13479:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13479:3:8"
																		},
																		"nativeSrc": "13479:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13479:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13502:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13502:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13508:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13508:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13498:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13498:3:8"
																		},
																		"nativeSrc": "13498:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13498:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13472:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13472:6:8"
																},
																"nativeSrc": "13472:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13472:47:8"
															},
															"nativeSrc": "13472:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13472:47:8"
														},
														{
															"nativeSrc": "13528:139:8",
															"nodeType": "YulAssignment",
															"src": "13528:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13662:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13662:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13536:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13536:124:8"
																},
																"nativeSrc": "13536:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13536:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13528:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13528:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13255:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13406:9:8",
														"nodeType": "YulTypedName",
														"src": "13406:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13421:4:8",
														"nodeType": "YulTypedName",
														"src": "13421:4:8",
														"type": ""
													}
												],
												"src": "13255:419:8"
											},
											{
												"body": {
													"nativeSrc": "13728:362:8",
													"nodeType": "YulBlock",
													"src": "13728:362:8",
													"statements": [
														{
															"nativeSrc": "13738:25:8",
															"nodeType": "YulAssignment",
															"src": "13738:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13761:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13761:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13743:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13743:17:8"
																},
																"nativeSrc": "13743:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13743:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13738:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13738:1:8"
																}
															]
														},
														{
															"nativeSrc": "13772:25:8",
															"nodeType": "YulAssignment",
															"src": "13772:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13795:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13795:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13777:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13777:17:8"
																},
																"nativeSrc": "13777:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13777:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13772:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13772:1:8"
																}
															]
														},
														{
															"nativeSrc": "13806:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13806:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13829:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13829:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13832:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13832:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13825:3:8"
																},
																"nativeSrc": "13825:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13825:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13810:11:8",
																	"nodeType": "YulTypedName",
																	"src": "13810:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13843:41:8",
															"nodeType": "YulAssignment",
															"src": "13843:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13872:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "13872:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13854:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13854:17:8"
																},
																"nativeSrc": "13854:30:8",
																"nodeType": "YulFunctionCall",
																"src": "13854:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13843:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "13843:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14061:22:8",
																"nodeType": "YulBlock",
																"src": "14061:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14063:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14063:16:8"
																			},
																			"nativeSrc": "14063:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14063:18:8"
																		},
																		"nativeSrc": "14063:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14063:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13994:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "13994:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13987:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "13987:6:8"
																				},
																				"nativeSrc": "13987:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13987:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14017:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "14017:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14024:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "14024:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14033:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "14033:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14020:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "14020:3:8"
																						},
																						"nativeSrc": "14020:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "14020:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14014:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "14014:2:8"
																				},
																				"nativeSrc": "14014:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14014:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13967:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "13967:2:8"
																		},
																		"nativeSrc": "13967:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13967:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13947:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13947:6:8"
																},
																"nativeSrc": "13947:113:8",
																"nodeType": "YulFunctionCall",
																"src": "13947:113:8"
															},
															"nativeSrc": "13944:139:8",
															"nodeType": "YulIf",
															"src": "13944:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13680:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13711:1:8",
														"nodeType": "YulTypedName",
														"src": "13711:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13714:1:8",
														"nodeType": "YulTypedName",
														"src": "13714:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13720:7:8",
														"nodeType": "YulTypedName",
														"src": "13720:7:8",
														"type": ""
													}
												],
												"src": "13680:410:8"
											},
											{
												"body": {
													"nativeSrc": "14124:152:8",
													"nodeType": "YulBlock",
													"src": "14124:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14141:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14141:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14144:77:8",
																		"nodeType": "YulLiteral",
																		"src": "14144:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14134:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14134:6:8"
																},
																"nativeSrc": "14134:88:8",
																"nodeType": "YulFunctionCall",
																"src": "14134:88:8"
															},
															"nativeSrc": "14134:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "14134:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14238:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14238:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14241:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14241:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14231:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14231:6:8"
																},
																"nativeSrc": "14231:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14231:15:8"
															},
															"nativeSrc": "14231:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14231:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14262:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14262:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14265:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14265:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14255:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14255:6:8"
																},
																"nativeSrc": "14255:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14255:15:8"
															},
															"nativeSrc": "14255:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14255:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14096:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14096:180:8"
											},
											{
												"body": {
													"nativeSrc": "14324:143:8",
													"nodeType": "YulBlock",
													"src": "14324:143:8",
													"statements": [
														{
															"nativeSrc": "14334:25:8",
															"nodeType": "YulAssignment",
															"src": "14334:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14357:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14357:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14339:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14339:17:8"
																},
																"nativeSrc": "14339:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14339:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14334:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14334:1:8"
																}
															]
														},
														{
															"nativeSrc": "14368:25:8",
															"nodeType": "YulAssignment",
															"src": "14368:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14391:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14391:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14373:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14373:17:8"
																},
																"nativeSrc": "14373:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14373:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14368:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14368:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14415:22:8",
																"nodeType": "YulBlock",
																"src": "14415:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14417:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14417:16:8"
																			},
																			"nativeSrc": "14417:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14417:18:8"
																		},
																		"nativeSrc": "14417:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14417:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14412:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14412:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14405:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14405:6:8"
																},
																"nativeSrc": "14405:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14405:9:8"
															},
															"nativeSrc": "14402:35:8",
															"nodeType": "YulIf",
															"src": "14402:35:8"
														},
														{
															"nativeSrc": "14447:14:8",
															"nodeType": "YulAssignment",
															"src": "14447:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14456:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14456:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14459:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14459:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14452:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14452:3:8"
																},
																"nativeSrc": "14452:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14452:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14447:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14447:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14282:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14313:1:8",
														"nodeType": "YulTypedName",
														"src": "14313:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14316:1:8",
														"nodeType": "YulTypedName",
														"src": "14316:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14322:1:8",
														"nodeType": "YulTypedName",
														"src": "14322:1:8",
														"type": ""
													}
												],
												"src": "14282:185:8"
											},
											{
												"body": {
													"nativeSrc": "14579:60:8",
													"nodeType": "YulBlock",
													"src": "14579:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14601:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14601:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14609:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14609:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14597:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14597:3:8"
																		},
																		"nativeSrc": "14597:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14597:14:8"
																	},
																	{
																		"hexValue": "416c6c20746f6b656e73206d696e6564",
																		"kind": "string",
																		"nativeSrc": "14613:18:8",
																		"nodeType": "YulLiteral",
																		"src": "14613:18:8",
																		"type": "",
																		"value": "All tokens mined"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14590:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14590:6:8"
																},
																"nativeSrc": "14590:42:8",
																"nodeType": "YulFunctionCall",
																"src": "14590:42:8"
															},
															"nativeSrc": "14590:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "14590:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f",
												"nativeSrc": "14473:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14571:6:8",
														"nodeType": "YulTypedName",
														"src": "14571:6:8",
														"type": ""
													}
												],
												"src": "14473:166:8"
											},
											{
												"body": {
													"nativeSrc": "14791:220:8",
													"nodeType": "YulBlock",
													"src": "14791:220:8",
													"statements": [
														{
															"nativeSrc": "14801:74:8",
															"nodeType": "YulAssignment",
															"src": "14801:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14867:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14867:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14872:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14872:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14808:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14808:58:8"
																},
																"nativeSrc": "14808:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14808:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14801:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14801:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14973:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14973:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f",
																	"nativeSrc": "14884:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14884:88:8"
																},
																"nativeSrc": "14884:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14884:93:8"
															},
															"nativeSrc": "14884:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14884:93:8"
														},
														{
															"nativeSrc": "14986:19:8",
															"nodeType": "YulAssignment",
															"src": "14986:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14997:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14997:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15002:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15002:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14993:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14993:3:8"
																},
																"nativeSrc": "14993:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14993:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14986:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14986:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14645:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14779:3:8",
														"nodeType": "YulTypedName",
														"src": "14779:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14787:3:8",
														"nodeType": "YulTypedName",
														"src": "14787:3:8",
														"type": ""
													}
												],
												"src": "14645:366:8"
											},
											{
												"body": {
													"nativeSrc": "15188:248:8",
													"nodeType": "YulBlock",
													"src": "15188:248:8",
													"statements": [
														{
															"nativeSrc": "15198:26:8",
															"nodeType": "YulAssignment",
															"src": "15198:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15210:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15210:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15221:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15221:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15206:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15206:3:8"
																},
																"nativeSrc": "15206:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15206:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15198:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15198:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15245:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15245:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15256:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15256:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15241:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15241:3:8"
																		},
																		"nativeSrc": "15241:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15241:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15264:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15264:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15270:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15270:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15260:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15260:3:8"
																		},
																		"nativeSrc": "15260:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15260:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15234:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15234:6:8"
																},
																"nativeSrc": "15234:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15234:47:8"
															},
															"nativeSrc": "15234:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15234:47:8"
														},
														{
															"nativeSrc": "15290:139:8",
															"nodeType": "YulAssignment",
															"src": "15290:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15424:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15424:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15298:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15298:124:8"
																},
																"nativeSrc": "15298:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15298:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15290:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15290:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15017:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15168:9:8",
														"nodeType": "YulTypedName",
														"src": "15168:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15183:4:8",
														"nodeType": "YulTypedName",
														"src": "15183:4:8",
														"type": ""
													}
												],
												"src": "15017:419:8"
											},
											{
												"body": {
													"nativeSrc": "15484:52:8",
													"nodeType": "YulBlock",
													"src": "15484:52:8",
													"statements": [
														{
															"nativeSrc": "15494:35:8",
															"nodeType": "YulAssignment",
															"src": "15494:35:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15519:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15519:2:8",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15523:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15523:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15515:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15515:3:8"
																},
																"nativeSrc": "15515:14:8",
																"nodeType": "YulFunctionCall",
																"src": "15515:14:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15494:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "15494:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "15442:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15465:5:8",
														"nodeType": "YulTypedName",
														"src": "15465:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15475:8:8",
														"nodeType": "YulTypedName",
														"src": "15475:8:8",
														"type": ""
													}
												],
												"src": "15442:94:8"
											},
											{
												"body": {
													"nativeSrc": "15589:47:8",
													"nodeType": "YulBlock",
													"src": "15589:47:8",
													"statements": [
														{
															"nativeSrc": "15599:31:8",
															"nodeType": "YulAssignment",
															"src": "15599:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15624:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15624:5:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "15610:13:8",
																	"nodeType": "YulIdentifier",
																	"src": "15610:13:8"
																},
																"nativeSrc": "15610:20:8",
																"nodeType": "YulFunctionCall",
																"src": "15610:20:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15599:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "15599:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "15542:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15571:5:8",
														"nodeType": "YulTypedName",
														"src": "15571:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15581:7:8",
														"nodeType": "YulTypedName",
														"src": "15581:7:8",
														"type": ""
													}
												],
												"src": "15542:94:8"
											},
											{
												"body": {
													"nativeSrc": "15689:53:8",
													"nodeType": "YulBlock",
													"src": "15689:53:8",
													"statements": [
														{
															"nativeSrc": "15699:37:8",
															"nodeType": "YulAssignment",
															"src": "15699:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15730:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15730:5:8"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "15710:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "15710:19:8"
																},
																"nativeSrc": "15710:26:8",
																"nodeType": "YulFunctionCall",
																"src": "15710:26:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15699:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "15699:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "15642:100:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15671:5:8",
														"nodeType": "YulTypedName",
														"src": "15671:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15681:7:8",
														"nodeType": "YulTypedName",
														"src": "15681:7:8",
														"type": ""
													}
												],
												"src": "15642:100:8"
											},
											{
												"body": {
													"nativeSrc": "15831:74:8",
													"nodeType": "YulBlock",
													"src": "15831:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15848:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15848:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15891:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "15891:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "15873:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "15873:17:8"
																				},
																				"nativeSrc": "15873:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15873:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "15853:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "15853:19:8"
																		},
																		"nativeSrc": "15853:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15853:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15841:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15841:6:8"
																},
																"nativeSrc": "15841:58:8",
																"nodeType": "YulFunctionCall",
																"src": "15841:58:8"
															},
															"nativeSrc": "15841:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "15841:58:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "15748:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15819:5:8",
														"nodeType": "YulTypedName",
														"src": "15819:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15826:3:8",
														"nodeType": "YulTypedName",
														"src": "15826:3:8",
														"type": ""
													}
												],
												"src": "15748:157:8"
											},
											{
												"body": {
													"nativeSrc": "15958:32:8",
													"nodeType": "YulBlock",
													"src": "15958:32:8",
													"statements": [
														{
															"nativeSrc": "15968:16:8",
															"nodeType": "YulAssignment",
															"src": "15968:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "15979:5:8",
																"nodeType": "YulIdentifier",
																"src": "15979:5:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15968:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "15968:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "15911:79:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15940:5:8",
														"nodeType": "YulTypedName",
														"src": "15940:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15950:7:8",
														"nodeType": "YulTypedName",
														"src": "15950:7:8",
														"type": ""
													}
												],
												"src": "15911:79:8"
											},
											{
												"body": {
													"nativeSrc": "16079:74:8",
													"nodeType": "YulBlock",
													"src": "16079:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16096:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16096:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16139:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "16139:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16121:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "16121:17:8"
																				},
																				"nativeSrc": "16121:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16121:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "16101:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "16101:19:8"
																		},
																		"nativeSrc": "16101:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16101:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16089:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16089:6:8"
																},
																"nativeSrc": "16089:58:8",
																"nodeType": "YulFunctionCall",
																"src": "16089:58:8"
															},
															"nativeSrc": "16089:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "16089:58:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "15996:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16067:5:8",
														"nodeType": "YulTypedName",
														"src": "16067:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16074:3:8",
														"nodeType": "YulTypedName",
														"src": "16074:3:8",
														"type": ""
													}
												],
												"src": "15996:157:8"
											},
											{
												"body": {
													"nativeSrc": "16303:253:8",
													"nodeType": "YulBlock",
													"src": "16303:253:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16376:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16385:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16385:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "16314:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "16314:61:8"
																},
																"nativeSrc": "16314:75:8",
																"nodeType": "YulFunctionCall",
																"src": "16314:75:8"
															},
															"nativeSrc": "16314:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "16314:75:8"
														},
														{
															"nativeSrc": "16398:19:8",
															"nodeType": "YulAssignment",
															"src": "16398:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16409:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16409:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16414:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16414:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16405:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16405:3:8"
																},
																"nativeSrc": "16405:12:8",
																"nodeType": "YulFunctionCall",
																"src": "16405:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16398:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16398:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16489:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16489:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16498:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16498:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "16427:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "16427:61:8"
																},
																"nativeSrc": "16427:75:8",
																"nodeType": "YulFunctionCall",
																"src": "16427:75:8"
															},
															"nativeSrc": "16427:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "16427:75:8"
														},
														{
															"nativeSrc": "16511:19:8",
															"nodeType": "YulAssignment",
															"src": "16511:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16522:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16522:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16527:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16527:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16518:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16518:3:8"
																},
																"nativeSrc": "16518:12:8",
																"nodeType": "YulFunctionCall",
																"src": "16518:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16511:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16511:3:8"
																}
															]
														},
														{
															"nativeSrc": "16540:10:8",
															"nodeType": "YulAssignment",
															"src": "16540:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "16547:3:8",
																"nodeType": "YulIdentifier",
																"src": "16547:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16540:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16540:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16159:397:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16274:3:8",
														"nodeType": "YulTypedName",
														"src": "16274:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16280:6:8",
														"nodeType": "YulTypedName",
														"src": "16280:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16288:6:8",
														"nodeType": "YulTypedName",
														"src": "16288:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16299:3:8",
														"nodeType": "YulTypedName",
														"src": "16299:3:8",
														"type": ""
													}
												],
												"src": "16159:397:8"
											},
											{
												"body": {
													"nativeSrc": "16668:69:8",
													"nodeType": "YulBlock",
													"src": "16668:69:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16690:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16690:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16698:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16698:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16686:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16686:3:8"
																		},
																		"nativeSrc": "16686:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16686:14:8"
																	},
																	{
																		"hexValue": "4d696e696e6720646966666963756c7479206e6f74206d6574",
																		"kind": "string",
																		"nativeSrc": "16702:27:8",
																		"nodeType": "YulLiteral",
																		"src": "16702:27:8",
																		"type": "",
																		"value": "Mining difficulty not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16679:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16679:6:8"
																},
																"nativeSrc": "16679:51:8",
																"nodeType": "YulFunctionCall",
																"src": "16679:51:8"
															},
															"nativeSrc": "16679:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "16679:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c",
												"nativeSrc": "16562:175:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16660:6:8",
														"nodeType": "YulTypedName",
														"src": "16660:6:8",
														"type": ""
													}
												],
												"src": "16562:175:8"
											},
											{
												"body": {
													"nativeSrc": "16889:220:8",
													"nodeType": "YulBlock",
													"src": "16889:220:8",
													"statements": [
														{
															"nativeSrc": "16899:74:8",
															"nodeType": "YulAssignment",
															"src": "16899:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16965:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16965:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16970:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16970:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16906:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "16906:58:8"
																},
																"nativeSrc": "16906:67:8",
																"nodeType": "YulFunctionCall",
																"src": "16906:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16899:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16899:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17071:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17071:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c",
																	"nativeSrc": "16982:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "16982:88:8"
																},
																"nativeSrc": "16982:93:8",
																"nodeType": "YulFunctionCall",
																"src": "16982:93:8"
															},
															"nativeSrc": "16982:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "16982:93:8"
														},
														{
															"nativeSrc": "17084:19:8",
															"nodeType": "YulAssignment",
															"src": "17084:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17095:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17095:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17100:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17100:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17091:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17091:3:8"
																},
																"nativeSrc": "17091:12:8",
																"nodeType": "YulFunctionCall",
																"src": "17091:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17084:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17084:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16743:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16877:3:8",
														"nodeType": "YulTypedName",
														"src": "16877:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16885:3:8",
														"nodeType": "YulTypedName",
														"src": "16885:3:8",
														"type": ""
													}
												],
												"src": "16743:366:8"
											},
											{
												"body": {
													"nativeSrc": "17286:248:8",
													"nodeType": "YulBlock",
													"src": "17286:248:8",
													"statements": [
														{
															"nativeSrc": "17296:26:8",
															"nodeType": "YulAssignment",
															"src": "17296:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17308:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17308:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17319:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17319:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17304:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17304:3:8"
																},
																"nativeSrc": "17304:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17304:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17296:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17296:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17343:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17343:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17354:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17339:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17339:3:8"
																		},
																		"nativeSrc": "17339:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17339:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17362:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17362:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17368:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17368:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17358:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17358:3:8"
																		},
																		"nativeSrc": "17358:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17358:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17332:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17332:6:8"
																},
																"nativeSrc": "17332:47:8",
																"nodeType": "YulFunctionCall",
																"src": "17332:47:8"
															},
															"nativeSrc": "17332:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "17332:47:8"
														},
														{
															"nativeSrc": "17388:139:8",
															"nodeType": "YulAssignment",
															"src": "17388:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17522:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17522:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17396:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "17396:124:8"
																},
																"nativeSrc": "17396:131:8",
																"nodeType": "YulFunctionCall",
																"src": "17396:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17388:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17388:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17115:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17266:9:8",
														"nodeType": "YulTypedName",
														"src": "17266:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17281:4:8",
														"nodeType": "YulTypedName",
														"src": "17281:4:8",
														"type": ""
													}
												],
												"src": "17115:419:8"
											},
											{
												"body": {
													"nativeSrc": "17646:60:8",
													"nodeType": "YulBlock",
													"src": "17646:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17668:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17668:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17676:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17676:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17664:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17664:3:8"
																		},
																		"nativeSrc": "17664:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17664:14:8"
																	},
																	{
																		"hexValue": "416c726561647920616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "17680:18:8",
																		"nodeType": "YulLiteral",
																		"src": "17680:18:8",
																		"type": "",
																		"value": "Already an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17657:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17657:6:8"
																},
																"nativeSrc": "17657:42:8",
																"nodeType": "YulFunctionCall",
																"src": "17657:42:8"
															},
															"nativeSrc": "17657:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "17657:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9",
												"nativeSrc": "17540:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17638:6:8",
														"nodeType": "YulTypedName",
														"src": "17638:6:8",
														"type": ""
													}
												],
												"src": "17540:166:8"
											},
											{
												"body": {
													"nativeSrc": "17858:220:8",
													"nodeType": "YulBlock",
													"src": "17858:220:8",
													"statements": [
														{
															"nativeSrc": "17868:74:8",
															"nodeType": "YulAssignment",
															"src": "17868:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17934:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17934:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17939:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17939:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17875:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "17875:58:8"
																},
																"nativeSrc": "17875:67:8",
																"nodeType": "YulFunctionCall",
																"src": "17875:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17868:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17868:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18040:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18040:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9",
																	"nativeSrc": "17951:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "17951:88:8"
																},
																"nativeSrc": "17951:93:8",
																"nodeType": "YulFunctionCall",
																"src": "17951:93:8"
															},
															"nativeSrc": "17951:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "17951:93:8"
														},
														{
															"nativeSrc": "18053:19:8",
															"nodeType": "YulAssignment",
															"src": "18053:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18064:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18064:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18069:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18069:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18060:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18060:3:8"
																},
																"nativeSrc": "18060:12:8",
																"nodeType": "YulFunctionCall",
																"src": "18060:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18053:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18053:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17712:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17846:3:8",
														"nodeType": "YulTypedName",
														"src": "17846:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17854:3:8",
														"nodeType": "YulTypedName",
														"src": "17854:3:8",
														"type": ""
													}
												],
												"src": "17712:366:8"
											},
											{
												"body": {
													"nativeSrc": "18255:248:8",
													"nodeType": "YulBlock",
													"src": "18255:248:8",
													"statements": [
														{
															"nativeSrc": "18265:26:8",
															"nodeType": "YulAssignment",
															"src": "18265:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18277:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18277:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18288:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18288:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18273:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18273:3:8"
																},
																"nativeSrc": "18273:18:8",
																"nodeType": "YulFunctionCall",
																"src": "18273:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18265:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18265:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18308:3:8"
																		},
																		"nativeSrc": "18308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18308:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18331:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "18331:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18337:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18337:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18327:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18327:3:8"
																		},
																		"nativeSrc": "18327:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18327:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18301:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18301:6:8"
																},
																"nativeSrc": "18301:47:8",
																"nodeType": "YulFunctionCall",
																"src": "18301:47:8"
															},
															"nativeSrc": "18301:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "18301:47:8"
														},
														{
															"nativeSrc": "18357:139:8",
															"nodeType": "YulAssignment",
															"src": "18357:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18491:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18491:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18365:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "18365:124:8"
																},
																"nativeSrc": "18365:131:8",
																"nodeType": "YulFunctionCall",
																"src": "18365:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18357:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18357:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18084:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18235:9:8",
														"nodeType": "YulTypedName",
														"src": "18235:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18250:4:8",
														"nodeType": "YulTypedName",
														"src": "18250:4:8",
														"type": ""
													}
												],
												"src": "18084:419:8"
											},
											{
												"body": {
													"nativeSrc": "18615:65:8",
													"nodeType": "YulBlock",
													"src": "18615:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18637:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18637:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18645:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18645:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18633:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18633:3:8"
																		},
																		"nativeSrc": "18633:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18633:14:8"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "18649:23:8",
																		"nodeType": "YulLiteral",
																		"src": "18649:23:8",
																		"type": "",
																		"value": "Cannot stake 0 tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18626:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18626:6:8"
																},
																"nativeSrc": "18626:47:8",
																"nodeType": "YulFunctionCall",
																"src": "18626:47:8"
															},
															"nativeSrc": "18626:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "18626:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
												"nativeSrc": "18509:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18607:6:8",
														"nodeType": "YulTypedName",
														"src": "18607:6:8",
														"type": ""
													}
												],
												"src": "18509:171:8"
											},
											{
												"body": {
													"nativeSrc": "18832:220:8",
													"nodeType": "YulBlock",
													"src": "18832:220:8",
													"statements": [
														{
															"nativeSrc": "18842:74:8",
															"nodeType": "YulAssignment",
															"src": "18842:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18908:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18908:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18913:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18913:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18849:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "18849:58:8"
																},
																"nativeSrc": "18849:67:8",
																"nodeType": "YulFunctionCall",
																"src": "18849:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18842:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18842:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19014:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19014:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																	"nativeSrc": "18925:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "18925:88:8"
																},
																"nativeSrc": "18925:93:8",
																"nodeType": "YulFunctionCall",
																"src": "18925:93:8"
															},
															"nativeSrc": "18925:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "18925:93:8"
														},
														{
															"nativeSrc": "19027:19:8",
															"nodeType": "YulAssignment",
															"src": "19027:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19038:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19038:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19043:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19043:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19034:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19034:3:8"
																},
																"nativeSrc": "19034:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19034:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19027:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19027:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18686:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18820:3:8",
														"nodeType": "YulTypedName",
														"src": "18820:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18828:3:8",
														"nodeType": "YulTypedName",
														"src": "18828:3:8",
														"type": ""
													}
												],
												"src": "18686:366:8"
											},
											{
												"body": {
													"nativeSrc": "19229:248:8",
													"nodeType": "YulBlock",
													"src": "19229:248:8",
													"statements": [
														{
															"nativeSrc": "19239:26:8",
															"nodeType": "YulAssignment",
															"src": "19239:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19251:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19251:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19262:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19262:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19247:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19247:3:8"
																},
																"nativeSrc": "19247:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19247:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19239:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19239:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19286:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19286:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19297:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19297:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19282:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19282:3:8"
																		},
																		"nativeSrc": "19282:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19282:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19305:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19305:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19311:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19311:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19301:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19301:3:8"
																		},
																		"nativeSrc": "19301:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19301:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19275:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19275:6:8"
																},
																"nativeSrc": "19275:47:8",
																"nodeType": "YulFunctionCall",
																"src": "19275:47:8"
															},
															"nativeSrc": "19275:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "19275:47:8"
														},
														{
															"nativeSrc": "19331:139:8",
															"nodeType": "YulAssignment",
															"src": "19331:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19465:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19465:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19339:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "19339:124:8"
																},
																"nativeSrc": "19339:131:8",
																"nodeType": "YulFunctionCall",
																"src": "19339:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19331:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19331:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19058:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19209:9:8",
														"nodeType": "YulTypedName",
														"src": "19209:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19224:4:8",
														"nodeType": "YulTypedName",
														"src": "19224:4:8",
														"type": ""
													}
												],
												"src": "19058:419:8"
											},
											{
												"body": {
													"nativeSrc": "19589:116:8",
													"nodeType": "YulBlock",
													"src": "19589:116:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19611:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "19611:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19619:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19619:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19607:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19607:3:8"
																		},
																		"nativeSrc": "19607:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19607:14:8"
																	},
																	{
																		"hexValue": "436f6f6c646f776e20706572696f64206e6f74206d657420666f72207374616b",
																		"kind": "string",
																		"nativeSrc": "19623:34:8",
																		"nodeType": "YulLiteral",
																		"src": "19623:34:8",
																		"type": "",
																		"value": "Cooldown period not met for stak"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19600:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19600:6:8"
																},
																"nativeSrc": "19600:58:8",
																"nodeType": "YulFunctionCall",
																"src": "19600:58:8"
															},
															"nativeSrc": "19600:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "19600:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19679:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "19679:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19687:2:8",
																				"nodeType": "YulLiteral",
																				"src": "19687:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19675:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19675:3:8"
																		},
																		"nativeSrc": "19675:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19675:15:8"
																	},
																	{
																		"hexValue": "696e67",
																		"kind": "string",
																		"nativeSrc": "19692:5:8",
																		"nodeType": "YulLiteral",
																		"src": "19692:5:8",
																		"type": "",
																		"value": "ing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19668:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19668:6:8"
																},
																"nativeSrc": "19668:30:8",
																"nodeType": "YulFunctionCall",
																"src": "19668:30:8"
															},
															"nativeSrc": "19668:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "19668:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7",
												"nativeSrc": "19483:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19581:6:8",
														"nodeType": "YulTypedName",
														"src": "19581:6:8",
														"type": ""
													}
												],
												"src": "19483:222:8"
											},
											{
												"body": {
													"nativeSrc": "19857:220:8",
													"nodeType": "YulBlock",
													"src": "19857:220:8",
													"statements": [
														{
															"nativeSrc": "19867:74:8",
															"nodeType": "YulAssignment",
															"src": "19867:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19933:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19933:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19938:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19938:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19874:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "19874:58:8"
																},
																"nativeSrc": "19874:67:8",
																"nodeType": "YulFunctionCall",
																"src": "19874:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19867:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19867:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20039:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "20039:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7",
																	"nativeSrc": "19950:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "19950:88:8"
																},
																"nativeSrc": "19950:93:8",
																"nodeType": "YulFunctionCall",
																"src": "19950:93:8"
															},
															"nativeSrc": "19950:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "19950:93:8"
														},
														{
															"nativeSrc": "20052:19:8",
															"nodeType": "YulAssignment",
															"src": "20052:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20063:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "20063:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20068:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20068:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20059:3:8"
																},
																"nativeSrc": "20059:12:8",
																"nodeType": "YulFunctionCall",
																"src": "20059:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20052:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20052:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19711:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19845:3:8",
														"nodeType": "YulTypedName",
														"src": "19845:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19853:3:8",
														"nodeType": "YulTypedName",
														"src": "19853:3:8",
														"type": ""
													}
												],
												"src": "19711:366:8"
											},
											{
												"body": {
													"nativeSrc": "20254:248:8",
													"nodeType": "YulBlock",
													"src": "20254:248:8",
													"statements": [
														{
															"nativeSrc": "20264:26:8",
															"nodeType": "YulAssignment",
															"src": "20264:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20276:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20276:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20287:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20287:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20272:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20272:3:8"
																},
																"nativeSrc": "20272:18:8",
																"nodeType": "YulFunctionCall",
																"src": "20272:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20264:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20264:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20311:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20311:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20322:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20322:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20307:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20307:3:8"
																		},
																		"nativeSrc": "20307:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20307:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20330:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "20330:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20336:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20336:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20326:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20326:3:8"
																		},
																		"nativeSrc": "20326:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20326:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20300:6:8"
																},
																"nativeSrc": "20300:47:8",
																"nodeType": "YulFunctionCall",
																"src": "20300:47:8"
															},
															"nativeSrc": "20300:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "20300:47:8"
														},
														{
															"nativeSrc": "20356:139:8",
															"nodeType": "YulAssignment",
															"src": "20356:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20490:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "20490:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20364:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "20364:124:8"
																},
																"nativeSrc": "20364:131:8",
																"nodeType": "YulFunctionCall",
																"src": "20364:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20356:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20356:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20083:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20234:9:8",
														"nodeType": "YulTypedName",
														"src": "20234:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20249:4:8",
														"nodeType": "YulTypedName",
														"src": "20249:4:8",
														"type": ""
													}
												],
												"src": "20083:419:8"
											},
											{
												"body": {
													"nativeSrc": "20614:61:8",
													"nodeType": "YulBlock",
													"src": "20614:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20636:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "20636:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20644:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20644:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20632:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20632:3:8"
																		},
																		"nativeSrc": "20632:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20632:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964206e6577206f776e6572",
																		"kind": "string",
																		"nativeSrc": "20648:19:8",
																		"nodeType": "YulLiteral",
																		"src": "20648:19:8",
																		"type": "",
																		"value": "Invalid new owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20625:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20625:6:8"
																},
																"nativeSrc": "20625:43:8",
																"nodeType": "YulFunctionCall",
																"src": "20625:43:8"
															},
															"nativeSrc": "20625:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "20625:43:8"
														}
													]
												},
												"name": "store_literal_in_memory_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b",
												"nativeSrc": "20508:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20606:6:8",
														"nodeType": "YulTypedName",
														"src": "20606:6:8",
														"type": ""
													}
												],
												"src": "20508:167:8"
											},
											{
												"body": {
													"nativeSrc": "20827:220:8",
													"nodeType": "YulBlock",
													"src": "20827:220:8",
													"statements": [
														{
															"nativeSrc": "20837:74:8",
															"nodeType": "YulAssignment",
															"src": "20837:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20903:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "20903:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20908:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20844:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "20844:58:8"
																},
																"nativeSrc": "20844:67:8",
																"nodeType": "YulFunctionCall",
																"src": "20844:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20837:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20837:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21009:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21009:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b",
																	"nativeSrc": "20920:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "20920:88:8"
																},
																"nativeSrc": "20920:93:8",
																"nodeType": "YulFunctionCall",
																"src": "20920:93:8"
															},
															"nativeSrc": "20920:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "20920:93:8"
														},
														{
															"nativeSrc": "21022:19:8",
															"nodeType": "YulAssignment",
															"src": "21022:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21033:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21033:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21038:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21038:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21029:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21029:3:8"
																},
																"nativeSrc": "21029:12:8",
																"nodeType": "YulFunctionCall",
																"src": "21029:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21022:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21022:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20681:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20815:3:8",
														"nodeType": "YulTypedName",
														"src": "20815:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20823:3:8",
														"nodeType": "YulTypedName",
														"src": "20823:3:8",
														"type": ""
													}
												],
												"src": "20681:366:8"
											},
											{
												"body": {
													"nativeSrc": "21224:248:8",
													"nodeType": "YulBlock",
													"src": "21224:248:8",
													"statements": [
														{
															"nativeSrc": "21234:26:8",
															"nodeType": "YulAssignment",
															"src": "21234:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21246:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "21246:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21257:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21257:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21242:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21242:3:8"
																},
																"nativeSrc": "21242:18:8",
																"nodeType": "YulFunctionCall",
																"src": "21242:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21234:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21234:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21281:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21281:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21292:1:8",
																				"nodeType": "YulLiteral",
																				"src": "21292:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21277:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21277:3:8"
																		},
																		"nativeSrc": "21277:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21277:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21300:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "21300:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21306:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21306:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21296:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21296:3:8"
																		},
																		"nativeSrc": "21296:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21296:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21270:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21270:6:8"
																},
																"nativeSrc": "21270:47:8",
																"nodeType": "YulFunctionCall",
																"src": "21270:47:8"
															},
															"nativeSrc": "21270:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "21270:47:8"
														},
														{
															"nativeSrc": "21326:139:8",
															"nodeType": "YulAssignment",
															"src": "21326:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21460:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "21460:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21334:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "21334:124:8"
																},
																"nativeSrc": "21334:131:8",
																"nodeType": "YulFunctionCall",
																"src": "21334:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21326:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21326:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21053:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21204:9:8",
														"nodeType": "YulTypedName",
														"src": "21204:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21219:4:8",
														"nodeType": "YulTypedName",
														"src": "21219:4:8",
														"type": ""
													}
												],
												"src": "21053:419:8"
											},
											{
												"body": {
													"nativeSrc": "21584:66:8",
													"nodeType": "YulBlock",
													"src": "21584:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21606:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "21606:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21614:1:8",
																				"nodeType": "YulLiteral",
																				"src": "21614:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21602:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21602:3:8"
																		},
																		"nativeSrc": "21602:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21602:14:8"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "21618:24:8",
																		"nodeType": "YulLiteral",
																		"src": "21618:24:8",
																		"type": "",
																		"value": "No rewards to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21595:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21595:6:8"
																},
																"nativeSrc": "21595:48:8",
																"nodeType": "YulFunctionCall",
																"src": "21595:48:8"
															},
															"nativeSrc": "21595:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "21595:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
												"nativeSrc": "21478:172:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21576:6:8",
														"nodeType": "YulTypedName",
														"src": "21576:6:8",
														"type": ""
													}
												],
												"src": "21478:172:8"
											},
											{
												"body": {
													"nativeSrc": "21802:220:8",
													"nodeType": "YulBlock",
													"src": "21802:220:8",
													"statements": [
														{
															"nativeSrc": "21812:74:8",
															"nodeType": "YulAssignment",
															"src": "21812:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21878:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21878:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21883:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21883:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21819:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "21819:58:8"
																},
																"nativeSrc": "21819:67:8",
																"nodeType": "YulFunctionCall",
																"src": "21819:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21812:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21812:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21984:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21984:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
																	"nativeSrc": "21895:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "21895:88:8"
																},
																"nativeSrc": "21895:93:8",
																"nodeType": "YulFunctionCall",
																"src": "21895:93:8"
															},
															"nativeSrc": "21895:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "21895:93:8"
														},
														{
															"nativeSrc": "21997:19:8",
															"nodeType": "YulAssignment",
															"src": "21997:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22008:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22008:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22013:2:8",
																		"nodeType": "YulLiteral",
																		"src": "22013:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22004:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22004:3:8"
																},
																"nativeSrc": "22004:12:8",
																"nodeType": "YulFunctionCall",
																"src": "22004:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21997:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21997:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21656:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21790:3:8",
														"nodeType": "YulTypedName",
														"src": "21790:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21798:3:8",
														"nodeType": "YulTypedName",
														"src": "21798:3:8",
														"type": ""
													}
												],
												"src": "21656:366:8"
											},
											{
												"body": {
													"nativeSrc": "22199:248:8",
													"nodeType": "YulBlock",
													"src": "22199:248:8",
													"statements": [
														{
															"nativeSrc": "22209:26:8",
															"nodeType": "YulAssignment",
															"src": "22209:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22221:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "22221:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22232:2:8",
																		"nodeType": "YulLiteral",
																		"src": "22232:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22217:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22217:3:8"
																},
																"nativeSrc": "22217:18:8",
																"nodeType": "YulFunctionCall",
																"src": "22217:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22209:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "22209:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22256:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "22256:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22267:1:8",
																				"nodeType": "YulLiteral",
																				"src": "22267:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22252:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22252:3:8"
																		},
																		"nativeSrc": "22252:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22252:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22275:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "22275:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22281:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "22281:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22271:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22271:3:8"
																		},
																		"nativeSrc": "22271:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22271:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22245:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "22245:6:8"
																},
																"nativeSrc": "22245:47:8",
																"nodeType": "YulFunctionCall",
																"src": "22245:47:8"
															},
															"nativeSrc": "22245:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "22245:47:8"
														},
														{
															"nativeSrc": "22301:139:8",
															"nodeType": "YulAssignment",
															"src": "22301:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22435:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22435:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22309:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "22309:124:8"
																},
																"nativeSrc": "22309:131:8",
																"nodeType": "YulFunctionCall",
																"src": "22309:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22301:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "22301:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22028:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22179:9:8",
														"nodeType": "YulTypedName",
														"src": "22179:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22194:4:8",
														"nodeType": "YulTypedName",
														"src": "22194:4:8",
														"type": ""
													}
												],
												"src": "22028:419:8"
											},
											{
												"body": {
													"nativeSrc": "22607:288:8",
													"nodeType": "YulBlock",
													"src": "22607:288:8",
													"statements": [
														{
															"nativeSrc": "22617:26:8",
															"nodeType": "YulAssignment",
															"src": "22617:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22629:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "22629:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22640:2:8",
																		"nodeType": "YulLiteral",
																		"src": "22640:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22625:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22625:3:8"
																},
																"nativeSrc": "22625:18:8",
																"nodeType": "YulFunctionCall",
																"src": "22625:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22617:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "22617:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22697:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "22697:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22710:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "22710:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22721:1:8",
																				"nodeType": "YulLiteral",
																				"src": "22721:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22706:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22706:3:8"
																		},
																		"nativeSrc": "22706:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22706:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22653:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "22653:43:8"
																},
																"nativeSrc": "22653:71:8",
																"nodeType": "YulFunctionCall",
																"src": "22653:71:8"
															},
															"nativeSrc": "22653:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "22653:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22778:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "22778:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22791:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "22791:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22802:2:8",
																				"nodeType": "YulLiteral",
																				"src": "22802:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22787:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22787:3:8"
																		},
																		"nativeSrc": "22787:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22787:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22734:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "22734:43:8"
																},
																"nativeSrc": "22734:72:8",
																"nodeType": "YulFunctionCall",
																"src": "22734:72:8"
															},
															"nativeSrc": "22734:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "22734:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22860:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "22860:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22873:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "22873:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22884:2:8",
																				"nodeType": "YulLiteral",
																				"src": "22884:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22869:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22869:3:8"
																		},
																		"nativeSrc": "22869:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22869:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22816:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "22816:43:8"
																},
																"nativeSrc": "22816:72:8",
																"nodeType": "YulFunctionCall",
																"src": "22816:72:8"
															},
															"nativeSrc": "22816:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "22816:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22453:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22563:9:8",
														"nodeType": "YulTypedName",
														"src": "22563:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22575:6:8",
														"nodeType": "YulTypedName",
														"src": "22575:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22583:6:8",
														"nodeType": "YulTypedName",
														"src": "22583:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22591:6:8",
														"nodeType": "YulTypedName",
														"src": "22591:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22602:4:8",
														"nodeType": "YulTypedName",
														"src": "22602:4:8",
														"type": ""
													}
												],
												"src": "22453:442:8"
											},
											{
												"body": {
													"nativeSrc": "23007:70:8",
													"nodeType": "YulBlock",
													"src": "23007:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23029:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "23029:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23037:1:8",
																				"nodeType": "YulLiteral",
																				"src": "23037:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23025:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23025:3:8"
																		},
																		"nativeSrc": "23025:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23025:14:8"
																	},
																	{
																		"hexValue": "4d696e74696e672065786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "23041:28:8",
																		"nodeType": "YulLiteral",
																		"src": "23041:28:8",
																		"type": "",
																		"value": "Minting exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23018:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23018:6:8"
																},
																"nativeSrc": "23018:52:8",
																"nodeType": "YulFunctionCall",
																"src": "23018:52:8"
															},
															"nativeSrc": "23018:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "23018:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab",
												"nativeSrc": "22901:176:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22999:6:8",
														"nodeType": "YulTypedName",
														"src": "22999:6:8",
														"type": ""
													}
												],
												"src": "22901:176:8"
											},
											{
												"body": {
													"nativeSrc": "23229:220:8",
													"nodeType": "YulBlock",
													"src": "23229:220:8",
													"statements": [
														{
															"nativeSrc": "23239:74:8",
															"nodeType": "YulAssignment",
															"src": "23239:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23305:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23305:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23310:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23310:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23246:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "23246:58:8"
																},
																"nativeSrc": "23246:67:8",
																"nodeType": "YulFunctionCall",
																"src": "23246:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23239:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23239:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23411:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23411:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab",
																	"nativeSrc": "23322:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "23322:88:8"
																},
																"nativeSrc": "23322:93:8",
																"nodeType": "YulFunctionCall",
																"src": "23322:93:8"
															},
															"nativeSrc": "23322:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "23322:93:8"
														},
														{
															"nativeSrc": "23424:19:8",
															"nodeType": "YulAssignment",
															"src": "23424:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23435:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23435:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23440:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23440:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23431:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23431:3:8"
																},
																"nativeSrc": "23431:12:8",
																"nodeType": "YulFunctionCall",
																"src": "23431:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23424:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23424:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23083:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23217:3:8",
														"nodeType": "YulTypedName",
														"src": "23217:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23225:3:8",
														"nodeType": "YulTypedName",
														"src": "23225:3:8",
														"type": ""
													}
												],
												"src": "23083:366:8"
											},
											{
												"body": {
													"nativeSrc": "23626:248:8",
													"nodeType": "YulBlock",
													"src": "23626:248:8",
													"statements": [
														{
															"nativeSrc": "23636:26:8",
															"nodeType": "YulAssignment",
															"src": "23636:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23648:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "23648:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23659:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23659:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23644:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23644:3:8"
																},
																"nativeSrc": "23644:18:8",
																"nodeType": "YulFunctionCall",
																"src": "23644:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23636:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "23636:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23683:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23683:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23694:1:8",
																				"nodeType": "YulLiteral",
																				"src": "23694:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23679:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23679:3:8"
																		},
																		"nativeSrc": "23679:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23679:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23702:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "23702:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23708:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23708:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23698:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23698:3:8"
																		},
																		"nativeSrc": "23698:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23698:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23672:6:8"
																},
																"nativeSrc": "23672:47:8",
																"nodeType": "YulFunctionCall",
																"src": "23672:47:8"
															},
															"nativeSrc": "23672:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "23672:47:8"
														},
														{
															"nativeSrc": "23728:139:8",
															"nodeType": "YulAssignment",
															"src": "23728:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23862:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "23862:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23736:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "23736:124:8"
																},
																"nativeSrc": "23736:131:8",
																"nodeType": "YulFunctionCall",
																"src": "23736:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23728:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "23728:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23455:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23606:9:8",
														"nodeType": "YulTypedName",
														"src": "23606:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23621:4:8",
														"nodeType": "YulTypedName",
														"src": "23621:4:8",
														"type": ""
													}
												],
												"src": "23455:419:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot remove the last admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient stake balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cooldown period not met for unst\")\n\n        mstore(add(memPtr, 32), \"aking\")\n\n    }\n\n    function abi_encode_t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f(memPtr) {\n\n        mstore(add(memPtr, 0), \"All tokens mined\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mining difficulty not met\")\n\n    }\n\n    function abi_encode_t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0 tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cooldown period not met for stak\")\n\n        mstore(add(memPtr, 32), \"ing\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minting exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610225575f3560e01c8063602512e11161012e5780638da5cb5b116100b6578063a9059cbb1161007a578063a9059cbb14610663578063c7b8981c14610693578063d82e39621461069d578063dd62ed3e146106cd578063f2fde38b146106fd57610225565b80638da5cb5b146105d357806395d89b41146105f15780639e447fc61461060f578063a694fc3a1461062b578063a6f9dae11461064757610225565b8063715018a6116100fd578063715018a61461054157806379cc67901461054b5780637b0a47ee146105675780637bb1ca1914610585578063817b1cd2146105b557610225565b8063602512e1146104bb5780636e99d52f146104d757806370480275146104f557806370a082311461051157610225565b806324d7806c116101b157806332cb6b0c1161018057806332cb6b0c14610417578063331e03a81461043557806342966c68146104655780634d474898146104815780635556db651461049d57610225565b806324d7806c1461038f5780632e17de78146103bf578063313ce567146103db57806331ae450b146103f957610225565b806316934fc4116101f857806316934fc4146102d75780631785f53c1461030757806318160ddd1461032357806319cae4621461034157806323b872dd1461035f57610225565b806306fdde03146102295780630700037d14610247578063095ea7b31461027757806314bfd6d0146102a7575b5f80fd5b610231610719565b60405161023e9190612097565b60405180910390f35b610261600480360381019061025c9190612115565b6107a9565b60405161026e9190612158565b60405180910390f35b610291600480360381019061028c919061219b565b6107be565b60405161029e91906121f3565b60405180910390f35b6102c160048036038101906102bc919061220c565b6107e0565b6040516102ce9190612246565b60405180910390f35b6102f160048036038101906102ec9190612115565b61081b565b6040516102fe9190612158565b60405180910390f35b610321600480360381019061031c9190612115565b610830565b005b61032b610ada565b6040516103389190612158565b60405180910390f35b610349610ae3565b6040516103569190612158565b60405180910390f35b6103796004803603810190610374919061225f565b610ae9565b60405161038691906121f3565b60405180910390f35b6103a960048036038101906103a49190612115565b610b17565b6040516103b691906121f3565b60405180910390f35b6103d960048036038101906103d4919061220c565b610b34565b005b6103e3610cfc565b6040516103f091906122ca565b60405180910390f35b610401610d04565b60405161040e919061239a565b60405180910390f35b61041f610d8f565b60405161042c9190612158565b60405180910390f35b61044f600480360381019061044a9190612115565b610d9e565b60405161045c9190612158565b60405180910390f35b61047f600480360381019061047a919061220c565b610db3565b005b61049b6004803603810190610496919061220c565b610dc7565b005b6104a5610ed4565b6040516104b29190612158565b60405180910390f35b6104d560048036038101906104d0919061220c565b610eda565b005b6104df610f6d565b6040516104ec9190612158565b60405180910390f35b61050f600480360381019061050a9190612115565b610f74565b005b61052b60048036038101906105269190612115565b6110be565b6040516105389190612158565b60405180910390f35b610549611103565b005b6105656004803603810190610560919061219b565b611116565b005b61056f611136565b60405161057c9190612158565b60405180910390f35b61059f600480360381019061059a9190612115565b61113c565b6040516105ac9190612158565b60405180910390f35b6105bd611151565b6040516105ca9190612158565b60405180910390f35b6105db611157565b6040516105e89190612246565b60405180910390f35b6105f961117f565b6040516106069190612097565b60405180910390f35b6106296004803603810190610624919061220c565b61120f565b005b6106456004803603810190610640919061220c565b6112a2565b005b610661600480360381019061065c9190612115565b61142c565b005b61067d6004803603810190610678919061219b565b6114ae565b60405161068a91906121f3565b60405180910390f35b61069b6114d0565b005b6106b760048036038101906106b29190612115565b61156d565b6040516106c49190612158565b60405180910390f35b6106e760048036038101906106e291906123ba565b6116e8565b6040516106f49190612158565b60405180910390f35b61071760048036038101906107129190612115565b61176a565b005b60606003805461072890612425565b80601f016020809104026020016040519081016040528092919081815260200182805461075490612425565b801561079f5780601f106107765761010080835404028352916020019161079f565b820191905f5260205f20905b81548152906001019060200180831161078257829003601f168201915b5050505050905090565b6009602052805f5260405f205f915090505481565b5f806107c86117ee565b90506107d58185856117f5565b600191505092915050565b600e81815481106107ef575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6008602052805f5260405f205f915090505481565b610838611807565b600f5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166108c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b89061249f565b60405180910390fd5b6001600e8054905011610909576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090090612507565b60405180910390fd5b5f600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f5b600e80549050811015610ad6578173ffffffffffffffffffffffffffffffffffffffff16600e828154811061099757610996612525565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ac957600e6001600e805490506109ee919061257f565b815481106109ff576109fe612525565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e8281548110610a3b57610a3a612525565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600e805480610a9257610a916125b2565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610ad6565b808060010191505061095f565b5050565b5f600254905090565b60075481565b5f80610af36117ee565b9050610b0085828561188e565b610b0b858585611920565b60019150509392505050565b600f602052805f5260405f205f915054906101000a900460ff1681565b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90612629565b60405180910390fd5b62015180600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610c009190612647565b421015610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c39906126ea565b60405180910390fd5b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c8e919061257f565b9250508190555080600c5f828254610ca6919061257f565b92505081905550610cb73382611a10565b42600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f6012905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610d8557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d3c575b5050505050905090565b6a295be96e6406697200000081565b600b602052805f5260405f205f915090505481565b610dc4610dbe6117ee565b82611a8f565b50565b606460506a295be96e64066972000000610de19190612708565b610deb9190612776565b60065410610e2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e25906127f0565b60405180910390fd5b5f3382604051602001610e42929190612873565b604051602081830303815290604052805190602001209050600754815f1c10610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e97906128e8565b60405180910390fd5b5f6802b5e3af16b18800009050610eb73382611b0e565b8060065f828254610ec89190612647565b92505081905550505050565b60065481565b600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a9061249f565b60405180910390fd5b8060078190555050565b6201518081565b610f7c611807565b600f5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611006576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffd90612950565b60405180910390fd5b6001600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600e81908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61110b611807565b6111145f611b7c565b565b611128826111226117ee565b8361188e565b6111328282611a8f565b5050565b600d5481565b600a602052805f5260405f205f915090505481565b600c5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461118e90612425565b80601f01602080910402602001604051908101604052809291908181526020018280546111ba90612425565b80156112055780601f106111dc57610100808354040283529160200191611205565b820191905f5260205f20905b8154815290600101906020018083116111e857829003601f168201915b5050505050905090565b600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128f9061249f565b60405180910390fd5b80600d8190555050565b5f81116112e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112db906129b8565b60405180910390fd5b62015180600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546113309190612647565b421015611372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136990612a46565b60405180910390fd5b61137c3382611a8f565b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546113c89190612647565b9250508190555080600c5f8282546113e09190612647565b9250508190555042600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b611434611807565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149990612aae565b60405180910390fd5b6114ab81611b7c565b50565b5f806114b86117ee565b90506114c5818585611920565b600191505092915050565b5f6114da3361156d565b90505f811161151e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151590612b16565b60405180910390fd5b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061156a3382611a10565b50565b5f80612710600d5460085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546115bd9190612708565b6115c79190612776565b90505f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811115611696575f814261161f919061257f565b905064496cebb80081600d5460085f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546116739190612708565b61167d9190612708565b6116879190612776565b836116929190612647565b9250505b60095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054826116df9190612647565b92505050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611772611807565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117e2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117d99190612246565b60405180910390fd5b6117eb81611b7c565b50565b5f33905090565b6118028383836001611c3f565b505050565b61180f6117ee565b73ffffffffffffffffffffffffffffffffffffffff1661182d611157565b73ffffffffffffffffffffffffffffffffffffffff161461188c576118506117ee565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016118839190612246565b60405180910390fd5b565b5f61189984846116e8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461191a578181101561190b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161190293929190612b34565b60405180910390fd5b61191984848484035f611c3f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611990575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119879190612246565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a00575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119f79190612246565b60405180910390fd5b611a0b838383611e0e565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a80575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611a779190612246565b60405180910390fd5b611a8b5f8383611e0e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611aff575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611af69190612246565b60405180910390fd5b611b0a825f83611e0e565b5050565b6a295be96e6406697200000081611b23610ada565b611b2d9190612647565b1115611b6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6590612bb3565b60405180910390fd5b611b788282611a10565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611caf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611ca69190612246565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d1f575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d169190612246565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611e08578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611dff9190612158565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e5e578060025f828254611e529190612647565b92505081905550611f2c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611ee7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ede93929190612b34565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f73578060025f8282540392505081905550611fbd565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161201a9190612158565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61206982612027565b6120738185612031565b9350612083818560208601612041565b61208c8161204f565b840191505092915050565b5f6020820190508181035f8301526120af818461205f565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6120e4826120bb565b9050919050565b6120f4816120da565b81146120fe575f80fd5b50565b5f8135905061210f816120eb565b92915050565b5f6020828403121561212a576121296120b7565b5b5f61213784828501612101565b91505092915050565b5f819050919050565b61215281612140565b82525050565b5f60208201905061216b5f830184612149565b92915050565b61217a81612140565b8114612184575f80fd5b50565b5f8135905061219581612171565b92915050565b5f80604083850312156121b1576121b06120b7565b5b5f6121be85828601612101565b92505060206121cf85828601612187565b9150509250929050565b5f8115159050919050565b6121ed816121d9565b82525050565b5f6020820190506122065f8301846121e4565b92915050565b5f60208284031215612221576122206120b7565b5b5f61222e84828501612187565b91505092915050565b612240816120da565b82525050565b5f6020820190506122595f830184612237565b92915050565b5f805f60608486031215612276576122756120b7565b5b5f61228386828701612101565b935050602061229486828701612101565b92505060406122a586828701612187565b9150509250925092565b5f60ff82169050919050565b6122c4816122af565b82525050565b5f6020820190506122dd5f8301846122bb565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612315816120da565b82525050565b5f612326838361230c565b60208301905092915050565b5f602082019050919050565b5f612348826122e3565b61235281856122ed565b935061235d836122fd565b805f5b8381101561238d578151612374888261231b565b975061237f83612332565b925050600181019050612360565b5085935050505092915050565b5f6020820190508181035f8301526123b2818461233e565b905092915050565b5f80604083850312156123d0576123cf6120b7565b5b5f6123dd85828601612101565b92505060206123ee85828601612101565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061243c57607f821691505b60208210810361244f5761244e6123f8565b5b50919050565b7f4e6f7420616e2061646d696e00000000000000000000000000000000000000005f82015250565b5f612489600c83612031565b915061249482612455565b602082019050919050565b5f6020820190508181035f8301526124b68161247d565b9050919050565b7f43616e6e6f742072656d6f766520746865206c6173742061646d696e000000005f82015250565b5f6124f1601c83612031565b91506124fc826124bd565b602082019050919050565b5f6020820190508181035f83015261251e816124e5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61258982612140565b915061259483612140565b92508282039050818111156125ac576125ab612552565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f496e73756666696369656e74207374616b652062616c616e63650000000000005f82015250565b5f612613601a83612031565b915061261e826125df565b602082019050919050565b5f6020820190508181035f83015261264081612607565b9050919050565b5f61265182612140565b915061265c83612140565b925082820190508082111561267457612673612552565b5b92915050565b7f436f6f6c646f776e20706572696f64206e6f74206d657420666f7220756e73745f8201527f616b696e67000000000000000000000000000000000000000000000000000000602082015250565b5f6126d4602583612031565b91506126df8261267a565b604082019050919050565b5f6020820190508181035f830152612701816126c8565b9050919050565b5f61271282612140565b915061271d83612140565b925082820261272b81612140565b9150828204841483151761274257612741612552565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61278082612140565b915061278b83612140565b92508261279b5761279a612749565b5b828204905092915050565b7f416c6c20746f6b656e73206d696e6564000000000000000000000000000000005f82015250565b5f6127da601083612031565b91506127e5826127a6565b602082019050919050565b5f6020820190508181035f830152612807816127ce565b9050919050565b5f8160601b9050919050565b5f6128248261280e565b9050919050565b5f6128358261281a565b9050919050565b61284d612848826120da565b61282b565b82525050565b5f819050919050565b61286d61286882612140565b612853565b82525050565b5f61287e828561283c565b60148201915061288e828461285c565b6020820191508190509392505050565b7f4d696e696e6720646966666963756c7479206e6f74206d6574000000000000005f82015250565b5f6128d2601983612031565b91506128dd8261289e565b602082019050919050565b5f6020820190508181035f8301526128ff816128c6565b9050919050565b7f416c726561647920616e2061646d696e000000000000000000000000000000005f82015250565b5f61293a601083612031565b915061294582612906565b602082019050919050565b5f6020820190508181035f8301526129678161292e565b9050919050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f6129a2601583612031565b91506129ad8261296e565b602082019050919050565b5f6020820190508181035f8301526129cf81612996565b9050919050565b7f436f6f6c646f776e20706572696f64206e6f74206d657420666f72207374616b5f8201527f696e670000000000000000000000000000000000000000000000000000000000602082015250565b5f612a30602383612031565b9150612a3b826129d6565b604082019050919050565b5f6020820190508181035f830152612a5d81612a24565b9050919050565b7f496e76616c6964206e6577206f776e65720000000000000000000000000000005f82015250565b5f612a98601183612031565b9150612aa382612a64565b602082019050919050565b5f6020820190508181035f830152612ac581612a8c565b9050919050565b7f4e6f207265776172647320746f207769746864726177000000000000000000005f82015250565b5f612b00601683612031565b9150612b0b82612acc565b602082019050919050565b5f6020820190508181035f830152612b2d81612af4565b9050919050565b5f606082019050612b475f830186612237565b612b546020830185612149565b612b616040830184612149565b949350505050565b7f4d696e74696e672065786365656473206d617820737570706c790000000000005f82015250565b5f612b9d601a83612031565b9150612ba882612b69565b602082019050919050565b5f6020820190508181035f830152612bca81612b91565b905091905056fea2646970667358221220c45a95eeaa528f9b74e29ce055f60c1132fb7d1de34ee80423786713a28ead6064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x602512E1 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6FD JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x647 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x7BB1CA19 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x5B5 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x602512E1 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x6E99D52F EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x511 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x331E03A8 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x4D474898 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x5556DB65 EQ PUSH2 0x49D JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x24D7806C EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x31AE450B EQ PUSH2 0x3F9 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x19CAE462 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x35F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x14BFD6D0 EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x231 PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH2 0xADA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x225F JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E3 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41F PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A5 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DF PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0xF74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x549 PUSH2 0x1103 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x565 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x1116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x56F PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DB PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F9 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x629 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x645 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x67D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68A SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69B PUSH2 0x14D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x23BA JUMP JUMPDEST PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x717 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x176A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x728 SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x754 SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x776 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x782 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7C8 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH2 0x7D5 DUP2 DUP6 DUP6 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7EF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x838 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0xF PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B8 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xE DUP1 SLOAD SWAP1 POP GT PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x900 SWAP1 PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 JUMPDEST PUSH1 0xE DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xAD6 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x2525 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC9 JUMPI PUSH1 0xE PUSH1 0x1 PUSH1 0xE DUP1 SLOAD SWAP1 POP PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9FF JUMPI PUSH2 0x9FE PUSH2 0x2525 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA3B JUMPI PUSH2 0xA3A PUSH2 0x2525 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP1 SLOAD DUP1 PUSH2 0xA92 JUMPI PUSH2 0xA91 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0xAD6 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x95F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAF3 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH2 0xB00 DUP6 DUP3 DUP6 PUSH2 0x188E JUMP JUMPDEST PUSH2 0xB0B DUP6 DUP6 DUP6 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAB SWAP1 PUSH2 0x2629 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCB7 CALLER DUP3 PUSH2 0x1A10 JUMP JUMPDEST TIMESTAMP PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD85 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD3C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC4 PUSH2 0xDBE PUSH2 0x17EE JUMP JUMPDEST DUP3 PUSH2 0x1A8F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x64 PUSH1 0x50 PUSH11 0x295BE96E64066972000000 PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH1 0x6 SLOAD LT PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE25 SWAP1 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE42 SWAP3 SWAP2 SWAP1 PUSH2 0x2873 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH0 SHR LT PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE97 SWAP1 PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH9 0x2B5E3AF16B1880000 SWAP1 POP PUSH2 0xEB7 CALLER DUP3 PUSH2 0x1B0E JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0xF7C PUSH2 0x1807 JUMP JUMPDEST PUSH1 0xF PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP1 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110B PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x1114 PUSH0 PUSH2 0x1B7C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1128 DUP3 PUSH2 0x1122 PUSH2 0x17EE JUMP JUMPDEST DUP4 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x1132 DUP3 DUP3 PUSH2 0x1A8F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x118E SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11BA SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1205 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1205 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128F SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x12E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DB SWAP1 PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1330 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1369 SWAP1 PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137C CALLER DUP3 PUSH2 0x1A8F JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13E0 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1434 PUSH2 0x1807 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1499 SWAP1 PUSH2 0x2AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14AB DUP2 PUSH2 0x1B7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14B8 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH2 0x14C5 DUP2 DUP6 DUP6 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DA CALLER PUSH2 0x156D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1515 SWAP1 PUSH2 0x2B16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x156A CALLER DUP3 PUSH2 0x1A10 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH1 0xD SLOAD PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x15BD SWAP2 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0x15C7 SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1696 JUMPI PUSH0 DUP2 TIMESTAMP PUSH2 0x161F SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH5 0x496CEBB800 DUP2 PUSH1 0xD SLOAD PUSH1 0x8 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1673 SWAP2 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0x167D SWAP2 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0x1687 SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST DUP4 PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0x16DF SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1772 PUSH2 0x1807 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17EB DUP2 PUSH2 0x1B7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1802 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x180F PUSH2 0x17EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x182D PUSH2 0x1157 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x188C JUMPI PUSH2 0x1850 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1883 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1899 DUP5 DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x191A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x190B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1902 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1919 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1C3F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1990 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1987 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A00 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F7 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0B DUP4 DUP4 DUP4 PUSH2 0x1E0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A80 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A77 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A8B PUSH0 DUP4 DUP4 PUSH2 0x1E0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AFF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF6 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B0A DUP3 PUSH0 DUP4 PUSH2 0x1E0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 DUP2 PUSH2 0x1B23 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x1B2D SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST GT ISZERO PUSH2 0x1B6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B65 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B78 DUP3 DUP3 PUSH2 0x1A10 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CAF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA6 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D1F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D16 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1E08 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DFF SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E5E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E52 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F2C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1EE7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F73 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FBD JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x201A SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2069 DUP3 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x2073 DUP2 DUP6 PUSH2 0x2031 JUMP JUMPDEST SWAP4 POP PUSH2 0x2083 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x208C DUP2 PUSH2 0x204F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20AF DUP2 DUP5 PUSH2 0x205F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20E4 DUP3 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F4 DUP2 PUSH2 0x20DA JUMP JUMPDEST DUP2 EQ PUSH2 0x20FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210F DUP2 PUSH2 0x20EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2137 DUP5 DUP3 DUP6 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2152 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216B PUSH0 DUP4 ADD DUP5 PUSH2 0x2149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x217A DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP2 EQ PUSH2 0x2184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2195 DUP2 PUSH2 0x2171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21BE DUP6 DUP3 DUP7 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21CF DUP6 DUP3 DUP7 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21ED DUP2 PUSH2 0x21D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2206 PUSH0 DUP4 ADD DUP5 PUSH2 0x21E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2221 JUMPI PUSH2 0x2220 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222E DUP5 DUP3 DUP6 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2240 DUP2 PUSH2 0x20DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2259 PUSH0 DUP4 ADD DUP5 PUSH2 0x2237 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2276 JUMPI PUSH2 0x2275 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2283 DUP7 DUP3 DUP8 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2294 DUP7 DUP3 DUP8 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22A5 DUP7 DUP3 DUP8 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C4 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22DD PUSH0 DUP4 ADD DUP5 PUSH2 0x22BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2315 DUP2 PUSH2 0x20DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2326 DUP4 DUP4 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2348 DUP3 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x2352 DUP2 DUP6 PUSH2 0x22ED JUMP JUMPDEST SWAP4 POP PUSH2 0x235D DUP4 PUSH2 0x22FD JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x238D JUMPI DUP2 MLOAD PUSH2 0x2374 DUP9 DUP3 PUSH2 0x231B JUMP JUMPDEST SWAP8 POP PUSH2 0x237F DUP4 PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2360 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B2 DUP2 DUP5 PUSH2 0x233E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23D0 JUMPI PUSH2 0x23CF PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23DD DUP6 DUP3 DUP7 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23EE DUP6 DUP3 DUP7 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x243C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x244F JUMPI PUSH2 0x244E PUSH2 0x23F8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2489 PUSH1 0xC DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2494 DUP3 PUSH2 0x2455 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24B6 DUP2 PUSH2 0x247D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742072656D6F766520746865206C6173742061646D696E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24F1 PUSH1 0x1C DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FC DUP3 PUSH2 0x24BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x251E DUP2 PUSH2 0x24E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2589 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH2 0x2594 DUP4 PUSH2 0x2140 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25AC JUMPI PUSH2 0x25AB PUSH2 0x2552 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E74207374616B652062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2613 PUSH1 0x1A DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x261E DUP3 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2640 DUP2 PUSH2 0x2607 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2651 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH2 0x265C DUP4 PUSH2 0x2140 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2673 PUSH2 0x2552 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E20706572696F64206E6F74206D657420666F7220756E7374 PUSH0 DUP3 ADD MSTORE PUSH32 0x616B696E67000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26D4 PUSH1 0x25 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x26DF DUP3 PUSH2 0x267A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2701 DUP2 PUSH2 0x26C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2712 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH2 0x271D DUP4 PUSH2 0x2140 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x272B DUP2 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2742 JUMPI PUSH2 0x2741 PUSH2 0x2552 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2780 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH2 0x278B DUP4 PUSH2 0x2140 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x279B JUMPI PUSH2 0x279A PUSH2 0x2749 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C20746F6B656E73206D696E656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27DA PUSH1 0x10 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E5 DUP3 PUSH2 0x27A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2807 DUP2 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2824 DUP3 PUSH2 0x280E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2835 DUP3 PUSH2 0x281A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284D PUSH2 0x2848 DUP3 PUSH2 0x20DA JUMP JUMPDEST PUSH2 0x282B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x286D PUSH2 0x2868 DUP3 PUSH2 0x2140 JUMP JUMPDEST PUSH2 0x2853 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x287E DUP3 DUP6 PUSH2 0x283C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x288E DUP3 DUP5 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D696E696E6720646966666963756C7479206E6F74206D657400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28D2 PUSH1 0x19 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x28DD DUP3 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28FF DUP2 PUSH2 0x28C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920616E2061646D696E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x293A PUSH1 0x10 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2945 DUP3 PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2967 DUP2 PUSH2 0x292E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29A2 PUSH1 0x15 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x29AD DUP3 PUSH2 0x296E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29CF DUP2 PUSH2 0x2996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E20706572696F64206E6F74206D657420666F72207374616B PUSH0 DUP3 ADD MSTORE PUSH32 0x696E670000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A30 PUSH1 0x23 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3B DUP3 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A5D DUP2 PUSH2 0x2A24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206E6577206F776E6572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A98 PUSH1 0x11 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA3 DUP3 PUSH2 0x2A64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AC5 DUP2 PUSH2 0x2A8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B00 PUSH1 0x16 DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0B DUP3 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B2D DUP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B47 PUSH0 DUP4 ADD DUP7 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0x2B54 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x2B61 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2149 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D696E74696E672065786365656473206D617820737570706C79000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9D PUSH1 0x1A DUP4 PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA8 DUP3 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCA DUP2 PUSH2 0x2B91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 GAS SWAP6 0xEE 0xAA MSTORE DUP16 SWAP12 PUSH21 0xE29CE055F60C1132FB7D1DE34EE80423786713A28E 0xAD PUSH1 0x64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "250:4644:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:42:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;790:23:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;451:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3915:478;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;408:34:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;820:39:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2430:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4799:92:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;315:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;603:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;618:87:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1555:408:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;376:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4401:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;733:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3721:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;693:31:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;548:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;660:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4513:104:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2002:387;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4625:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2892:223:7;;;:::i;:::-;;3161:528;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;499:42:7:-;;;;;;;;;;;;;;;;;:::o;4293:186:2:-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;790:23:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;451:41::-;;;;;;;;;;;;;;;;;:::o;3915:478::-;1531:13:0;:11;:13::i;:::-;3995:7:7::1;:22;4003:13;3995:22;;;;;;;;;;;;;;;;;;;;;;;;;3987:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;4069:1;4053:6;:13;;;;:17;4045:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4141:5;4116:7;:22;4124:13;4116:22;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;4162:9;4157:229;4181:6;:13;;;;4177:1;:17;4157:229;;;4233:13;4220:26;;:6;4227:1;4220:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:26;;::::0;4216:159:::1;;4279:6;4302:1;4286:6;:13;;;;:17;;;;:::i;:::-;4279:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4267:6;4274:1;4267:9;;;;;;;;:::i;:::-;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;4323:6;:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;4354:5;;4216:159;4196:3;;;;;;;4157:229;;;;3915:478:::0;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;408:34:7:-;;;;:::o;5039:244:2:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;820:39:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;2430:414::-;2511:6;2489;:18;2496:10;2489:18;;;;;;;;;;;;;;;;:28;;2481:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;775:6;2586:13;:25;2600:10;2586:25;;;;;;;;;;;;;;;;:43;;;;:::i;:::-;2567:15;:62;;2559:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2706:6;2684;:18;2691:10;2684:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;2738:6;2723:11;;:21;;;;;;;:::i;:::-;;;;;;;;2755:25;2761:10;2773:6;2755:5;:25::i;:::-;2821:15;2791;:27;2807:10;2791:27;;;;;;;;;;;;;;;:45;;;;2430:414;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;4799:92:7:-;4841:16;4877:6;4870:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4799:92;:::o;315:54::-;352:17;315:54;:::o;603:50::-;;;;;;;;;;;;;;;;;:::o;618:87:4:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1555:408:7:-;1641:3;1636:2;352:17;1623:15;;;;:::i;:::-;:21;;;;:::i;:::-;1610:10;;:34;1602:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1678:12;1720:10;1732:5;1703:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1693:46;;;;;;1678:61;;1774:10;;1766:4;1758:13;;:26;1750:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1827:14;1844:11;1827:28;;1887:37;1905:10;1917:6;1887:17;:37::i;:::-;1949:6;1935:10;;:20;;;;;;;:::i;:::-;;;;;;;;1591:372;;1555:408;:::o;376:25::-;;;;:::o;4401:104::-;908:7;:19;916:10;908:19;;;;;;;;;;;;;;;;;;;;;;;;;900:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;4486:11:::1;4473:10;:24;;;;4401:104:::0;:::o;733:48::-;775:6;733:48;:::o;3721:186::-;1531:13:0;:11;:13::i;:::-;3794:7:7::1;:17;3802:8;3794:17;;;;;;;;;;;;;;;;;;;;;;;;;3793:18;3785:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;3863:4;3843:7;:17;3851:8;3843:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;3878:6;3890:8;3878:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3721:186:::0;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;693:31:7:-;;;;:::o;548:48::-;;;;;;;;;;;;;;;;;:::o;660:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;4513:104:7:-;908:7;:19;916:10;908:19;;;;;;;;;;;;;;;;;;;;;;;;;900:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;4598:11:::1;4585:10;:24;;;;4513:104:::0;:::o;2002:387::-;2068:1;2059:6;:10;2051:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;775:6;2133:15;:27;2149:10;2133:27;;;;;;;;;;;;;;;;:45;;;;:::i;:::-;2114:15;:64;;2106:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2231:25;2237:10;2249:6;2231:5;:25::i;:::-;2289:6;2267;:18;2274:10;2267:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;2321:6;2306:11;;:21;;;;;;;:::i;:::-;;;;;;;;2366:15;2338:13;:25;2352:10;2338:25;;;;;;;;;;;;;;;:43;;;;2002:387;:::o;4625:166::-;1531:13:0;:11;:13::i;:::-;4720:1:7::1;4700:22;;:8;:22;;::::0;4692:52:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4755:28;4774:8;4755:18;:28::i;:::-;4625:166:::0;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;2892:223:7:-;2937:14;2954:27;2970:10;2954:15;:27::i;:::-;2937:44;;3009:1;3000:6;:10;2992:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3070:1;3048:7;:19;3056:10;3048:19;;;;;;;;;;;;;;;:23;;;;3082:25;3088:10;3100:6;3082:5;:25::i;:::-;2926:189;2892:223::o;3161:528::-;3223:7;3243:25;3301:5;3288:10;;3271:6;:14;3278:6;3271:14;;;;;;;;;;;;;;;;:27;;;;:::i;:::-;:35;;;;:::i;:::-;3243:63;;3391:16;3410:13;:21;3424:6;3410:21;;;;;;;;;;;;;;;;3391:40;;3457:1;3446:8;:12;3442:185;;;3475:16;3512:8;3494:15;:26;;;;:::i;:::-;3475:45;;3598:16;3586:8;3573:10;;3556:6;:14;3563:6;3556:14;;;;;;;;;;;;;;;;:27;;;;:::i;:::-;:38;;;;:::i;:::-;:59;;;;:::i;:::-;3535:80;;;;;:::i;:::-;;;3460:167;3442:185;3666:7;:15;3674:6;3666:15;;;;;;;;;;;;;;;;3646:17;:35;;;;:::i;:::-;3639:42;;;;3161:528;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10663:477:2:-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;1323:196:7:-;352:17;1427:6;1411:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;;1403:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1489:22;1495:7;1504:6;1489:5;:22::i;:::-;1323:196;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:329::-;2135:6;2184:2;2172:9;2163:7;2159:23;2155:32;2152:119;;;2190:79;;:::i;:::-;2152:119;2310:1;2335:53;2380:7;2371:6;2360:9;2356:22;2335:53;:::i;:::-;2325:63;;2281:117;2076:329;;;;:::o;2411:77::-;2448:7;2477:5;2466:16;;2411:77;;;:::o;2494:118::-;2581:24;2599:5;2581:24;:::i;:::-;2576:3;2569:37;2494:118;;:::o;2618:222::-;2711:4;2749:2;2738:9;2734:18;2726:26;;2762:71;2830:1;2819:9;2815:17;2806:6;2762:71;:::i;:::-;2618:222;;;;:::o;2846:122::-;2919:24;2937:5;2919:24;:::i;:::-;2912:5;2909:35;2899:63;;2958:1;2955;2948:12;2899:63;2846:122;:::o;2974:139::-;3020:5;3058:6;3045:20;3036:29;;3074:33;3101:5;3074:33;:::i;:::-;2974:139;;;;:::o;3119:474::-;3187:6;3195;3244:2;3232:9;3223:7;3219:23;3215:32;3212:119;;;3250:79;;:::i;:::-;3212:119;3370:1;3395:53;3440:7;3431:6;3420:9;3416:22;3395:53;:::i;:::-;3385:63;;3341:117;3497:2;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3468:118;3119:474;;;;;:::o;3599:90::-;3633:7;3676:5;3669:13;3662:21;3651:32;;3599:90;;;:::o;3695:109::-;3776:21;3791:5;3776:21;:::i;:::-;3771:3;3764:34;3695:109;;:::o;3810:210::-;3897:4;3935:2;3924:9;3920:18;3912:26;;3948:65;4010:1;3999:9;3995:17;3986:6;3948:65;:::i;:::-;3810:210;;;;:::o;4026:329::-;4085:6;4134:2;4122:9;4113:7;4109:23;4105:32;4102:119;;;4140:79;;:::i;:::-;4102:119;4260:1;4285:53;4330:7;4321:6;4310:9;4306:22;4285:53;:::i;:::-;4275:63;;4231:117;4026:329;;;;:::o;4361:118::-;4448:24;4466:5;4448:24;:::i;:::-;4443:3;4436:37;4361:118;;:::o;4485:222::-;4578:4;4616:2;4605:9;4601:18;4593:26;;4629:71;4697:1;4686:9;4682:17;4673:6;4629:71;:::i;:::-;4485:222;;;;:::o;4713:619::-;4790:6;4798;4806;4855:2;4843:9;4834:7;4830:23;4826:32;4823:119;;;4861:79;;:::i;:::-;4823:119;4981:1;5006:53;5051:7;5042:6;5031:9;5027:22;5006:53;:::i;:::-;4996:63;;4952:117;5108:2;5134:53;5179:7;5170:6;5159:9;5155:22;5134:53;:::i;:::-;5124:63;;5079:118;5236:2;5262:53;5307:7;5298:6;5287:9;5283:22;5262:53;:::i;:::-;5252:63;;5207:118;4713:619;;;;;:::o;5338:86::-;5373:7;5413:4;5406:5;5402:16;5391:27;;5338:86;;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:214::-;5637:4;5675:2;5664:9;5660:18;5652:26;;5688:67;5752:1;5741:9;5737:17;5728:6;5688:67;:::i;:::-;5548:214;;;;:::o;5768:114::-;5835:6;5869:5;5863:12;5853:22;;5768:114;;;:::o;5888:184::-;5987:11;6021:6;6016:3;6009:19;6061:4;6056:3;6052:14;6037:29;;5888:184;;;;:::o;6078:132::-;6145:4;6168:3;6160:11;;6198:4;6193:3;6189:14;6181:22;;6078:132;;;:::o;6216:108::-;6293:24;6311:5;6293:24;:::i;:::-;6288:3;6281:37;6216:108;;:::o;6330:179::-;6399:10;6420:46;6462:3;6454:6;6420:46;:::i;:::-;6498:4;6493:3;6489:14;6475:28;;6330:179;;;;:::o;6515:113::-;6585:4;6617;6612:3;6608:14;6600:22;;6515:113;;;:::o;6664:732::-;6783:3;6812:54;6860:5;6812:54;:::i;:::-;6882:86;6961:6;6956:3;6882:86;:::i;:::-;6875:93;;6992:56;7042:5;6992:56;:::i;:::-;7071:7;7102:1;7087:284;7112:6;7109:1;7106:13;7087:284;;;7188:6;7182:13;7215:63;7274:3;7259:13;7215:63;:::i;:::-;7208:70;;7301:60;7354:6;7301:60;:::i;:::-;7291:70;;7147:224;7134:1;7131;7127:9;7122:14;;7087:284;;;7091:14;7387:3;7380:10;;6788:608;;;6664:732;;;;:::o;7402:373::-;7545:4;7583:2;7572:9;7568:18;7560:26;;7632:9;7626:4;7622:20;7618:1;7607:9;7603:17;7596:47;7660:108;7763:4;7754:6;7660:108;:::i;:::-;7652:116;;7402:373;;;;:::o;7781:474::-;7849:6;7857;7906:2;7894:9;7885:7;7881:23;7877:32;7874:119;;;7912:79;;:::i;:::-;7874:119;8032:1;8057:53;8102:7;8093:6;8082:9;8078:22;8057:53;:::i;:::-;8047:63;;8003:117;8159:2;8185:53;8230:7;8221:6;8210:9;8206:22;8185:53;:::i;:::-;8175:63;;8130:118;7781:474;;;;;:::o;8261:180::-;8309:77;8306:1;8299:88;8406:4;8403:1;8396:15;8430:4;8427:1;8420:15;8447:320;8491:6;8528:1;8522:4;8518:12;8508:22;;8575:1;8569:4;8565:12;8596:18;8586:81;;8652:4;8644:6;8640:17;8630:27;;8586:81;8714:2;8706:6;8703:14;8683:18;8680:38;8677:84;;8733:18;;:::i;:::-;8677:84;8498:269;8447:320;;;:::o;8773:162::-;8913:14;8909:1;8901:6;8897:14;8890:38;8773:162;:::o;8941:366::-;9083:3;9104:67;9168:2;9163:3;9104:67;:::i;:::-;9097:74;;9180:93;9269:3;9180:93;:::i;:::-;9298:2;9293:3;9289:12;9282:19;;8941:366;;;:::o;9313:419::-;9479:4;9517:2;9506:9;9502:18;9494:26;;9566:9;9560:4;9556:20;9552:1;9541:9;9537:17;9530:47;9594:131;9720:4;9594:131;:::i;:::-;9586:139;;9313:419;;;:::o;9738:178::-;9878:30;9874:1;9866:6;9862:14;9855:54;9738:178;:::o;9922:366::-;10064:3;10085:67;10149:2;10144:3;10085:67;:::i;:::-;10078:74;;10161:93;10250:3;10161:93;:::i;:::-;10279:2;10274:3;10270:12;10263:19;;9922:366;;;:::o;10294:419::-;10460:4;10498:2;10487:9;10483:18;10475:26;;10547:9;10541:4;10537:20;10533:1;10522:9;10518:17;10511:47;10575:131;10701:4;10575:131;:::i;:::-;10567:139;;10294:419;;;:::o;10719:180::-;10767:77;10764:1;10757:88;10864:4;10861:1;10854:15;10888:4;10885:1;10878:15;10905:180;10953:77;10950:1;10943:88;11050:4;11047:1;11040:15;11074:4;11071:1;11064:15;11091:194;11131:4;11151:20;11169:1;11151:20;:::i;:::-;11146:25;;11185:20;11203:1;11185:20;:::i;:::-;11180:25;;11229:1;11226;11222:9;11214:17;;11253:1;11247:4;11244:11;11241:37;;;11258:18;;:::i;:::-;11241:37;11091:194;;;;:::o;11291:180::-;11339:77;11336:1;11329:88;11436:4;11433:1;11426:15;11460:4;11457:1;11450:15;11477:176;11617:28;11613:1;11605:6;11601:14;11594:52;11477:176;:::o;11659:366::-;11801:3;11822:67;11886:2;11881:3;11822:67;:::i;:::-;11815:74;;11898:93;11987:3;11898:93;:::i;:::-;12016:2;12011:3;12007:12;12000:19;;11659:366;;;:::o;12031:419::-;12197:4;12235:2;12224:9;12220:18;12212:26;;12284:9;12278:4;12274:20;12270:1;12259:9;12255:17;12248:47;12312:131;12438:4;12312:131;:::i;:::-;12304:139;;12031:419;;;:::o;12456:191::-;12496:3;12515:20;12533:1;12515:20;:::i;:::-;12510:25;;12549:20;12567:1;12549:20;:::i;:::-;12544:25;;12592:1;12589;12585:9;12578:16;;12613:3;12610:1;12607:10;12604:36;;;12620:18;;:::i;:::-;12604:36;12456:191;;;;:::o;12653:224::-;12793:34;12789:1;12781:6;12777:14;12770:58;12862:7;12857:2;12849:6;12845:15;12838:32;12653:224;:::o;12883:366::-;13025:3;13046:67;13110:2;13105:3;13046:67;:::i;:::-;13039:74;;13122:93;13211:3;13122:93;:::i;:::-;13240:2;13235:3;13231:12;13224:19;;12883:366;;;:::o;13255:419::-;13421:4;13459:2;13448:9;13444:18;13436:26;;13508:9;13502:4;13498:20;13494:1;13483:9;13479:17;13472:47;13536:131;13662:4;13536:131;:::i;:::-;13528:139;;13255:419;;;:::o;13680:410::-;13720:7;13743:20;13761:1;13743:20;:::i;:::-;13738:25;;13777:20;13795:1;13777:20;:::i;:::-;13772:25;;13832:1;13829;13825:9;13854:30;13872:11;13854:30;:::i;:::-;13843:41;;14033:1;14024:7;14020:15;14017:1;14014:22;13994:1;13987:9;13967:83;13944:139;;14063:18;;:::i;:::-;13944:139;13728:362;13680:410;;;;:::o;14096:180::-;14144:77;14141:1;14134:88;14241:4;14238:1;14231:15;14265:4;14262:1;14255:15;14282:185;14322:1;14339:20;14357:1;14339:20;:::i;:::-;14334:25;;14373:20;14391:1;14373:20;:::i;:::-;14368:25;;14412:1;14402:35;;14417:18;;:::i;:::-;14402:35;14459:1;14456;14452:9;14447:14;;14282:185;;;;:::o;14473:166::-;14613:18;14609:1;14601:6;14597:14;14590:42;14473:166;:::o;14645:366::-;14787:3;14808:67;14872:2;14867:3;14808:67;:::i;:::-;14801:74;;14884:93;14973:3;14884:93;:::i;:::-;15002:2;14997:3;14993:12;14986:19;;14645:366;;;:::o;15017:419::-;15183:4;15221:2;15210:9;15206:18;15198:26;;15270:9;15264:4;15260:20;15256:1;15245:9;15241:17;15234:47;15298:131;15424:4;15298:131;:::i;:::-;15290:139;;15017:419;;;:::o;15442:94::-;15475:8;15523:5;15519:2;15515:14;15494:35;;15442:94;;;:::o;15542:::-;15581:7;15610:20;15624:5;15610:20;:::i;:::-;15599:31;;15542:94;;;:::o;15642:100::-;15681:7;15710:26;15730:5;15710:26;:::i;:::-;15699:37;;15642:100;;;:::o;15748:157::-;15853:45;15873:24;15891:5;15873:24;:::i;:::-;15853:45;:::i;:::-;15848:3;15841:58;15748:157;;:::o;15911:79::-;15950:7;15979:5;15968:16;;15911:79;;;:::o;15996:157::-;16101:45;16121:24;16139:5;16121:24;:::i;:::-;16101:45;:::i;:::-;16096:3;16089:58;15996:157;;:::o;16159:397::-;16299:3;16314:75;16385:3;16376:6;16314:75;:::i;:::-;16414:2;16409:3;16405:12;16398:19;;16427:75;16498:3;16489:6;16427:75;:::i;:::-;16527:2;16522:3;16518:12;16511:19;;16547:3;16540:10;;16159:397;;;;;:::o;16562:175::-;16702:27;16698:1;16690:6;16686:14;16679:51;16562:175;:::o;16743:366::-;16885:3;16906:67;16970:2;16965:3;16906:67;:::i;:::-;16899:74;;16982:93;17071:3;16982:93;:::i;:::-;17100:2;17095:3;17091:12;17084:19;;16743:366;;;:::o;17115:419::-;17281:4;17319:2;17308:9;17304:18;17296:26;;17368:9;17362:4;17358:20;17354:1;17343:9;17339:17;17332:47;17396:131;17522:4;17396:131;:::i;:::-;17388:139;;17115:419;;;:::o;17540:166::-;17680:18;17676:1;17668:6;17664:14;17657:42;17540:166;:::o;17712:366::-;17854:3;17875:67;17939:2;17934:3;17875:67;:::i;:::-;17868:74;;17951:93;18040:3;17951:93;:::i;:::-;18069:2;18064:3;18060:12;18053:19;;17712:366;;;:::o;18084:419::-;18250:4;18288:2;18277:9;18273:18;18265:26;;18337:9;18331:4;18327:20;18323:1;18312:9;18308:17;18301:47;18365:131;18491:4;18365:131;:::i;:::-;18357:139;;18084:419;;;:::o;18509:171::-;18649:23;18645:1;18637:6;18633:14;18626:47;18509:171;:::o;18686:366::-;18828:3;18849:67;18913:2;18908:3;18849:67;:::i;:::-;18842:74;;18925:93;19014:3;18925:93;:::i;:::-;19043:2;19038:3;19034:12;19027:19;;18686:366;;;:::o;19058:419::-;19224:4;19262:2;19251:9;19247:18;19239:26;;19311:9;19305:4;19301:20;19297:1;19286:9;19282:17;19275:47;19339:131;19465:4;19339:131;:::i;:::-;19331:139;;19058:419;;;:::o;19483:222::-;19623:34;19619:1;19611:6;19607:14;19600:58;19692:5;19687:2;19679:6;19675:15;19668:30;19483:222;:::o;19711:366::-;19853:3;19874:67;19938:2;19933:3;19874:67;:::i;:::-;19867:74;;19950:93;20039:3;19950:93;:::i;:::-;20068:2;20063:3;20059:12;20052:19;;19711:366;;;:::o;20083:419::-;20249:4;20287:2;20276:9;20272:18;20264:26;;20336:9;20330:4;20326:20;20322:1;20311:9;20307:17;20300:47;20364:131;20490:4;20364:131;:::i;:::-;20356:139;;20083:419;;;:::o;20508:167::-;20648:19;20644:1;20636:6;20632:14;20625:43;20508:167;:::o;20681:366::-;20823:3;20844:67;20908:2;20903:3;20844:67;:::i;:::-;20837:74;;20920:93;21009:3;20920:93;:::i;:::-;21038:2;21033:3;21029:12;21022:19;;20681:366;;;:::o;21053:419::-;21219:4;21257:2;21246:9;21242:18;21234:26;;21306:9;21300:4;21296:20;21292:1;21281:9;21277:17;21270:47;21334:131;21460:4;21334:131;:::i;:::-;21326:139;;21053:419;;;:::o;21478:172::-;21618:24;21614:1;21606:6;21602:14;21595:48;21478:172;:::o;21656:366::-;21798:3;21819:67;21883:2;21878:3;21819:67;:::i;:::-;21812:74;;21895:93;21984:3;21895:93;:::i;:::-;22013:2;22008:3;22004:12;21997:19;;21656:366;;;:::o;22028:419::-;22194:4;22232:2;22221:9;22217:18;22209:26;;22281:9;22275:4;22271:20;22267:1;22256:9;22252:17;22245:47;22309:131;22435:4;22309:131;:::i;:::-;22301:139;;22028:419;;;:::o;22453:442::-;22602:4;22640:2;22629:9;22625:18;22617:26;;22653:71;22721:1;22710:9;22706:17;22697:6;22653:71;:::i;:::-;22734:72;22802:2;22791:9;22787:18;22778:6;22734:72;:::i;:::-;22816;22884:2;22873:9;22869:18;22860:6;22816:72;:::i;:::-;22453:442;;;;;;:::o;22901:176::-;23041:28;23037:1;23029:6;23025:14;23018:52;22901:176;:::o;23083:366::-;23225:3;23246:67;23310:2;23305:3;23246:67;:::i;:::-;23239:74;;23322:93;23411:3;23322:93;:::i;:::-;23440:2;23435:3;23431:12;23424:19;;23083:366;;;:::o;23455:419::-;23621:4;23659:2;23648:9;23644:18;23636:26;;23708:9;23702:4;23698:20;23694:1;23683:9;23679:17;23672:47;23736:131;23862:4;23736:131;:::i;:::-;23728:139;;23455:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2254200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"COOLDOWN_PERIOD()": "393",
								"MAX_SUPPLY()": "370",
								"addAdmin(address)": "infinite",
								"admins(uint256)": "5057",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2941",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"calculateReward(address)": "infinite",
								"changeOwner(address)": "infinite",
								"decimals()": "428",
								"difficulty()": "2537",
								"getAdmins()": "infinite",
								"isAdmin(address)": "2879",
								"lastStakeTime(address)": "2913",
								"lastUnstakeTime(address)": "2869",
								"mine(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"removeAdmin(address)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardRate()": "2514",
								"rewards(address)": "2871",
								"setDifficulty(uint256)": "24800",
								"setRewardRate(uint256)": "24843",
								"stake(uint256)": "infinite",
								"stakes(address)": "2848",
								"symbol()": "infinite",
								"totalMined()": "2558",
								"totalStaked()": "2558",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unstake(uint256)": "infinite",
								"withdrawRewards()": "infinite"
							},
							"internal": {
								"_mintWithCapCheck(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 4894,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 436,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "2540BE400"
								},
								{
									"begin": 408,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 408,
									"end": 442,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 721,
									"end": 724,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 693,
									"end": 724,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 693,
									"end": 724,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 972,
									"end": 1252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "E"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "526567616C69756D20546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "52474C4D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1089,
									"end": 1101,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1124,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1116,
									"end": 1118,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 352,
									"end": 369,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "295BE96E64066972000000"
								},
								{
									"begin": 1103,
									"end": 1118,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1103,
									"end": 1118,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1118,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1118,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1103,
									"end": 1118,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1118,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1103,
									"end": 1118,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1124,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1103,
									"end": 1124,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1124,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1124,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1103,
									"end": 1124,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1124,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1103,
									"end": 1124,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1071,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1071,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1071,
									"end": 1088,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1071,
									"end": 1125,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1071,
									"end": 1125,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1186,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 1192,
									"end": 1204,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1205,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1240,
									"end": 1244,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1216,
									"end": 1223,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1224,
									"end": 1236,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1237,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1244,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 972,
									"end": 1252,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1323,
									"end": 1519,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1323,
									"end": 1519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 352,
									"end": 369,
									"name": "PUSH",
									"source": 7,
									"value": "295BE96E64066972000000"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1424,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1411,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1411,
									"end": 1422,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1411,
									"end": 1422,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1424,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1411,
									"end": 1424,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1424,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1411,
									"end": 1424,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1411,
									"end": 1433,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1433,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1411,
									"end": 1433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1433,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1411,
									"end": 1433,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1447,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1411,
									"end": 1447,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1403,
									"end": 1478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1403,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1489,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1495,
									"end": 1502,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1504,
									"end": 1510,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1489,
									"end": 1511,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1489,
									"end": 1511,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1489,
									"end": 1511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1489,
									"end": 1511,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1489,
									"end": 1511,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3196,
									"end": 3203,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3234,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3222,
									"end": 3234,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3215,
									"end": 3234,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3215,
									"end": 3234,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3144,
									"end": 3241,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7377,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6967,
									"end": 7377,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7007,
									"end": 7014,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7030,
									"end": 7050,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7048,
									"end": 7049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7030,
									"end": 7050,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7030,
									"end": 7050,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7030,
									"end": 7050,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7030,
									"end": 7050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7025,
									"end": 7050,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7025,
									"end": 7050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7084,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 7082,
									"end": 7083,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7084,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7064,
									"end": 7084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7084,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 7064,
									"end": 7084,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7059,
									"end": 7084,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7059,
									"end": 7084,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7119,
									"end": 7120,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7116,
									"end": 7117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7112,
									"end": 7121,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7141,
									"end": 7171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 7159,
									"end": 7170,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7141,
									"end": 7171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7141,
									"end": 7171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7141,
									"end": 7171,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 7141,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7171,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7171,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7320,
									"end": 7321,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7311,
									"end": 7318,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7307,
									"end": 7322,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 7304,
									"end": 7305,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7301,
									"end": 7323,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 7281,
									"end": 7282,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7274,
									"end": 7283,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7254,
									"end": 7337,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 7370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7231,
									"end": 7370,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7350,
									"end": 7368,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7350,
									"end": 7368,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 7350,
									"end": 7368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7350,
									"end": 7368,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7350,
									"end": 7368,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 7370,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7231,
									"end": 7370,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7015,
									"end": 7377,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7377,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7377,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7377,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7377,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7377,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7383,
									"end": 7563,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 7383,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7431,
									"end": 7508,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7428,
									"end": 7429,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7421,
									"end": 7509,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7528,
									"end": 7532,
									"name": "PUSH",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 7525,
									"end": 7526,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7518,
									"end": 7533,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7552,
									"end": 7556,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7549,
									"end": 7550,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7542,
									"end": 7557,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7754,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 7569,
									"end": 7754,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7609,
									"end": 7610,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7626,
									"end": 7646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7644,
									"end": 7645,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 7646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7626,
									"end": 7646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 7646,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7626,
									"end": 7646,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7621,
									"end": 7646,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7621,
									"end": 7646,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7660,
									"end": 7680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 7678,
									"end": 7679,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7660,
									"end": 7680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7660,
									"end": 7680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7660,
									"end": 7680,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 7660,
									"end": 7680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7655,
									"end": 7680,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7655,
									"end": 7680,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7699,
									"end": 7700,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7689,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 7689,
									"end": 7724,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 7704,
									"end": 7722,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7689,
									"end": 7724,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 7689,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7743,
									"end": 7744,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7739,
									"end": 7748,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 7734,
									"end": 7748,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7734,
									"end": 7748,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7754,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7754,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7754,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7754,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7760,
									"end": 7951,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 7760,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7800,
									"end": 7803,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7819,
									"end": 7839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7837,
									"end": 7838,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7819,
									"end": 7839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7819,
									"end": 7839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7819,
									"end": 7839,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7819,
									"end": 7839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7814,
									"end": 7839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7814,
									"end": 7839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7853,
									"end": 7873,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7871,
									"end": 7872,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7853,
									"end": 7873,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7853,
									"end": 7873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7853,
									"end": 7873,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7853,
									"end": 7873,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7848,
									"end": 7873,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7848,
									"end": 7873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7896,
									"end": 7897,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7893,
									"end": 7894,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7889,
									"end": 7898,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7882,
									"end": 7898,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7882,
									"end": 7898,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7917,
									"end": 7920,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7914,
									"end": 7915,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7911,
									"end": 7921,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7908,
									"end": 7944,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7908,
									"end": 7944,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 7908,
									"end": 7944,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7924,
									"end": 7942,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7924,
									"end": 7942,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 7924,
									"end": 7942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7924,
									"end": 7942,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7924,
									"end": 7942,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7908,
									"end": 7944,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 7908,
									"end": 7944,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7760,
									"end": 7951,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7760,
									"end": 7951,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7760,
									"end": 7951,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7760,
									"end": 7951,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7760,
									"end": 7951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 8126,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 7957,
									"end": 8126,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8041,
									"end": 8052,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8075,
									"end": 8081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8070,
									"end": 8073,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8063,
									"end": 8082,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8115,
									"end": 8119,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8110,
									"end": 8113,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8106,
									"end": 8120,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8120,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 8126,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 8126,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 8126,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 8126,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 8126,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8132,
									"end": 8308,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 8132,
									"end": 8308,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8272,
									"end": 8300,
									"name": "PUSH",
									"source": 8,
									"value": "4D696E74696E672065786365656473206D617820737570706C79000000000000"
								},
								{
									"begin": 8268,
									"end": 8269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8260,
									"end": 8266,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8270,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8249,
									"end": 8301,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8132,
									"end": 8308,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8132,
									"end": 8308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8314,
									"end": 8680,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 8314,
									"end": 8680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8456,
									"end": 8459,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8477,
									"end": 8544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8541,
									"end": 8543,
									"name": "PUSH",
									"source": 8,
									"value": "1A"
								},
								{
									"begin": 8536,
									"end": 8539,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8477,
									"end": 8544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 8477,
									"end": 8544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8477,
									"end": 8544,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8477,
									"end": 8544,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8470,
									"end": 8544,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8470,
									"end": 8544,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8553,
									"end": 8646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8642,
									"end": 8645,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8553,
									"end": 8646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 8553,
									"end": 8646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8553,
									"end": 8646,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8553,
									"end": 8646,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8671,
									"end": 8673,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8666,
									"end": 8669,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8662,
									"end": 8674,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8655,
									"end": 8674,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8655,
									"end": 8674,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8314,
									"end": 8680,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8314,
									"end": 8680,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8314,
									"end": 8680,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8314,
									"end": 8680,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8686,
									"end": 9105,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 8686,
									"end": 9105,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8852,
									"end": 8856,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8890,
									"end": 8892,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8879,
									"end": 8888,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8875,
									"end": 8893,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8867,
									"end": 8893,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8867,
									"end": 8893,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8939,
									"end": 8948,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8933,
									"end": 8937,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8929,
									"end": 8949,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 8925,
									"end": 8926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8914,
									"end": 8923,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8910,
									"end": 8927,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8903,
									"end": 8950,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8967,
									"end": 9098,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 9093,
									"end": 9097,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8967,
									"end": 9098,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 8967,
									"end": 9098,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8967,
									"end": 9098,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 8967,
									"end": 9098,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8959,
									"end": 9098,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8959,
									"end": 9098,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8686,
									"end": 9105,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8686,
									"end": 9105,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8686,
									"end": 9105,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8686,
									"end": 9105,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9111,
									"end": 9229,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 9111,
									"end": 9229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9198,
									"end": 9222,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9216,
									"end": 9221,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9198,
									"end": 9222,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 9198,
									"end": 9222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9198,
									"end": 9222,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9198,
									"end": 9222,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9193,
									"end": 9196,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9186,
									"end": 9223,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9111,
									"end": 9229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9111,
									"end": 9229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9111,
									"end": 9229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9235,
									"end": 9677,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 9235,
									"end": 9677,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9384,
									"end": 9388,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9422,
									"end": 9424,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 9411,
									"end": 9420,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9407,
									"end": 9425,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9399,
									"end": 9425,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9399,
									"end": 9425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9435,
									"end": 9506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9503,
									"end": 9504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9492,
									"end": 9501,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9488,
									"end": 9505,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9479,
									"end": 9485,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9435,
									"end": 9506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 9435,
									"end": 9506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9435,
									"end": 9506,
									"name": "tag",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9435,
									"end": 9506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9516,
									"end": 9588,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9584,
									"end": 9586,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9573,
									"end": 9582,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9569,
									"end": 9587,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9560,
									"end": 9566,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9516,
									"end": 9588,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 9516,
									"end": 9588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9516,
									"end": 9588,
									"name": "tag",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9516,
									"end": 9588,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9598,
									"end": 9670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9666,
									"end": 9668,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 9655,
									"end": 9664,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9651,
									"end": 9669,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9642,
									"end": 9648,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9598,
									"end": 9670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 9598,
									"end": 9670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9598,
									"end": 9670,
									"name": "tag",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9598,
									"end": 9670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9235,
									"end": 9677,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 9235,
									"end": 9677,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 9235,
									"end": 9677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9235,
									"end": 9677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9235,
									"end": 9677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9235,
									"end": 9677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9235,
									"end": 9677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9683,
									"end": 9905,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 9683,
									"end": 9905,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9776,
									"end": 9780,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9814,
									"end": 9816,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9803,
									"end": 9812,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9799,
									"end": 9817,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9791,
									"end": 9817,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9791,
									"end": 9817,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9827,
									"end": 9898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 9895,
									"end": 9896,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9884,
									"end": 9893,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9880,
									"end": 9897,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9871,
									"end": 9877,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9827,
									"end": 9898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 9827,
									"end": 9898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9827,
									"end": 9898,
									"name": "tag",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 9827,
									"end": 9898,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9683,
									"end": 9905,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9683,
									"end": 9905,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9683,
									"end": 9905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9683,
									"end": 9905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9683,
									"end": 9905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 4894,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c45a95eeaa528f9b74e29ce055f60c1132fb7d1de34ee80423786713a28ead6064736f6c634300081a0033",
									".code": [
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "602512E1"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "C7B8981C"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "D82E3962"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "9E447FC6"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "A6F9DAE1"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "7B0A47EE"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "7BB1CA19"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "602512E1"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "6E99D52F"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "70480275"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "24D7806C"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "32CB6B0C"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "32CB6B0C"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "331E03A8"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "4D474898"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "5556DB65"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "24D7806C"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "2E17DE78"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "31AE450B"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "16934FC4"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "16934FC4"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "1785F53C"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "19CAE462"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "700037D"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "14BFD6D0"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 250,
											"end": 4894,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 499,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 499,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 499,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 499,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 790,
											"end": 813,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 790,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 790,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 790,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 451,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 451,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 451,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3915,
											"end": 4393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3915,
											"end": 4393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 408,
											"end": 442,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 408,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 408,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 820,
											"end": 859,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 820,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 820,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 820,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2430,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2430,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4799,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4799,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 315,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 315,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 315,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 315,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 369,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 315,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 315,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 315,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 369,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 603,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 603,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 603,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1555,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1555,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 376,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 376,
											"end": 401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 376,
											"end": 401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 401,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 376,
											"end": 401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 376,
											"end": 401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 376,
											"end": 401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 401,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4401,
											"end": 4505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4401,
											"end": 4505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 733,
											"end": 781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 733,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 733,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 733,
											"end": 781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 733,
											"end": 781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 733,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 733,
											"end": 781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3721,
											"end": 3907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3721,
											"end": 3907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 693,
											"end": 724,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 693,
											"end": 724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 693,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 693,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 693,
											"end": 724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 724,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 693,
											"end": 724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 693,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 693,
											"end": 724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 724,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 548,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 548,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 548,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 660,
											"end": 686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 660,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 660,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 660,
											"end": 686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 686,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 660,
											"end": 686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 660,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 660,
											"end": 686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 686,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4513,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4513,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2002,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2002,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4625,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4625,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 3115,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2892,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2892,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2892,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 3115,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2892,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 3115,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3161,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 3161,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3161,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 499,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 813,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 790,
											"end": 813,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 790,
											"end": 813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3995,
											"end": 4017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3987,
											"end": 4034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3987,
											"end": 4034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4053,
											"end": 4059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4053,
											"end": 4066,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4066,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4070,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4045,
											"end": 4103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4045,
											"end": 4103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4137,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4181,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4181,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4181,
											"end": 4194,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4181,
											"end": 4194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4181,
											"end": 4194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4194,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4220,
											"end": 4246,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4227,
											"end": 4228,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4220,
											"end": 4229,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4220,
											"end": 4229,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4220,
											"end": 4246,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4246,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4216,
											"end": 4375,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4302,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4286,
											"end": 4292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4286,
											"end": 4299,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4299,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4286,
											"end": 4303,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4286,
											"end": 4303,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4286,
											"end": 4303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4279,
											"end": 4304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4279,
											"end": 4304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4274,
											"end": 4275,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4267,
											"end": 4276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4323,
											"end": 4335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4354,
											"end": 4359,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4216,
											"end": 4375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4199,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4199,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4196,
											"end": 4199,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4199,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4157,
											"end": 4386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 4393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 408,
											"end": 442,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 408,
											"end": 442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 820,
											"end": 859,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 820,
											"end": 859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2506,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2481,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2481,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2611,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2586,
											"end": 2629,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2586,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2629,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2586,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2629,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2629,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2559,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2559,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2701,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2684,
											"end": 2712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2723,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2755,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2780,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2755,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2806,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2817,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2818,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2836,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4857,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 315,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 352,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "295BE96E64066972000000"
										},
										{
											"begin": 315,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 315,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1636,
											"end": 1638,
											"name": "PUSH",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 352,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "295BE96E64066972000000"
										},
										{
											"begin": 1623,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1623,
											"end": 1638,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1623,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1638,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1623,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1623,
											"end": 1644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1623,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1644,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1623,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1620,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1610,
											"end": 1620,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1644,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1602,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1602,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1703,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1739,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1739,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1739,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1784,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1774,
											"end": 1784,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1784,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1750,
											"end": 1814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1750,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1855,
											"name": "PUSH",
											"source": 7,
											"value": "2B5E3AF16B1880000"
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1887,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1924,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1887,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1935,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 376,
											"end": 401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 376,
											"end": 401,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 915,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 900,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4473,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 733,
											"end": 781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 733,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3794,
											"end": 3811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 3811,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3785,
											"end": 3832,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3785,
											"end": 3832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3843,
											"end": 3850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3859,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3867,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 3890,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 693,
											"end": 724,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 693,
											"end": 724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 693,
											"end": 724,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 693,
											"end": 724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 548,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 660,
											"end": 686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 660,
											"end": 686,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 660,
											"end": 686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 915,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 908,
											"end": 927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 900,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 900,
											"end": 944,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 900,
											"end": 944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 4585,
											"end": 4609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4609,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2065,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2069,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2051,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2051,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2159,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2133,
											"end": 2178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2133,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2178,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2133,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2129,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2178,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2178,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 2106,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2106,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2231,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2231,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2295,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2284,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2267,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2327,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2306,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2381,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2351,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2362,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2363,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2381,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2381,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4700,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4700,
											"end": 4722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4700,
											"end": 4722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4722,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4692,
											"end": 4744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4692,
											"end": 4744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4755,
											"end": 4783,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4755,
											"end": 4783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 3115,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2892,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2970,
											"end": 2980,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2954,
											"end": 2981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2981,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2954,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2981,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3009,
											"end": 3010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3010,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2992,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2992,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3055,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3066,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3071,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3088,
											"end": 3098,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3082,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3082,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 3115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3268,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3301,
											"end": 3306,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 3288,
											"end": 3298,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3288,
											"end": 3298,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3277,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3284,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3285,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 3271,
											"end": 3298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3271,
											"end": 3298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3298,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 3271,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3271,
											"end": 3306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3243,
											"end": 3306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3243,
											"end": 3306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3423,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3430,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3431,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3458,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3627,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3442,
											"end": 3627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3494,
											"end": 3520,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3494,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3520,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3494,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3614,
											"name": "PUSH",
											"source": 7,
											"value": "496CEBB800"
										},
										{
											"begin": 3586,
											"end": 3594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3583,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3573,
											"end": 3583,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3556,
											"end": 3583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3556,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3583,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3556,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 3556,
											"end": 3594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3556,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3594,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 3556,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3556,
											"end": 3615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3615,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3535,
											"end": 3615,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3535,
											"end": 3615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3615,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3535,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3615,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3627,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3442,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3673,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3680,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3646,
											"end": 3681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3646,
											"end": 3681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3681,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3646,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3639,
											"end": 3681,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3639,
											"end": 3681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3639,
											"end": 3681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3639,
											"end": 3681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1323,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 352,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "295BE96E64066972000000"
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 1411,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1411,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1424,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 1411,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1411,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1447,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1447,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 1403,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1403,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 1495,
											"end": 1502,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1489,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2405,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2076,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2135,
											"end": 2141,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2182,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2155,
											"end": 2187,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2271,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 2152,
											"end": 2271,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 2190,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2190,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2269,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 2190,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2271,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 2152,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 2335,
											"end": 2388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2388,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 2335,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2325,
											"end": 2388,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2325,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2405,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2405,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2612,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 2494,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 2599,
											"end": 2604,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 2581,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2606,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2840,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2618,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2751,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2747,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2726,
											"end": 2752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2726,
											"end": 2752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 2762,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2833,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 2762,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2840,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 2919,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2909,
											"end": 2944,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2948,
											"end": 2960,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3065,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 3101,
											"end": 3106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 3074,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3219,
											"end": 3242,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3215,
											"end": 3247,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3250,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3438,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3395,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3682,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 3776,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 3798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3937,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3948,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4136,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4109,
											"end": 4132,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4140,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 4140,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 4140,
											"end": 4219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4140,
											"end": 4219,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 4140,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4310,
											"end": 4319,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4306,
											"end": 4328,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 4285,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4338,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 4466,
											"end": 4471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 4448,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4443,
											"end": 4446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4618,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4605,
											"end": 4614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4695,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4682,
											"end": 4699,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 4629,
											"end": 4700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4857,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4843,
											"end": 4852,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4858,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 4861,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 4861,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 4940,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 4861,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 4982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 5051,
											"end": 5058,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5031,
											"end": 5040,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5006,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5059,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 5006,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5059,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 5179,
											"end": 5186,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5176,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 5177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5134,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5134,
											"end": 5187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5134,
											"end": 5187,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 5134,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5124,
											"end": 5187,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5124,
											"end": 5187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5079,
											"end": 5197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5238,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 5307,
											"end": 5314,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5296,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5283,
											"end": 5305,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 5262,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5315,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 5262,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5252,
											"end": 5315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5252,
											"end": 5315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5207,
											"end": 5325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 5332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5373,
											"end": 5380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5417,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5406,
											"end": 5411,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5418,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5391,
											"end": 5418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5391,
											"end": 5418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5338,
											"end": 5424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 5529,
											"end": 5534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 5513,
											"end": 5535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5536,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5430,
											"end": 5542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5673,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 5688,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5882,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 5768,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 5875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 5875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5882,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6072,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 5888,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 5998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6016,
											"end": 6019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6009,
											"end": 6028,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6065,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6056,
											"end": 6059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6052,
											"end": 6066,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6072,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6072,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6210,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6078,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6198,
											"end": 6202,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6193,
											"end": 6196,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6189,
											"end": 6203,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6324,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 6216,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6293,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 6311,
											"end": 6316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6293,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 6293,
											"end": 6317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6293,
											"end": 6317,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 6293,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6288,
											"end": 6291,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6281,
											"end": 6318,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6509,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 6330,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6399,
											"end": 6409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 6462,
											"end": 6465,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6420,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 6420,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6420,
											"end": 6466,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 6420,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6498,
											"end": 6502,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6489,
											"end": 6503,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6509,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6628,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 6515,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6617,
											"end": 6621,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6612,
											"end": 6615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 7396,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 6664,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6783,
											"end": 6786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6812,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 6860,
											"end": 6865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6812,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 6812,
											"end": 6866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6812,
											"end": 6866,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 6812,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6882,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 6961,
											"end": 6967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6956,
											"end": 6959,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6882,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 6882,
											"end": 6968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6882,
											"end": 6968,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 6882,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6968,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6992,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 7042,
											"end": 7047,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6992,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6992,
											"end": 7048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6992,
											"end": 7048,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 6992,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7071,
											"end": 7078,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7371,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 7087,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7112,
											"end": 7118,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7109,
											"end": 7110,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7119,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7371,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 7087,
											"end": 7371,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7195,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7215,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 7274,
											"end": 7277,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7259,
											"end": 7272,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7215,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7215,
											"end": 7278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7215,
											"end": 7278,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 7215,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7278,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 7301,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7361,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 7301,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7361,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7147,
											"end": 7371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7134,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7131,
											"end": 7132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7127,
											"end": 7136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7122,
											"end": 7136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7122,
											"end": 7136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 7087,
											"end": 7371,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7371,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 7087,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7387,
											"end": 7390,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7380,
											"end": 7390,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7380,
											"end": 7390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 7396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 7396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 7396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 7396,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 7396,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 7396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 7396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 7396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7775,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 7402,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7583,
											"end": 7585,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7572,
											"end": 7581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7568,
											"end": 7586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7632,
											"end": 7641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7622,
											"end": 7642,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7618,
											"end": 7619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7616,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7596,
											"end": 7643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7660,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 7763,
											"end": 7767,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7754,
											"end": 7760,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7660,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7660,
											"end": 7768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7660,
											"end": 7768,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 7660,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7775,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 8255,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 7781,
											"end": 8255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7849,
											"end": 7855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7857,
											"end": 7863,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7894,
											"end": 7903,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7885,
											"end": 7892,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7877,
											"end": 7909,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7874,
											"end": 7993,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7874,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 7874,
											"end": 7993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7912,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 7912,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 7912,
											"end": 7991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7912,
											"end": 7991,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 7912,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7874,
											"end": 7993,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 7874,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8032,
											"end": 8033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 8102,
											"end": 8109,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8093,
											"end": 8099,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 8091,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8057,
											"end": 8110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8110,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 8057,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8047,
											"end": 8110,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8047,
											"end": 8110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8003,
											"end": 8120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 8230,
											"end": 8237,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8221,
											"end": 8227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8210,
											"end": 8219,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8206,
											"end": 8228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8185,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8185,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8185,
											"end": 8238,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 8185,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8175,
											"end": 8238,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8175,
											"end": 8238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 8255,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 8255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 8255,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 8255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 8255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 8255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8261,
											"end": 8441,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 8261,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8309,
											"end": 8386,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8387,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8410,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 8403,
											"end": 8404,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8396,
											"end": 8411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8435,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8447,
											"end": 8767,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 8447,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8491,
											"end": 8497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8528,
											"end": 8529,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8518,
											"end": 8530,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8508,
											"end": 8530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8508,
											"end": 8530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8575,
											"end": 8576,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8569,
											"end": 8573,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8565,
											"end": 8577,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8586,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 8586,
											"end": 8667,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8656,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 8644,
											"end": 8650,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8640,
											"end": 8657,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8630,
											"end": 8657,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8630,
											"end": 8657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8586,
											"end": 8667,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 8586,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8714,
											"end": 8716,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8717,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8683,
											"end": 8701,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8680,
											"end": 8718,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 8677,
											"end": 8761,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 8733,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8761,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 8677,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8498,
											"end": 8767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8447,
											"end": 8767,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8447,
											"end": 8767,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8447,
											"end": 8767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8447,
											"end": 8767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8773,
											"end": 8935,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 8773,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8913,
											"end": 8927,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420616E2061646D696E0000000000000000000000000000000000000000"
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8901,
											"end": 8907,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8897,
											"end": 8911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8890,
											"end": 8928,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8773,
											"end": 8935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8773,
											"end": 8935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9083,
											"end": 9086,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9104,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 9168,
											"end": 9170,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 9163,
											"end": 9166,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9104,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 9104,
											"end": 9171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9104,
											"end": 9171,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 9104,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9180,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 9269,
											"end": 9272,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9180,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 9180,
											"end": 9273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9180,
											"end": 9273,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 9180,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9298,
											"end": 9300,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9293,
											"end": 9296,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9289,
											"end": 9301,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9282,
											"end": 9301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9282,
											"end": 9301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8941,
											"end": 9307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9479,
											"end": 9483,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9519,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9506,
											"end": 9515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9494,
											"end": 9520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9494,
											"end": 9520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9566,
											"end": 9575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 9564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9556,
											"end": 9576,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9552,
											"end": 9553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9541,
											"end": 9550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9530,
											"end": 9577,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9594,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 9720,
											"end": 9724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9594,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 9594,
											"end": 9725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9594,
											"end": 9725,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 9594,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9586,
											"end": 9725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9586,
											"end": 9725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9916,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 9738,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9878,
											"end": 9908,
											"name": "PUSH",
											"source": 8,
											"value": "43616E6E6F742072656D6F766520746865206C6173742061646D696E00000000"
										},
										{
											"begin": 9874,
											"end": 9875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9922,
											"end": 10288,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 9922,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10064,
											"end": 10067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10085,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 10149,
											"end": 10151,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 10144,
											"end": 10147,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 10085,
											"end": 10152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10152,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 10085,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10161,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 10250,
											"end": 10253,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10161,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 10161,
											"end": 10254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10161,
											"end": 10254,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 10161,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10281,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10274,
											"end": 10277,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10270,
											"end": 10282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10263,
											"end": 10282,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10263,
											"end": 10282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9922,
											"end": 10288,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9922,
											"end": 10288,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9922,
											"end": 10288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9922,
											"end": 10288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10294,
											"end": 10713,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 10294,
											"end": 10713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10460,
											"end": 10464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10500,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10487,
											"end": 10496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10483,
											"end": 10501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10547,
											"end": 10556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10541,
											"end": 10545,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10537,
											"end": 10557,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10518,
											"end": 10535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10511,
											"end": 10558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 10701,
											"end": 10705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 10575,
											"end": 10706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10706,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 10575,
											"end": 10706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10294,
											"end": 10713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10294,
											"end": 10713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10294,
											"end": 10713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10294,
											"end": 10713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10719,
											"end": 10899,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 10719,
											"end": 10899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10767,
											"end": 10844,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10764,
											"end": 10765,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10757,
											"end": 10845,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10868,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 10861,
											"end": 10862,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10854,
											"end": 10869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10888,
											"end": 10892,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10885,
											"end": 10886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10878,
											"end": 10893,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10905,
											"end": 11085,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 10905,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11030,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10950,
											"end": 10951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10943,
											"end": 11031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11050,
											"end": 11054,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11040,
											"end": 11055,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11074,
											"end": 11078,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11071,
											"end": 11072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11064,
											"end": 11079,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11285,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 11091,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11131,
											"end": 11135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11151,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 11169,
											"end": 11170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11151,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 11151,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11151,
											"end": 11171,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 11151,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11146,
											"end": 11171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11146,
											"end": 11171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11185,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 11203,
											"end": 11204,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11185,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 11185,
											"end": 11205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11185,
											"end": 11205,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 11185,
											"end": 11205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11180,
											"end": 11205,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11180,
											"end": 11205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11229,
											"end": 11230,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11226,
											"end": 11227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11231,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11214,
											"end": 11231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11214,
											"end": 11231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11247,
											"end": 11251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11244,
											"end": 11255,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11278,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 11241,
											"end": 11278,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 11258,
											"end": 11276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11278,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 11241,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11285,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11285,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11291,
											"end": 11471,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 11291,
											"end": 11471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11339,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11336,
											"end": 11337,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11436,
											"end": 11440,
											"name": "PUSH",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 11433,
											"end": 11434,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11426,
											"end": 11441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11460,
											"end": 11464,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11457,
											"end": 11458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11477,
											"end": 11653,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 11477,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11617,
											"end": 11645,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E74207374616B652062616C616E6365000000000000"
										},
										{
											"begin": 11613,
											"end": 11614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11605,
											"end": 11611,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11601,
											"end": 11615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11594,
											"end": 11646,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11477,
											"end": 11653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11477,
											"end": 11653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 12025,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 11659,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11801,
											"end": 11804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11822,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 11886,
											"end": 11888,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 11881,
											"end": 11884,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11822,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 11822,
											"end": 11889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11822,
											"end": 11889,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 11822,
											"end": 11889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11815,
											"end": 11889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11815,
											"end": 11889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11898,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 11987,
											"end": 11990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11898,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 11898,
											"end": 11991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11898,
											"end": 11991,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 11898,
											"end": 11991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12018,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12011,
											"end": 12014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12007,
											"end": 12019,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 12025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 12025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 12025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 12025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12450,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 12031,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12197,
											"end": 12201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12235,
											"end": 12237,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12224,
											"end": 12233,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12220,
											"end": 12238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12212,
											"end": 12238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12212,
											"end": 12238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12284,
											"end": 12293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12278,
											"end": 12282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12274,
											"end": 12294,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12259,
											"end": 12268,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12255,
											"end": 12272,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12248,
											"end": 12295,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 12438,
											"end": 12442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 12312,
											"end": 12443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12443,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 12312,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12450,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12456,
											"end": 12647,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 12456,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12496,
											"end": 12499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12515,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 12533,
											"end": 12534,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 12515,
											"end": 12535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12535,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 12515,
											"end": 12535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12510,
											"end": 12535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12510,
											"end": 12535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 12567,
											"end": 12568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 12549,
											"end": 12569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12569,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 12549,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12544,
											"end": 12569,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12544,
											"end": 12569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12592,
											"end": 12593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12589,
											"end": 12590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12585,
											"end": 12594,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12578,
											"end": 12594,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12578,
											"end": 12594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12613,
											"end": 12616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12610,
											"end": 12611,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12607,
											"end": 12617,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12604,
											"end": 12640,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12604,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 12604,
											"end": 12640,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12620,
											"end": 12638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 12620,
											"end": 12638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 12620,
											"end": 12638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12620,
											"end": 12638,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 12620,
											"end": 12638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12604,
											"end": 12640,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 12604,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12456,
											"end": 12647,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12456,
											"end": 12647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12456,
											"end": 12647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12456,
											"end": 12647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12456,
											"end": 12647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12877,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 12653,
											"end": 12877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12793,
											"end": 12827,
											"name": "PUSH",
											"source": 8,
											"value": "436F6F6C646F776E20706572696F64206E6F74206D657420666F7220756E7374"
										},
										{
											"begin": 12789,
											"end": 12790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12781,
											"end": 12787,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12777,
											"end": 12791,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12770,
											"end": 12828,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 12869,
											"name": "PUSH",
											"source": 8,
											"value": "616B696E67000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12857,
											"end": 12859,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12845,
											"end": 12860,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12838,
											"end": 12870,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13025,
											"end": 13028,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13046,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 13110,
											"end": 13112,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 13105,
											"end": 13108,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13046,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 13046,
											"end": 13113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13046,
											"end": 13113,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 13046,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13039,
											"end": 13113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13039,
											"end": 13113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13122,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 13211,
											"end": 13214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13122,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 13122,
											"end": 13215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13122,
											"end": 13215,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 13122,
											"end": 13215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13240,
											"end": 13242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13235,
											"end": 13238,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13231,
											"end": 13243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13224,
											"end": 13243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13224,
											"end": 13243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12883,
											"end": 13249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13421,
											"end": 13425,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13459,
											"end": 13461,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13448,
											"end": 13457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13444,
											"end": 13462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13436,
											"end": 13462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13436,
											"end": 13462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13508,
											"end": 13517,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13502,
											"end": 13506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13498,
											"end": 13518,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13494,
											"end": 13495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13483,
											"end": 13492,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13479,
											"end": 13496,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13472,
											"end": 13519,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13536,
											"end": 13667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 13662,
											"end": 13666,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13536,
											"end": 13667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 13536,
											"end": 13667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13536,
											"end": 13667,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 13536,
											"end": 13667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13528,
											"end": 13667,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13528,
											"end": 13667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13680,
											"end": 14090,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 13680,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13720,
											"end": 13727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13743,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 13761,
											"end": 13762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13743,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13743,
											"end": 13763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13743,
											"end": 13763,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 13743,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13738,
											"end": 13763,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13738,
											"end": 13763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13777,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 13795,
											"end": 13796,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13777,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13777,
											"end": 13797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13777,
											"end": 13797,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 13777,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13772,
											"end": 13797,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13772,
											"end": 13797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13832,
											"end": 13833,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13829,
											"end": 13830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13825,
											"end": 13834,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13854,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 13872,
											"end": 13883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13854,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13854,
											"end": 13884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13854,
											"end": 13884,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 13854,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13843,
											"end": 13884,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13843,
											"end": 13884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14034,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14024,
											"end": 14031,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14020,
											"end": 14035,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14017,
											"end": 14018,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14014,
											"end": 14036,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13994,
											"end": 13995,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13987,
											"end": 13996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13967,
											"end": 14050,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 13944,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 13944,
											"end": 14083,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14063,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 14063,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 14063,
											"end": 14081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14063,
											"end": 14081,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 14063,
											"end": 14081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13944,
											"end": 14083,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 13944,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13728,
											"end": 14090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13680,
											"end": 14090,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13680,
											"end": 14090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13680,
											"end": 14090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13680,
											"end": 14090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13680,
											"end": 14090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14096,
											"end": 14276,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 14096,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14144,
											"end": 14221,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14141,
											"end": 14142,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14134,
											"end": 14222,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14241,
											"end": 14245,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 14238,
											"end": 14239,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14231,
											"end": 14246,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14269,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14262,
											"end": 14263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14255,
											"end": 14270,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14467,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 14282,
											"end": 14467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14322,
											"end": 14323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 14357,
											"end": 14358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14339,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 14339,
											"end": 14359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14339,
											"end": 14359,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 14339,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14334,
											"end": 14359,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14334,
											"end": 14359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 14391,
											"end": 14392,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 14373,
											"end": 14393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14393,
											"name": "tag",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 14373,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14368,
											"end": 14393,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14368,
											"end": 14393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14412,
											"end": 14413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14402,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 14402,
											"end": 14437,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 14417,
											"end": 14435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14402,
											"end": 14437,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 14402,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14459,
											"end": 14460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14456,
											"end": 14457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14452,
											"end": 14461,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14447,
											"end": 14461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14447,
											"end": 14461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14467,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14473,
											"end": 14639,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 14473,
											"end": 14639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "PUSH",
											"source": 8,
											"value": "416C6C20746F6B656E73206D696E656400000000000000000000000000000000"
										},
										{
											"begin": 14609,
											"end": 14610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14601,
											"end": 14607,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14597,
											"end": 14611,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14590,
											"end": 14632,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14473,
											"end": 14639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14473,
											"end": 14639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14645,
											"end": 15011,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 14645,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14787,
											"end": 14790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14808,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 14872,
											"end": 14874,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 14867,
											"end": 14870,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14808,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 14808,
											"end": 14875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14808,
											"end": 14875,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 14808,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14801,
											"end": 14875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14801,
											"end": 14875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14884,
											"end": 14977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 14973,
											"end": 14976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14884,
											"end": 14977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 14884,
											"end": 14977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14884,
											"end": 14977,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 14884,
											"end": 14977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15002,
											"end": 15004,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14997,
											"end": 15000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14993,
											"end": 15005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14986,
											"end": 15005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14986,
											"end": 15005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14645,
											"end": 15011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14645,
											"end": 15011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14645,
											"end": 15011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14645,
											"end": 15011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15436,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 15017,
											"end": 15436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15183,
											"end": 15187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15221,
											"end": 15223,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15210,
											"end": 15219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15206,
											"end": 15224,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15198,
											"end": 15224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15198,
											"end": 15224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15270,
											"end": 15279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15264,
											"end": 15268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15260,
											"end": 15280,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15256,
											"end": 15257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15245,
											"end": 15254,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15241,
											"end": 15258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15234,
											"end": 15281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 15424,
											"end": 15428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 15298,
											"end": 15429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15429,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 15298,
											"end": 15429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15290,
											"end": 15429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15290,
											"end": 15429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15436,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15442,
											"end": 15536,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 15442,
											"end": 15536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15483,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15523,
											"end": 15528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15519,
											"end": 15521,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 15515,
											"end": 15529,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 15494,
											"end": 15529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15494,
											"end": 15529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15442,
											"end": 15536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15442,
											"end": 15536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15442,
											"end": 15536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15442,
											"end": 15536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15542,
											"end": 15636,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 15542,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15581,
											"end": 15588,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 15624,
											"end": 15629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 15610,
											"end": 15630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15599,
											"end": 15630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15599,
											"end": 15630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15542,
											"end": 15636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15542,
											"end": 15636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15542,
											"end": 15636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15542,
											"end": 15636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15642,
											"end": 15742,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 15642,
											"end": 15742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15681,
											"end": 15688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15710,
											"end": 15736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 15730,
											"end": 15735,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15710,
											"end": 15736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 15710,
											"end": 15736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15710,
											"end": 15736,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 15710,
											"end": 15736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15699,
											"end": 15736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15699,
											"end": 15736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15642,
											"end": 15742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15642,
											"end": 15742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15642,
											"end": 15742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15642,
											"end": 15742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15748,
											"end": 15905,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 15748,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15853,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 15873,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 15891,
											"end": 15896,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15873,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 15873,
											"end": 15897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15873,
											"end": 15897,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 15873,
											"end": 15897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15853,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 15853,
											"end": 15898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15853,
											"end": 15898,
											"name": "tag",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 15853,
											"end": 15898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15848,
											"end": 15851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15841,
											"end": 15899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15748,
											"end": 15905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15748,
											"end": 15905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15748,
											"end": 15905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15911,
											"end": 15990,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 15911,
											"end": 15990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15950,
											"end": 15957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15979,
											"end": 15984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15968,
											"end": 15984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15968,
											"end": 15984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15911,
											"end": 15990,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15911,
											"end": 15990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15911,
											"end": 15990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15911,
											"end": 15990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16153,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 15996,
											"end": 16153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16101,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 16121,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 16139,
											"end": 16144,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16121,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 16121,
											"end": 16145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16121,
											"end": 16145,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 16121,
											"end": 16145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16101,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 16101,
											"end": 16146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16101,
											"end": 16146,
											"name": "tag",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 16101,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16096,
											"end": 16099,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16089,
											"end": 16147,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16159,
											"end": 16556,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 16159,
											"end": 16556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16299,
											"end": 16302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16314,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 16385,
											"end": 16388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16376,
											"end": 16382,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16314,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 16314,
											"end": 16389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16314,
											"end": 16389,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 16314,
											"end": 16389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16414,
											"end": 16416,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 16409,
											"end": 16412,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16405,
											"end": 16417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16398,
											"end": 16417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16398,
											"end": 16417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16427,
											"end": 16502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 16498,
											"end": 16501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16489,
											"end": 16495,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16427,
											"end": 16502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 16427,
											"end": 16502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16427,
											"end": 16502,
											"name": "tag",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 16427,
											"end": 16502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16529,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16522,
											"end": 16525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16518,
											"end": 16530,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16511,
											"end": 16530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16511,
											"end": 16530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16547,
											"end": 16550,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16540,
											"end": 16550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16540,
											"end": 16550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16159,
											"end": 16556,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16159,
											"end": 16556,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16159,
											"end": 16556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16159,
											"end": 16556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16159,
											"end": 16556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16159,
											"end": 16556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16562,
											"end": 16737,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 16562,
											"end": 16737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16702,
											"end": 16729,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E696E6720646966666963756C7479206E6F74206D657400000000000000"
										},
										{
											"begin": 16698,
											"end": 16699,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16690,
											"end": 16696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16686,
											"end": 16700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16679,
											"end": 16730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16562,
											"end": 16737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16562,
											"end": 16737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16743,
											"end": 17109,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 16743,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16885,
											"end": 16888,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16906,
											"end": 16973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 16970,
											"end": 16972,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 16965,
											"end": 16968,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16906,
											"end": 16973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 16906,
											"end": 16973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16906,
											"end": 16973,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 16906,
											"end": 16973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16899,
											"end": 16973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16899,
											"end": 16973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16982,
											"end": 17075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 17071,
											"end": 17074,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16982,
											"end": 17075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 16982,
											"end": 17075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16982,
											"end": 17075,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 16982,
											"end": 17075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17100,
											"end": 17102,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17098,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17091,
											"end": 17103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17084,
											"end": 17103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17084,
											"end": 17103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16743,
											"end": 17109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16743,
											"end": 17109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16743,
											"end": 17109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16743,
											"end": 17109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17115,
											"end": 17534,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 17115,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17281,
											"end": 17285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17319,
											"end": 17321,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17308,
											"end": 17317,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17304,
											"end": 17322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17296,
											"end": 17322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17296,
											"end": 17322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17368,
											"end": 17377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17362,
											"end": 17366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17358,
											"end": 17378,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17354,
											"end": 17355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17343,
											"end": 17352,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17339,
											"end": 17356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17332,
											"end": 17379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17396,
											"end": 17527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 17522,
											"end": 17526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17396,
											"end": 17527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 17396,
											"end": 17527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17396,
											"end": 17527,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 17396,
											"end": 17527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17388,
											"end": 17527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17388,
											"end": 17527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17115,
											"end": 17534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17115,
											"end": 17534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17115,
											"end": 17534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17115,
											"end": 17534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17540,
											"end": 17706,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 17540,
											"end": 17706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17680,
											"end": 17698,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920616E2061646D696E00000000000000000000000000000000"
										},
										{
											"begin": 17676,
											"end": 17677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17668,
											"end": 17674,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17664,
											"end": 17678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17657,
											"end": 17699,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17540,
											"end": 17706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17540,
											"end": 17706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17712,
											"end": 18078,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 17712,
											"end": 18078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17854,
											"end": 17857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17875,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 17939,
											"end": 17941,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 17934,
											"end": 17937,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17875,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 17875,
											"end": 17942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17875,
											"end": 17942,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 17875,
											"end": 17942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17868,
											"end": 17942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17868,
											"end": 17942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17951,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 18040,
											"end": 18043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17951,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 17951,
											"end": 18044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17951,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 17951,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18069,
											"end": 18071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18064,
											"end": 18067,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18060,
											"end": 18072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18053,
											"end": 18072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18053,
											"end": 18072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17712,
											"end": 18078,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17712,
											"end": 18078,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17712,
											"end": 18078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17712,
											"end": 18078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18084,
											"end": 18503,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 18084,
											"end": 18503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18250,
											"end": 18254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18288,
											"end": 18290,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18277,
											"end": 18286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18265,
											"end": 18291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18265,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18337,
											"end": 18346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18331,
											"end": 18335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18327,
											"end": 18347,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18323,
											"end": 18324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18312,
											"end": 18321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18308,
											"end": 18325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18301,
											"end": 18348,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18365,
											"end": 18496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 18491,
											"end": 18495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18365,
											"end": 18496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 18365,
											"end": 18496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18365,
											"end": 18496,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 18365,
											"end": 18496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18357,
											"end": 18496,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18357,
											"end": 18496,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18084,
											"end": 18503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18084,
											"end": 18503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18084,
											"end": 18503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18084,
											"end": 18503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18509,
											"end": 18680,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 18509,
											"end": 18680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18649,
											"end": 18672,
											"name": "PUSH",
											"source": 8,
											"value": "43616E6E6F74207374616B65203020746F6B656E730000000000000000000000"
										},
										{
											"begin": 18645,
											"end": 18646,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18637,
											"end": 18643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18633,
											"end": 18647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18626,
											"end": 18673,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18509,
											"end": 18680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18509,
											"end": 18680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 19052,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 18686,
											"end": 19052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18828,
											"end": 18831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18849,
											"end": 18916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 18913,
											"end": 18915,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 18908,
											"end": 18911,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18849,
											"end": 18916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 18849,
											"end": 18916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18849,
											"end": 18916,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 18849,
											"end": 18916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18842,
											"end": 18916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18842,
											"end": 18916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18925,
											"end": 19018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 19014,
											"end": 19017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18925,
											"end": 19018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 18925,
											"end": 19018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18925,
											"end": 19018,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 18925,
											"end": 19018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19043,
											"end": 19045,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19038,
											"end": 19041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19034,
											"end": 19046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19027,
											"end": 19046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19027,
											"end": 19046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 19052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 19052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 19052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 19052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19058,
											"end": 19477,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 19058,
											"end": 19477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19224,
											"end": 19228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19262,
											"end": 19264,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19251,
											"end": 19260,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19247,
											"end": 19265,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19311,
											"end": 19320,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19305,
											"end": 19309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19301,
											"end": 19321,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19297,
											"end": 19298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19286,
											"end": 19295,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19282,
											"end": 19299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19275,
											"end": 19322,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19339,
											"end": 19470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 19465,
											"end": 19469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19339,
											"end": 19470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 19339,
											"end": 19470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19339,
											"end": 19470,
											"name": "tag",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 19339,
											"end": 19470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19331,
											"end": 19470,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19331,
											"end": 19470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19058,
											"end": 19477,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19058,
											"end": 19477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19058,
											"end": 19477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19058,
											"end": 19477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19483,
											"end": 19705,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 19483,
											"end": 19705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19623,
											"end": 19657,
											"name": "PUSH",
											"source": 8,
											"value": "436F6F6C646F776E20706572696F64206E6F74206D657420666F72207374616B"
										},
										{
											"begin": 19619,
											"end": 19620,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19611,
											"end": 19617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19607,
											"end": 19621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19600,
											"end": 19658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19692,
											"end": 19697,
											"name": "PUSH",
											"source": 8,
											"value": "696E670000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19687,
											"end": 19689,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19679,
											"end": 19685,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19675,
											"end": 19690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19668,
											"end": 19698,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19483,
											"end": 19705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19483,
											"end": 19705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19853,
											"end": 19856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 19938,
											"end": 19940,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 19933,
											"end": 19936,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 19874,
											"end": 19941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "tag",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19867,
											"end": 19941,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19867,
											"end": 19941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 20039,
											"end": 20042,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 19950,
											"end": 20043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "tag",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20068,
											"end": 20070,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20063,
											"end": 20066,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20059,
											"end": 20071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20052,
											"end": 20071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20052,
											"end": 20071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19711,
											"end": 20077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20249,
											"end": 20253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20287,
											"end": 20289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20276,
											"end": 20285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20272,
											"end": 20290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20264,
											"end": 20290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20264,
											"end": 20290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20336,
											"end": 20345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20330,
											"end": 20334,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20326,
											"end": 20346,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20322,
											"end": 20323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20311,
											"end": 20320,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20307,
											"end": 20324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20300,
											"end": 20347,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 20490,
											"end": 20494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 20364,
											"end": 20495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "tag",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20356,
											"end": 20495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20356,
											"end": 20495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20083,
											"end": 20502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20508,
											"end": 20675,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 20508,
											"end": 20675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20648,
											"end": 20667,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964206E6577206F776E6572000000000000000000000000000000"
										},
										{
											"begin": 20644,
											"end": 20645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20636,
											"end": 20642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20632,
											"end": 20646,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20625,
											"end": 20668,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20508,
											"end": 20675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20508,
											"end": 20675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20681,
											"end": 21047,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 20681,
											"end": 21047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20823,
											"end": 20826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20844,
											"end": 20911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 20908,
											"end": 20910,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 20903,
											"end": 20906,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20844,
											"end": 20911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 20844,
											"end": 20911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20844,
											"end": 20911,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 20844,
											"end": 20911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20837,
											"end": 20911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20837,
											"end": 20911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20920,
											"end": 21013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 21009,
											"end": 21012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20920,
											"end": 21013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 20920,
											"end": 21013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20920,
											"end": 21013,
											"name": "tag",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 20920,
											"end": 21013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21038,
											"end": 21040,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21033,
											"end": 21036,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21029,
											"end": 21041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21022,
											"end": 21041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21022,
											"end": 21041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20681,
											"end": 21047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20681,
											"end": 21047,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20681,
											"end": 21047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20681,
											"end": 21047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21053,
											"end": 21472,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 21053,
											"end": 21472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21219,
											"end": 21223,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21257,
											"end": 21259,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21246,
											"end": 21255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21260,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21234,
											"end": 21260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21234,
											"end": 21260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21306,
											"end": 21315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21300,
											"end": 21304,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21296,
											"end": 21316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21292,
											"end": 21293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21281,
											"end": 21290,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21277,
											"end": 21294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21270,
											"end": 21317,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21334,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 21460,
											"end": 21464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21334,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 21334,
											"end": 21465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21334,
											"end": 21465,
											"name": "tag",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 21334,
											"end": 21465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21326,
											"end": 21465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21326,
											"end": 21465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21053,
											"end": 21472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21053,
											"end": 21472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21053,
											"end": 21472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21053,
											"end": 21472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21478,
											"end": 21650,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 21478,
											"end": 21650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21618,
											"end": 21642,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F207265776172647320746F20776974686472617700000000000000000000"
										},
										{
											"begin": 21614,
											"end": 21615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21606,
											"end": 21612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21602,
											"end": 21616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21595,
											"end": 21643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21478,
											"end": 21650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21478,
											"end": 21650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21656,
											"end": 22022,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 21656,
											"end": 22022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21798,
											"end": 21801,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21819,
											"end": 21886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 21883,
											"end": 21885,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 21878,
											"end": 21881,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21819,
											"end": 21886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 21819,
											"end": 21886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21819,
											"end": 21886,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 21819,
											"end": 21886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21812,
											"end": 21886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21812,
											"end": 21886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21895,
											"end": 21988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 21984,
											"end": 21987,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21895,
											"end": 21988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 21895,
											"end": 21988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21895,
											"end": 21988,
											"name": "tag",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 21895,
											"end": 21988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22013,
											"end": 22015,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22008,
											"end": 22011,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22004,
											"end": 22016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21997,
											"end": 22016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21997,
											"end": 22016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21656,
											"end": 22022,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21656,
											"end": 22022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21656,
											"end": 22022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21656,
											"end": 22022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22028,
											"end": 22447,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 22028,
											"end": 22447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22194,
											"end": 22198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22232,
											"end": 22234,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22221,
											"end": 22230,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22217,
											"end": 22235,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22209,
											"end": 22235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22209,
											"end": 22235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22281,
											"end": 22290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22271,
											"end": 22291,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22267,
											"end": 22268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22256,
											"end": 22265,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22252,
											"end": 22269,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22245,
											"end": 22292,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22309,
											"end": 22440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 22435,
											"end": 22439,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22309,
											"end": 22440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 22309,
											"end": 22440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22309,
											"end": 22440,
											"name": "tag",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 22309,
											"end": 22440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22301,
											"end": 22440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22301,
											"end": 22440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22028,
											"end": 22447,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22028,
											"end": 22447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22028,
											"end": 22447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22028,
											"end": 22447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22453,
											"end": 22895,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 22453,
											"end": 22895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22602,
											"end": 22606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22640,
											"end": 22642,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 22629,
											"end": 22638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22625,
											"end": 22643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22617,
											"end": 22643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22617,
											"end": 22643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22653,
											"end": 22724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "662"
										},
										{
											"begin": 22721,
											"end": 22722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22710,
											"end": 22719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22706,
											"end": 22723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22697,
											"end": 22703,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22653,
											"end": 22724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 22653,
											"end": 22724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22653,
											"end": 22724,
											"name": "tag",
											"source": 8,
											"value": "662"
										},
										{
											"begin": 22653,
											"end": 22724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22734,
											"end": 22806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 22802,
											"end": 22804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22791,
											"end": 22800,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22787,
											"end": 22805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22778,
											"end": 22784,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22734,
											"end": 22806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 22734,
											"end": 22806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22734,
											"end": 22806,
											"name": "tag",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 22734,
											"end": 22806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22816,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 22884,
											"end": 22886,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22873,
											"end": 22882,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22869,
											"end": 22887,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22860,
											"end": 22866,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22816,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 22816,
											"end": 22888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22816,
											"end": 22888,
											"name": "tag",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 22816,
											"end": 22888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22453,
											"end": 22895,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 22453,
											"end": 22895,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22453,
											"end": 22895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22453,
											"end": 22895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22453,
											"end": 22895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22453,
											"end": 22895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22453,
											"end": 22895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22901,
											"end": 23077,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 22901,
											"end": 23077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23041,
											"end": 23069,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E74696E672065786365656473206D617820737570706C79000000000000"
										},
										{
											"begin": 23037,
											"end": 23038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23029,
											"end": 23035,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23025,
											"end": 23039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23018,
											"end": 23070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22901,
											"end": 23077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22901,
											"end": 23077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23083,
											"end": 23449,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 23083,
											"end": 23449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23225,
											"end": 23228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23246,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 23310,
											"end": 23312,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 23305,
											"end": 23308,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23246,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 23246,
											"end": 23313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23246,
											"end": 23313,
											"name": "tag",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 23246,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23239,
											"end": 23313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23239,
											"end": 23313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23322,
											"end": 23415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 23411,
											"end": 23414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23322,
											"end": 23415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 23322,
											"end": 23415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23322,
											"end": 23415,
											"name": "tag",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 23322,
											"end": 23415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23440,
											"end": 23442,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23435,
											"end": 23438,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23431,
											"end": 23443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23424,
											"end": 23443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23424,
											"end": 23443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23083,
											"end": 23449,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23083,
											"end": 23449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23083,
											"end": 23449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23083,
											"end": 23449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23455,
											"end": 23874,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 23455,
											"end": 23874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23621,
											"end": 23625,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23659,
											"end": 23661,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23648,
											"end": 23657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23644,
											"end": 23662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23636,
											"end": 23662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23636,
											"end": 23662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23708,
											"end": 23717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23702,
											"end": 23706,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23698,
											"end": 23718,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23694,
											"end": 23695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23683,
											"end": 23692,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23679,
											"end": 23696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23672,
											"end": 23719,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23736,
											"end": 23867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 23862,
											"end": 23866,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23736,
											"end": 23867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 23736,
											"end": 23867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23736,
											"end": 23867,
											"name": "tag",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 23736,
											"end": 23867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23728,
											"end": 23867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23728,
											"end": 23867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23455,
											"end": 23874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23455,
											"end": 23874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23455,
											"end": 23874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23455,
											"end": 23874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/regalium.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"COOLDOWN_PERIOD()": "6e99d52f",
							"MAX_SUPPLY()": "32cb6b0c",
							"addAdmin(address)": "70480275",
							"admins(uint256)": "14bfd6d0",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"calculateReward(address)": "d82e3962",
							"changeOwner(address)": "a6f9dae1",
							"decimals()": "313ce567",
							"difficulty()": "19cae462",
							"getAdmins()": "31ae450b",
							"isAdmin(address)": "24d7806c",
							"lastStakeTime(address)": "7bb1ca19",
							"lastUnstakeTime(address)": "331e03a8",
							"mine(uint256)": "4d474898",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeAdmin(address)": "1785f53c",
							"renounceOwnership()": "715018a6",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"setDifficulty(uint256)": "602512e1",
							"setRewardRate(uint256)": "9e447fc6",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"symbol()": "95d89b41",
							"totalMined()": "5556db65",
							"totalStaked()": "817b1cd2",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78",
							"withdrawRewards()": "c7b8981c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COOLDOWN_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"difficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastStakeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastUnstakeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"mine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adminToRemove\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_difficulty\",\"type\":\"uint256\"}],\"name\":\"setDifficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMined\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/regalium.sol\":\"RegaliumToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/regalium.sol\":{\"keccak256\":\"0x4e529ec9eb65e6d7956440726d832927ab71843f1f762c91eac1c883f475fc62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01d37d8b79ca04d938776ccf42840d902f7ebd27e2211c5bdedcc9f803fdcb11\",\"dweb:/ipfs/QmQs5FTJbmTMugjdm7RfFgEacTJ4tmnS5rdPZzkdbSoWMY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 999,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "totalMined",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1004,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "difficulty",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1008,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "stakes",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1012,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "rewards",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1016,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "lastStakeTime",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1020,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "lastUnstakeTime",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1022,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "totalStaked",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1025,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "rewardRate",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1031,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "admins",
								"offset": 0,
								"slot": "14",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1035,
								"contract": "contracts/regalium.sol:RegaliumToken",
								"label": "isAdmin",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/regalium.sol": {
				"ast": {
					"absolutePath": "contracts/regalium.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"Ownable": [
							147
						],
						"RegaliumToken": [
							1503
						]
					},
					"id": 1504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 800,
							"src": "61:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 924,
							"src": "118:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 148,
							"src": "194:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "ERC20",
										"nameLocations": [
											"276:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "276:5:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "276:5:7"
								},
								{
									"baseName": {
										"id": 987,
										"name": "ERC20Burnable",
										"nameLocations": [
											"283:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "283:13:7"
									},
									"id": 988,
									"nodeType": "InheritanceSpecifier",
									"src": "283:13:7"
								},
								{
									"baseName": {
										"id": 989,
										"name": "Ownable",
										"nameLocations": [
											"298:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "298:7:7"
									},
									"id": 990,
									"nodeType": "InheritanceSpecifier",
									"src": "298:7:7"
								}
							],
							"canonicalName": "RegaliumToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1503,
							"linearizedBaseContracts": [
								1503,
								147,
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "RegaliumToken",
							"nameLocation": "259:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 997,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "339:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "315:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 991,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "315:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000000000"
										},
										"id": 996,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530303030303030",
											"id": 992,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "352:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50000000_by_1",
												"typeString": "int_const 50000000"
											},
											"value": "50000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 995,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 993,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "363:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 994,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "367:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "363:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "352:17:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5556db65",
									"id": 999,
									"mutability": "mutable",
									"name": "totalMined",
									"nameLocation": "391:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "376:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 998,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "376:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19cae462",
									"id": 1004,
									"mutability": "mutable",
									"name": "difficulty",
									"nameLocation": "423:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "408:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1000,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										},
										"id": 1003,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1001,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "436:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3130",
											"id": 1002,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "440:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"src": "436:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 1008,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "486:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "451:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1007,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1005,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "459:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "451:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1006,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "470:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 1012,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "534:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "499:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1011,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1009,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "507:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "499:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1010,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "518:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7bb1ca19",
									"id": 1016,
									"mutability": "mutable",
									"name": "lastStakeTime",
									"nameLocation": "583:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "548:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1015,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1013,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "556:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "548:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1014,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "567:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "331e03a8",
									"id": 1020,
									"mutability": "mutable",
									"name": "lastUnstakeTime",
									"nameLocation": "638:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "603:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1019,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1017,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "611:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "603:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1018,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "622:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1022,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "675:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "660:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1021,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "660:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 1025,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "708:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "693:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1023,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "693:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1024,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "721:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6e99d52f",
									"id": 1028,
									"mutability": "constant",
									"name": "COOLDOWN_PERIOD",
									"nameLocation": "757:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "733:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1026,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "733:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1027,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "775:6:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "14bfd6d0",
									"id": 1031,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "807:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "790:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1029,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "790:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1030,
										"nodeType": "ArrayTypeName",
										"src": "790:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24d7806c",
									"id": 1035,
									"mutability": "mutable",
									"name": "isAdmin",
									"nameLocation": "852:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "820:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1034,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1032,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "828:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "820:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1033,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "839:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "889:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1038,
																"name": "isAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "908:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1041,
															"indexExpression": {
																"expression": {
																	"id": 1039,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "916:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "920:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "916:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "908:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e2061646d696e",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "929:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															},
															"value": "Not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															}
														],
														"id": 1037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "900:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "900:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "900:44:7"
											},
											{
												"id": 1045,
												"nodeType": "PlaceholderStatement",
												"src": "955:1:7"
											}
										]
									},
									"id": 1047,
									"name": "onlyAdmin",
									"nameLocation": "877:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:2:7"
									},
									"src": "868:96:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "1060:192:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1060,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "1089:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1061,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "1103:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1116:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "1103:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1121:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1103:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "_mintWithCapCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1071:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1071:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "1071:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "1192:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1068,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "1180:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1187:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1180:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "1180:25:7"
											},
											{
												"expression": {
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1074,
															"name": "isAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "1216:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1076,
														"indexExpression": {
															"id": 1075,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "1224:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1216:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1240:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1216:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "1216:28:7"
											}
										]
									},
									"id": 1081,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "526567616c69756d20546f6b656e",
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1012:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e6076c828f35606a81984d6c83b15602626cc684c73a4c49cb0aef09660a4ac3",
														"typeString": "literal_string \"Regalium Token\""
													},
													"value": "Regalium Token"
												},
												{
													"hexValue": "52474c4d",
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1030:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8953420fd3d0163b04885124591906e9a4eb80edce319cfab8c910c8e8f3e303",
														"typeString": "literal_string \"RGLM\""
													},
													"value": "RGLM"
												}
											],
											"id": 1054,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1051,
												"name": "ERC20",
												"nameLocations": [
													"1006:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1006:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1006:31:7"
										},
										{
											"arguments": [
												{
													"id": 1056,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1049,
													"src": "1046:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1057,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1055,
												"name": "Ownable",
												"nameLocations": [
													"1038:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1038:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "992:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "984:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:22:7"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1060:0:7"
									},
									"scope": 1503,
									"src": "972:280:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "1392:127:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1089,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1411:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1411:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1091,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "1427:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1411:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1093,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "1437:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1411:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e672065786365656473206d617820737570706c79",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1449:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab",
																"typeString": "literal_string \"Minting exceeds max supply\""
															},
															"value": "Minting exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c90302ffbf7b49421465d4ced430c4b5bc6feec6e724df81bf32c9219754bab",
																"typeString": "literal_string \"Minting exceeds max supply\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "1403:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1099,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "1495:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1100,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "1504:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1098,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1489:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1489:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "1489:22:7"
											}
										]
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintWithCapCheck",
									"nameLocation": "1332:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1358:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1350:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1375:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1367:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1349:33:7"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1392:0:7"
									},
									"scope": 1503,
									"src": "1323:196:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "1591:372:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1110,
																"name": "totalMined",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "1610:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1111,
																		"name": "MAX_SUPPLY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "1623:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3830",
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1636:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	"src": "1623:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1641:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1623:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1610:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e73206d696e6564",
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1646:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f",
																"typeString": "literal_string \"All tokens mined\""
															},
															"value": "All tokens mined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6bbbeebf4ec8afbf9831efd118e1861f2076c41814908f035ed58430167e96f",
																"typeString": "literal_string \"All tokens mined\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1602:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1602:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "1602:63:7"
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "1686:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "1678:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1120,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1678:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1125,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1720:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1724:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1720:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1127,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "1732:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1123,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1703:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1707:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1703:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1703:35:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1122,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1693:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1693:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1678:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1134,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "1766:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1758:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1132,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1758:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1758:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1136,
																"name": "difficulty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "1774:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1758:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696e6720646966666963756c7479206e6f74206d6574",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1786:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c",
																"typeString": "literal_string \"Mining difficulty not met\""
															},
															"value": "Mining difficulty not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_31105954fbafd692658705ff2d17b632335a1fcbfe4a75234dd378cb985a5a9c",
																"typeString": "literal_string \"Mining difficulty not met\""
															}
														],
														"id": 1131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1750:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "1750:64:7"
											},
											{
												"assignments": [
													1142
												],
												"declarations": [
													{
														"constant": false,
														"id": 1142,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1835:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "1827:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1827:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_rational_50000000000000000000_by_1",
														"typeString": "int_const 50000000000000000000"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3530",
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1844:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1849:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1853:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "1849:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "1844:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50000000000000000000_by_1",
														"typeString": "int_const 50000000000000000000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1827:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1150,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1905:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1909:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1905:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "1917:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1149,
														"name": "_mintWithCapCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1887:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1887:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "1887:37:7"
											},
											{
												"expression": {
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1155,
														"name": "totalMined",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "1935:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1156,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "1949:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1935:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "1935:20:7"
											}
										]
									},
									"functionSelector": "4d474898",
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mine",
									"nameLocation": "1564:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1577:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1569:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1568:15:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:0:7"
									},
									"scope": 1503,
									"src": "1555:408:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "2040:349:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1166,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "2059:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2068:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2059:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2071:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															},
															"value": "Cannot stake 0 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															}
														],
														"id": 1165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2051:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2051:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "2051:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1173,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2114:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2120:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2114:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1175,
																		"name": "lastUnstakeTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "2133:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1178,
																	"indexExpression": {
																		"expression": {
																			"id": 1176,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2149:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2153:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2149:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2133:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1179,
																	"name": "COOLDOWN_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "2163:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2133:45:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2114:64:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6f6c646f776e20706572696f64206e6f74206d657420666f72207374616b696e67",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2180:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7",
																"typeString": "literal_string \"Cooldown period not met for staking\""
															},
															"value": "Cooldown period not met for staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfd60379b5869e8304d76f8a55d36e4f32ed8754bc556f5855170f5ac637c8b7",
																"typeString": "literal_string \"Cooldown period not met for staking\""
															}
														],
														"id": 1172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2106:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2106:112:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "2106:112:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1186,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2237:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2241:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2237:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "2249:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1185,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2231:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2231:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "2231:25:7"
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1191,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "2267:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1194,
														"indexExpression": {
															"expression": {
																"id": 1192,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2274:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2278:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2274:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2267:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1195,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2289:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2267:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "2267:28:7"
											},
											{
												"expression": {
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1198,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "2306:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1199,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2321:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2306:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "2306:21:7"
											},
											{
												"expression": {
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1202,
															"name": "lastStakeTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2338:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1205,
														"indexExpression": {
															"expression": {
																"id": 1203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2352:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2356:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2352:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2338:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1206,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2366:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2372:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2366:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2338:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "2338:43:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "2011:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2025:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2017:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2017:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2016:16:7"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:7"
									},
									"scope": 1503,
									"src": "2002:387:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "2470:374:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1217,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "2489:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1220,
																"indexExpression": {
																	"expression": {
																		"id": 1218,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2496:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2500:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2496:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2489:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1221,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "2511:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2489:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b652062616c616e6365",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2519:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684",
																"typeString": "literal_string \"Insufficient stake balance\""
															},
															"value": "Insufficient stake balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d150cfe0755ea1b3591264ab1a6d85bf472e8dde15a906a3ec97bdf286a0684",
																"typeString": "literal_string \"Insufficient stake balance\""
															}
														],
														"id": 1216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2481:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2481:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "2481:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1227,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2567:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2573:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2567:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1229,
																		"name": "lastStakeTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "2586:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1232,
																	"indexExpression": {
																		"expression": {
																			"id": 1230,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2600:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2604:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2600:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2586:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1233,
																	"name": "COOLDOWN_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "2614:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2586:43:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2567:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6f6c646f776e20706572696f64206e6f74206d657420666f7220756e7374616b696e67",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2631:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21",
																"typeString": "literal_string \"Cooldown period not met for unstaking\""
															},
															"value": "Cooldown period not met for unstaking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6dd4a0f4b0bf0d010004c39af9f29e03114c3c2c8c59e16670d8198bf9e41a21",
																"typeString": "literal_string \"Cooldown period not met for unstaking\""
															}
														],
														"id": 1226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2559:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2559:112:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "2559:112:7"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1239,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "2684:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1242,
														"indexExpression": {
															"expression": {
																"id": 1240,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2691:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2695:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2691:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2684:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1243,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "2706:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2684:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "2684:28:7"
											},
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "2723:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1247,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "2738:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2723:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "2723:21:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2761:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2765:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2761:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "2773:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1250,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2755:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2755:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "2755:25:7"
											},
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1256,
															"name": "lastUnstakeTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2791:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1259,
														"indexExpression": {
															"expression": {
																"id": 1257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2807:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2811:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2807:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2791:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1260,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2821:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2827:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2821:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2791:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "2791:45:7"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "2439:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2455:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "2447:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:16:7"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:7"
									},
									"scope": 1503,
									"src": "2430:414:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "2926:189:7",
										"statements": [
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2945:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1295,
														"src": "2937:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2937:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2970:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2974:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2970:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1270,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "2954:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2954:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2937:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1276,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "3000:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3009:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3000:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f207769746864726177",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3012:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
																"typeString": "literal_string \"No rewards to withdraw\""
															},
															"value": "No rewards to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
																"typeString": "literal_string \"No rewards to withdraw\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2992:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2992:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "2992:45:7"
											},
											{
												"expression": {
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1282,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "3048:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1285,
														"indexExpression": {
															"expression": {
																"id": 1283,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3056:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3060:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3056:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3048:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3070:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3048:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "3048:23:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1290,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3088:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3092:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3088:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "3100:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1289,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "3082:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3082:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "3082:25:7"
											}
										]
									},
									"functionSelector": "c7b8981c",
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawRewards",
									"nameLocation": "2901:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:2:7"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:7"
									},
									"scope": 1503,
									"src": "2892:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "3232:457:7",
										"statements": [
											{
												"assignments": [
													1304
												],
												"declarations": [
													{
														"constant": false,
														"id": 1304,
														"mutability": "mutable",
														"name": "accumulatedReward",
														"nameLocation": "3251:17:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "3243:25:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3243:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1305,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "3271:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1307,
															"indexExpression": {
																"id": 1306,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "3278:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3271:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1308,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "3288:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3271:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3301:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "3271:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3243:63:7"
											},
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "3399:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "3391:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3391:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1318,
												"initialValue": {
													"baseExpression": {
														"id": 1315,
														"name": "lastStakeTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "3410:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1317,
													"indexExpression": {
														"id": 1316,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "3424:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3410:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3391:40:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "lastTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "3446:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3457:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3446:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1345,
												"nodeType": "IfStatement",
												"src": "3442:185:7",
												"trueBody": {
													"id": 1344,
													"nodeType": "Block",
													"src": "3460:167:7",
													"statements": [
														{
															"assignments": [
																1323
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1323,
																	"mutability": "mutable",
																	"name": "timeDiff",
																	"nameLocation": "3483:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1344,
																	"src": "3475:16:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1322,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3475:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1328,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1324,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3494:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3500:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3494:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1326,
																	"name": "lastTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "3512:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3494:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3475:45:7"
														},
														{
															"expression": {
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1329,
																	"name": "accumulatedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1304,
																	"src": "3535:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1330,
																					"name": "stakes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "3556:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1332,
																				"indexExpression": {
																					"id": 1331,
																					"name": "staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1298,
																					"src": "3563:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3556:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1333,
																				"name": "rewardRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1025,
																				"src": "3573:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3556:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1335,
																			"name": "timeDiff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "3586:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3556:38:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_315360000000_by_1",
																					"typeString": "int_const 315360000000"
																				},
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130303030",
																					"id": 1337,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3598:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "333635",
																					"id": 1338,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3606:8:7",
																					"subdenomination": "days",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_31536000_by_1",
																						"typeString": "int_const 31536000"
																					},
																					"value": "365"
																				},
																				"src": "3598:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_315360000000_by_1",
																					"typeString": "int_const 315360000000"
																				}
																			}
																		],
																		"id": 1340,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3597:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_315360000000_by_1",
																			"typeString": "int_const 315360000000"
																		}
																	},
																	"src": "3556:59:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3535:80:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1343,
															"nodeType": "ExpressionStatement",
															"src": "3535:80:7"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1346,
														"name": "accumulatedReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "3646:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 1347,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "3666:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1349,
														"indexExpression": {
															"id": 1348,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "3674:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3666:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3646:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1302,
												"id": 1351,
												"nodeType": "Return",
												"src": "3639:42:7"
											}
										]
									},
									"functionSelector": "d82e3962",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "3170:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "3194:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "3186:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3186:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3185:16:7"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "3223:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3223:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3222:9:7"
									},
									"scope": 1503,
									"src": "3161:528:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "3774:133:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3793:18:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1361,
																	"name": "isAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "3794:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1363,
																"indexExpression": {
																	"id": 1362,
																	"name": "newAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "3802:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3794:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920616e2061646d696e",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3813:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9",
																"typeString": "literal_string \"Already an admin\""
															},
															"value": "Already an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49923250cc229cbadecac75d9c77fdeedfe037e799dfc6dc14514fe79d1acbd9",
																"typeString": "literal_string \"Already an admin\""
															}
														],
														"id": 1360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3785:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3785:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "3785:47:7"
											},
											{
												"expression": {
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1368,
															"name": "isAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3843:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1370,
														"indexExpression": {
															"id": 1369,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "3851:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3843:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3863:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3843:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "3843:24:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1377,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "3890:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1374,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "3878:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3885:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3878:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3878:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "3878:21:7"
											}
										]
									},
									"functionSelector": "70480275",
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1357,
												"name": "onlyOwner",
												"nameLocations": [
													"3764:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3764:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3764:9:7"
										}
									],
									"name": "addAdmin",
									"nameLocation": "3730:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3747:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "3739:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:18:7"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3774:0:7"
									},
									"scope": 1503,
									"src": "3721:186:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "3976:417:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1389,
																"name": "isAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "3995:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1391,
															"indexExpression": {
																"id": 1390,
																"name": "adminToRemove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "4003:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3995:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e2061646d696e",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4019:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															},
															"value": "Not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															}
														],
														"id": 1388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3987:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3987:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "3987:47:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1396,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "4053:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4060:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4053:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4069:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4053:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742072656d6f766520746865206c6173742061646d696e",
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5",
																"typeString": "literal_string \"Cannot remove the last admin\""
															},
															"value": "Cannot remove the last admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41e664af9f6afb04eb36044ef63acf92cc6525b5856dfa5bf2b92bf019a46bd5",
																"typeString": "literal_string \"Cannot remove the last admin\""
															}
														],
														"id": 1395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4045:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4045:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "4045:58:7"
											},
											{
												"expression": {
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1403,
															"name": "isAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "4116:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1405,
														"indexExpression": {
															"id": 1404,
															"name": "adminToRemove",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "4124:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4116:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4141:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4116:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "4116:30:7"
											},
											{
												"body": {
													"id": 1444,
													"nodeType": "Block",
													"src": "4201:185:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1420,
																		"name": "admins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "4220:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1422,
																	"indexExpression": {
																		"id": 1421,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "4227:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4220:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1423,
																	"name": "adminToRemove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "4233:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4220:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1443,
															"nodeType": "IfStatement",
															"src": "4216:159:7",
															"trueBody": {
																"id": 1442,
																"nodeType": "Block",
																"src": "4248:127:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1425,
																					"name": "admins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1031,
																					"src": "4267:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1427,
																				"indexExpression": {
																					"id": 1426,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "4274:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4267:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1428,
																					"name": "admins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1031,
																					"src": "4279:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1433,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1429,
																							"name": "admins",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1031,
																							"src": "4286:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1430,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4293:6:7",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "4286:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4302:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4286:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4279:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4267:37:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1435,
																		"nodeType": "ExpressionStatement",
																		"src": "4267:37:7"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1436,
																					"name": "admins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1031,
																					"src": "4323:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4330:3:7",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "4323:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4323:12:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1440,
																		"nodeType": "ExpressionStatement",
																		"src": "4323:12:7"
																	},
																	{
																		"id": 1441,
																		"nodeType": "Break",
																		"src": "4354:5:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1413,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "4177:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1414,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "4181:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4188:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4181:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4177:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1445,
												"initializationExpression": {
													"assignments": [
														1410
													],
													"declarations": [
														{
															"constant": false,
															"id": 1410,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4170:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1445,
															"src": "4162:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1409,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4162:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1412,
													"initialValue": {
														"hexValue": "30",
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4174:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4162:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4196:3:7",
														"subExpression": {
															"id": 1417,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "4196:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1419,
													"nodeType": "ExpressionStatement",
													"src": "4196:3:7"
												},
												"nodeType": "ForStatement",
												"src": "4157:229:7"
											}
										]
									},
									"functionSelector": "1785f53c",
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1386,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1385,
												"name": "onlyOwner",
												"nameLocations": [
													"3966:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3966:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3966:9:7"
										}
									],
									"name": "removeAdmin",
									"nameLocation": "3924:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "adminToRemove",
												"nameLocation": "3944:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3936:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3935:23:7"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3976:0:7"
									},
									"scope": 1503,
									"src": "3915:478:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "4462:43:7",
										"statements": [
											{
												"expression": {
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1454,
														"name": "difficulty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "4473:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1455,
														"name": "_difficulty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "4486:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4473:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "4473:24:7"
											}
										]
									},
									"functionSelector": "602512e1",
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1452,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1451,
												"name": "onlyAdmin",
												"nameLocations": [
													"4452:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1047,
												"src": "4452:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4452:9:7"
										}
									],
									"name": "setDifficulty",
									"nameLocation": "4410:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "_difficulty",
												"nameLocation": "4432:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "4424:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4424:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4423:21:7"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4462:0:7"
									},
									"scope": 1503,
									"src": "4401:104:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "4574:43:7",
										"statements": [
											{
												"expression": {
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1466,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "4585:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1467,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "4598:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4585:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "4585:24:7"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1463,
												"name": "onlyAdmin",
												"nameLocations": [
													"4564:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1047,
												"src": "4564:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4564:9:7"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "4522:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "4544:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "4536:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4536:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:21:7"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4574:0:7"
									},
									"scope": 1503,
									"src": "4513:104:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "4681:110:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1479,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "4700:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4720:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4712:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1480,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4712:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4712:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4700:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e6577206f776e6572",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4724:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b",
																"typeString": "literal_string \"Invalid new owner\""
															},
															"value": "Invalid new owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b",
																"typeString": "literal_string \"Invalid new owner\""
															}
														],
														"id": 1478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4692:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4692:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "4692:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1489,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "4774:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1488,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4755:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4755:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "4755:28:7"
											}
										]
									},
									"functionSelector": "a6f9dae1",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1476,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1475,
												"name": "onlyOwner",
												"nameLocations": [
													"4671:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4671:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4671:9:7"
										}
									],
									"name": "changeOwner",
									"nameLocation": "4634:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4654:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4646:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4646:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4645:18:7"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4681:0:7"
									},
									"scope": 1503,
									"src": "4625:166:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "4859:32:7",
										"statements": [
											{
												"expression": {
													"id": 1499,
													"name": "admins",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1031,
													"src": "4877:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1500,
												"nodeType": "Return",
												"src": "4870:13:7"
											}
										]
									},
									"functionSelector": "31ae450b",
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmins",
									"nameLocation": "4808:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4817:2:7"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "4841:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1495,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4841:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1496,
													"nodeType": "ArrayTypeName",
													"src": "4841:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4840:18:7"
									},
									"scope": 1503,
									"src": "4799:92:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1504,
							"src": "250:4644:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:4863:7"
				},
				"id": 7
			}
		}
	}
}